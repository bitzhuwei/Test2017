<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CSharpGL</name>
    </assembly>
    <members>
        <member name="T:CSharpGL.IBoundingBox">
            <summary>
            Specify a cuboid that marks a model's edges.
            </summary>
        </member>
        <member name="P:CSharpGL.IBoundingBox.MaxPosition">
            <summary>
            Maximum position of this cuboid.
            </summary>
        </member>
        <member name="P:CSharpGL.IBoundingBox.MinPosition">
            <summary>
            Minimum position of this cuboid.
            </summary>
        </member>
        <member name="T:CSharpGL.IBoundingBox2D">
            <summary>
            Specify a cuboid that marks a model's edges.
            </summary>
        </member>
        <member name="P:CSharpGL.IBoundingBox2D.MaxPosition">
            <summary>
            Maximum position of this cuboid.
            </summary>
        </member>
        <member name="P:CSharpGL.IBoundingBox2D.MinPosition">
            <summary>
            Minimum position of this cuboid.
            </summary>
        </member>
        <member name="T:CSharpGL.MarkableStruct`1">
            <summary>
            Keeps a struct value and records the latest time when is it's udpated.
            </summary>
        </member>
        <member name="M:CSharpGL.MarkableStruct`1.#ctor(`0)">
            <summary>
            Records time when is a property is updated and uploaded.
            </summary>
            <param name="value">value.</param>
        </member>
        <member name="M:CSharpGL.MarkableStruct`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.MarkableStruct`1.Value">
            <summary>
            Kept value.
            </summary>
        </member>
        <member name="P:CSharpGL.MarkableStruct`1.UpdateTicks">
            <summary>
            The latest time when the value is updated.
            </summary>
        </member>
        <member name="T:CSharpGL.UnmanagedArrayBase">
            <summary>
            Base type of unmanaged array.
            <para>Similar to array in <code>int array[Length];</code></para>
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Creats an unmanaged array instance whose content will be disposed by someone else.
            </summary>
            <param name="header"></param>
            <param name="elementCount"></param>
            <param name="elementSize"></param>
        </member>
        <member name="F:CSharpGL.UnmanagedArrayBase.allocatedCount">
            <summary>
            How many <see cref="T:CSharpGL.UnmanagedArrayBase"/> allocated?
            <para>Only used for debugging.</para>
            </summary>
        </member>
        <member name="F:CSharpGL.UnmanagedArrayBase.disposedCount">
            <summary>
            How many <see cref="T:CSharpGL.UnmanagedArrayBase"/> released?
            <para>Only used for debugging.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.UnmanagedArrayBase.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="F:CSharpGL.UnmanagedArrayBase.manualDispose">
            <summary>
            this array's content will be disposed by someone else.
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.DisposeUnmanagedResources">
            <summary>
            Dispose unmanaged resources
            </summary>
        </member>
        <member name="F:CSharpGL.UnmanagedArrayBase.elementSize">
            <summary>
            单个元素的字节数。
            <para>How manay bytes for one element of array?</para>
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.#ctor(System.Int32,System.Int32)">
            <summary>
            Base type of unmanaged array.
            <para>Similar to array in <code>int array[Length];</code></para>
            </summary>
            <param name="elementCount">How many elements?</param>
            <param name="elementSize">How manay bytes for one element of array?</param>
        </member>
        <member name="M:CSharpGL.UnmanagedArrayBase.ToString">
            <summary>
            return string.Format("head: {0}, element count: {1}, byte length: {2}",
                this.Header, this.Length, this.ByteLength);
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.UnmanagedArrayBase.Header">
            <summary>
            此非托管数组中的数据在内存中的起始地址
            Start position of array; Head of array; first element's position of array.
            <para>Similar to <code>array</code> in <code>int array[Length];</code></para>
            </summary>
        </member>
        <member name="P:CSharpGL.UnmanagedArrayBase.Length">
            <summary>
            How many elements?
            <para>Similar to <code>Length</code> in <code>int array[Length];</code></para>
            </summary>
        </member>
        <member name="P:CSharpGL.UnmanagedArrayBase.ByteLength">
            <summary>
            申请到的字节数。（元素的总数 * 单个元素的字节数）。
            <para>How many bytes for total array?</para>
            <para>Length * elementSize</para>
            </summary>
        </member>
        <member name="T:CSharpGL.UnmanagedArray`1">
            <summary>
            unmanaged huge array.
            <para>Check http://www.cnblogs.com/bitzhuwei/p/huge-unmanged-array-in-csharp.html </para>
            </summary>
            <typeparam name="T">sbyte, byte, char, short, ushort, int, uint, long, ulong, float, double, decimal, bool or other struct types. enum not supported.</typeparam>
        </member>
        <member name="M:CSharpGL.UnmanagedArray`1.FromHandle(System.IntPtr,System.Int32)">
            <summary>
            Creats an unmanaged array instance whose content will be disposed by someone else.
            </summary>
            <param name="header"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.UnmanagedArray`1.thisTypeAllocatedCount">
            <summary>
            How many <see cref="T:CSharpGL.UnmanagedArray`1"/> objects allocated?
            <para>Only used for debugging.</para>
            </summary>
        </member>
        <member name="F:CSharpGL.UnmanagedArray`1.thisTypeDisposedCount">
            <summary>
            How many <see cref="T:CSharpGL.UnmanagedArray`1"/> objects released?
            <para>Only used for debugging.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArray`1.DisposeUnmanagedResources">
            <summary>
            Dispose unmanaged resources
            </summary>
        </member>
        <member name="M:CSharpGL.UnmanagedArray`1.#ctor(System.Int32)">
            <summary>
            unmanaged array.
            </summary>
            <param name="count"></param>
        </member>
        <member name="P:CSharpGL.UnmanagedArray`1.Item(System.Int32)">
            <summary>
            gets/sets element's value at specified <paramref name="index"/>.
            <para>Please use unsafe way when dealing with big data for efficiency purpose.</para>
            获取或设置索引为<paramref name="index"/>的元素。
            <para>如果要处理的元素数目较大，请使用unsafe方式（为提高效率）。</para>
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.ModelMatrixHelper">
            <summary>
            treat <see cref="T:CSharpGL.mat4"/> as a matrix that transform object from model's space to world's space.
            </summary>
        </member>
        <member name="M:CSharpGL.ModelMatrixHelper.ToQuaternion(CSharpGL.mat4)">
            <summary>
            Gets rotate factor in specified <paramref name="matrix"/>.
            <para>vec4.w means angle in radius, (vec4.x, vec4.y, vec4.z) means rotation axis.</para>
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ModelMatrixHelper.GetTranslate(CSharpGL.mat4)">
            <summary>
            Gets translate factor in specified <paramref name="matrix"/>.
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.dvec2">
            <summary>
            Represents a two dimensional vector.
            </summary>
        </member>
        <member name="T:CSharpGL.ILoadFromString">
            <summary>
            Load an instance from string.
            </summary>
        </member>
        <member name="M:CSharpGL.ILoadFromString.Load(System.String)">
            <summary>
            Load values for this instance from a string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.dvec2.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.dvec2.y">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.dvec2.#ctor(System.Double)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.dvec2.#ctor(System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:CSharpGL.dvec2.#ctor(CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.dvec2.#ctor(CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.dvec2.#ctor(CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.dvec2.op_UnaryNegation(CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Subtraction(CSharpGL.dvec2,CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Subtraction(CSharpGL.dvec2,System.Double)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Inequality(CSharpGL.dvec2,CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Multiply(CSharpGL.dvec2,System.Double)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Multiply(System.Double,CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Multiply(CSharpGL.dvec2,CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Division(CSharpGL.dvec2,System.Double)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Addition(CSharpGL.dvec2,CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Addition(CSharpGL.dvec2,System.Double)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.op_Equality(CSharpGL.dvec2,CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.dot(CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.Equals(CSharpGL.dvec2)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec2.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.dvec2.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.dvec3">
            <summary>
            Represents a three dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.dvec3.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.dvec3.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.dvec3.z">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.dvec3.#ctor(System.Double)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.dvec3.#ctor(System.Double,System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.dvec3.#ctor(CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.dvec3.#ctor(CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.dvec3.#ctor(CSharpGL.dvec2,System.Double)">
             <summary>
            
             </summary>
             <param name="xy"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.dvec3.op_UnaryNegation(CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Subtraction(CSharpGL.dvec3,CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Inequality(CSharpGL.dvec3,CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Multiply(CSharpGL.dvec3,System.Double)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Multiply(System.Double,CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Multiply(CSharpGL.dvec3,CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Division(CSharpGL.dvec3,System.Double)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Addition(CSharpGL.dvec3,CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.op_Equality(CSharpGL.dvec3,CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.cross(CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.dot(CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.Equals(CSharpGL.dvec3)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec3.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.dvec3.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.dvec4">
            <summary>
            Represents a four dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.dvec4.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.dvec4.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.dvec4.z">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.dvec4.w">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.dvec4.#ctor(System.Double)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.dvec4.#ctor(System.Double,System.Double,System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.dvec4.#ctor(CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.dvec4.#ctor(CSharpGL.dvec3,System.Double)">
             <summary>
            
             </summary>
             <param name="xyz"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.dvec4.op_UnaryNegation(CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Subtraction(CSharpGL.dvec4,CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Inequality(CSharpGL.dvec4,CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Multiply(CSharpGL.dvec4,System.Double)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Multiply(System.Double,CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Multiply(CSharpGL.dvec4,CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Division(CSharpGL.dvec4,System.Double)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Addition(CSharpGL.dvec4,CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.op_Equality(CSharpGL.dvec4,CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.dot(CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.Equals(CSharpGL.dvec4)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.dvec4.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.dvec4.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.Quaternion">
            <summary>
            Quaternion
            </summary>
        </member>
        <member name="F:CSharpGL.Quaternion.w">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Quaternion.x">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Quaternion.y">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Quaternion.z">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Quaternion
            </summary>
            <param name="w"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:CSharpGL.Quaternion.#ctor(System.Single,CSharpGL.vec3)">
            <summary>
            Quaternion from a rotation angle and axis.
            </summary>
            <param name="angleDegree"></param>
            <param name="axis"></param>
        </member>
        <member name="M:CSharpGL.Quaternion.ToRotationMatrix">
            <summary>
            Transform this quaternion to equivalent matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Quaternion.Parse(System.Single@,CSharpGL.vec3@)">
             <summary>
            
             </summary>
             <param name="angleDegree"></param>
             <param name="axis"></param>
        </member>
        <member name="M:CSharpGL.Quaternion.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.FrontFaceMode">
            <summary>
            控制多边形的正面是如何决定的。在默认情况下是GL_CCW。
            </summary>
        </member>
        <member name="F:CSharpGL.FrontFaceMode.CCW">
            <summary>
            GL_CCW 表示窗口坐标上投影多边形的顶点顺序为逆时针方向的表面为正面。
            </summary>
        </member>
        <member name="F:CSharpGL.FrontFaceMode.CW">
            <summary>
            GL_CW 表示顶点顺序为顺时针方向的表面为正面。
            </summary>
        </member>
        <member name="T:CSharpGL.TextureTarget">
            <summary>
            Specifies the target to which the texture is bound. Must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, or GL_TEXTURE_CUBE_MAP.
            </summary>
        </member>
        <member name="F:CSharpGL.TextureTarget.Unknown">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextureTarget.Texture1D">
            <summary>
            The initial value is GL_ZERO
            </summary>
        </member>
        <member name="F:CSharpGL.TextureTarget.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextureTarget.Texture3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextureTarget.TextureCubeMap">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextureTarget.TextureBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.QueryTarget">
            <summary>
            QueryTarget
            </summary>
        </member>
        <member name="F:CSharpGL.QueryTarget.SamplesPassed">
            <summary>
            id must be an unused name, or the name of an existing occlusion query object. When glBeginQuery is executed, the query object's samples-passed counter is reset to 0. Subsequent rendering will increment the counter for every sample that passes the depth test. If the value of GL_SAMPLE_BUFFERS is 0, then the samples-passed count is incremented by 1 for each fragment. If the value of GL_SAMPLE_BUFFERS is 1, then the samples-passed count is incremented by the number of samples whose coverage bit is set. However, implementations, at their discression may instead increase the samples-passed count by the value of GL_SAMPLES if any sample in the fragment is covered. When glEndQuery is executed, the samples-passed counter is assigned to the query object's result value. This value can be queried by calling glGetQueryObject with pname GL_QUERY_RESULT.
            </summary>
        </member>
        <member name="F:CSharpGL.QueryTarget.AnySamplesPassed">
            <summary>
            id must be an unused name, or the name of an existing boolean occlusion query object. When glBeginQuery is executed, the query object's samples-passed flag is reset to GL_FALSE. Subsequent rendering causes the flag to be set to GL_TRUE if any sample passes the depth test in the case of GL_ANY_SAMPLES_PASSED, or if the implementation determines that any sample might pass the depth test in the case of GL_ANY_SAMPLES_PASSED_CONSERVATIVE. The implementation may be able to provide a more efficient test in the case of GL_ANY_SAMPLES_PASSED_CONSERVATIVE if some false positives are acceptable to the application. When glEndQuery is executed, the samples-passed flag is assigned to the query object's result value. This value can be queried by calling glGetQueryObject with pname GL_QUERY_RESULT.
            </summary>
        </member>
        <member name="F:CSharpGL.QueryTarget.AnySamplesPassedConservative">
            <summary>
            id must be an unused name, or the name of an existing boolean occlusion query object. When glBeginQuery is executed, the query object's samples-passed flag is reset to GL_FALSE. Subsequent rendering causes the flag to be set to GL_TRUE if any sample passes the depth test in the case of GL_ANY_SAMPLES_PASSED, or if the implementation determines that any sample might pass the depth test in the case of GL_ANY_SAMPLES_PASSED_CONSERVATIVE. The implementation may be able to provide a more efficient test in the case of GL_ANY_SAMPLES_PASSED_CONSERVATIVE if some false positives are acceptable to the application. When glEndQuery is executed, the samples-passed flag is assigned to the query object's result value. This value can be queried by calling glGetQueryObject with pname GL_QUERY_RESULT.
            </summary>
        </member>
        <member name="F:CSharpGL.QueryTarget.PrimitivesGenerated">
            <summary>
            id must be an unused name, or the name of an existing primitive query object previously bound to the GL_PRIMITIVES_GENERATED query binding. When glBeginQuery is executed, the query object's primitives-generated counter is reset to 0. Subsequent rendering will increment the counter once for every vertex that is emitted from the geometry shader, or from the vertex shader if no geometry shader is present. When glEndQuery is executed, the primitives-generated counter is assigned to the query object's result value. This value can be queried by calling glGetQueryObject with pname GL_QUERY_RESULT.
            </summary>
        </member>
        <member name="F:CSharpGL.QueryTarget.TransformFeedbackPrimitivesWritten">
            <summary>
            id must be an unused name, or the name of an existing primitive query object previously bound to the GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN query binding. When glBeginQuery is executed, the query object's primitives-written counter is reset to 0. Subsequent rendering will increment the counter once for every vertex that is written into the bound transform feedback buffer(s). If transform feedback mode is not activated between the call to glBeginQuery and glEndQuery, the counter will not be incremented. When glEndQuery is executed, the primitives-written counter is assigned to the query object's result value. This value can be queried by calling glGetQueryObject with pname GL_QUERY_RESULT.
            </summary>
        </member>
        <member name="F:CSharpGL.QueryTarget.TimeElapsed">
            <summary>
            id must be an unused name, or the name of an existing timer query object previously bound to the GL_TIME_ELAPSED query binding. When glBeginQuery is executed, the query object's time counter is reset to 0. When glEndQuery is executed, the elapsed server time that has passed since the call to glBeginQuery is written into the query object's time counter. This value can be queried by calling glGetQueryObject with pname GL_QUERY_RESULT.
            </summary>
        </member>
        <member name="T:CSharpGL.ConditionalRenderMode">
            <summary>
            Conditional rendering mode.
            </summary>
        </member>
        <member name="F:CSharpGL.ConditionalRenderMode.QueryWait">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ConditionalRenderMode.QueryNoWait">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ConditionalRenderMode.QueryByRegionWait">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ConditionalRenderMode.QueryByRegionNoWait">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.MipmapTarget">
            <summary>
            Specifies the target to which the texture whose mimaps to generate is bound. target​ must be GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_CUBE_MAP, or GL_TEXTURE_CUBE_MAP_ARRAY
            </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.Texture1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.Texture3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.Texture1DArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.Texture2DArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.TextureCubeMap">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MipmapTarget.TextureCubeMapArray">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TextureWrapping">
            <summary>
            纹理坐标通常的范围是从(0, 0)到(1, 1)，如果我们把纹理坐标设置为范围以外会发生什么？OpenGL默认的行为是重复这个纹理图像（我们简单地忽略浮点纹理坐标的整数部分），但OpenGL提供了更多的选择
            </summary>
        </member>
        <member name="F:CSharpGL.TextureWrapping.Repeat">
            <summary>
            纹理的默认行为。重复纹理图像。
            </summary>
        </member>
        <member name="F:CSharpGL.TextureWrapping.MirroredRepeaet">
            <summary>
            和GL_REPEAT一样，除了重复的图片是镜像放置的。
            </summary>
        </member>
        <member name="F:CSharpGL.TextureWrapping.ClampToEdge">
            <summary>
            纹理坐标会在0到1之间。超出的部分会重复纹理坐标的边缘，就是边缘被拉伸。
            </summary>
        </member>
        <member name="F:CSharpGL.TextureWrapping.ClampToBorder">
            <summary>
            超出的部分是用户指定的边缘的颜色。
            </summary>
        </member>
        <member name="T:CSharpGL.TextureFilter">
            <summary>
            组成纹理的图片数据和其要贴上去的形状的大小往往是不一样的。两种情况，纹理图片小，贴图区域大，需要放大纹理称为：magnification；或者反过来，缩小纹理显示出来，称为 minification.在做放大喝缩小的操作的时候的具体的策略如下
            </summary>
        </member>
        <member name="F:CSharpGL.TextureFilter.Nearest">
            <summary>
            直接选择最临近的像素的颜色，magnification（放大）时：由于多个片元会在同一个纹理像素上面取值，故最终得到的图片颗粒度很大，会有锯齿。
            </summary>
        </member>
        <member name="F:CSharpGL.TextureFilter.Linear">
            <summary>
            根据临近四个的像素点的颜色值，做线性的插值计算，得到最终的颜色。magnification（放大）时：不会产生锯齿，显示更加平滑。
            </summary>
        </member>
        <member name="T:CSharpGL.MipmapFilter">
            <summary>
            Mipmap就是一系列纹理，每个后面的一个纹理是前一个的二分之一，这一系列的纹理是OpenGL生成的，生成时进行了图像质量的优化，使其拥有更多的细节。这一系列的纹理是提前生成的，程序运行时只需要从中挑出合适大小的纹理应用即可，而不是运行时进行图像大小的处理，效率上会有提高。
            OpenGL渲染的时候，两个不同级别的mipmap之间会产生不真实感的生硬的边界。就像普通的纹理过滤一样，也可以在两个不同mipmap级别之间使用NEAREST和LINEAR过滤。指定不同mipmap级别之间的过滤方式可以使用下面四种选项代替原来的过滤方式：
            </summary>
        </member>
        <member name="F:CSharpGL.MipmapFilter.NearestMipmapNearest">
            <summary>
            接收最近的mipmap来匹配像素大小，并使用最临近插值进行纹理采样。
            </summary>
        </member>
        <member name="F:CSharpGL.MipmapFilter.LinearMipmapNearest">
            <summary>
            接收最近的mipmap级别，并使用线性插值采样。
            </summary>
        </member>
        <member name="F:CSharpGL.MipmapFilter.NearestMipmapLinear">
            <summary>
            在两个mipmap之间进行线性插值，通过最邻近插值采样。
            </summary>
        </member>
        <member name="F:CSharpGL.MipmapFilter.LinearMipmapLinear">
            <summary>
            在两个相邻的mipmap进行线性插值，并通过线性插值进行采样。
            </summary>
        </member>
        <member name="T:CSharpGL.BoundingBox">
            <summary>
            Specify a bounding box that marks a model's edges.
            </summary>
        </member>
        <member name="M:CSharpGL.BoundingBox.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BoundingBox.#ctor(CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="min"></param>
             <param name="max"></param>
        </member>
        <member name="M:CSharpGL.BoundingBox.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.BoundingBox.MaxPosition">
            <summary>
            Maximum position of this bounding box.
            </summary>
        </member>
        <member name="P:CSharpGL.BoundingBox.MinPosition">
            <summary>
            Minimum position of this bounding box.
            </summary>
        </member>
        <member name="T:CSharpGL.BoundingBox2D">
            <summary>
            Specify a cuboid that marks a model's edges.
            </summary>
        </member>
        <member name="M:CSharpGL.BoundingBox2D.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BoundingBox2D.#ctor(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="min"></param>
             <param name="max"></param>
        </member>
        <member name="M:CSharpGL.BoundingBox2D.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.BoundingBox2D.MaxPosition">
            <summary>
            Maximum position of this cuboid.
            </summary>
        </member>
        <member name="P:CSharpGL.BoundingBox2D.MinPosition">
            <summary>
            Minimum position of this cuboid.
            </summary>
        </member>
        <member name="T:CSharpGL.IBoundingBoxHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.Max(CSharpGL.vec3,CSharpGL.vec3)">
            <summary>
            Gets all maximum parts from two <see cref="T:CSharpGL.vec3"/>.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.Min(CSharpGL.vec3,CSharpGL.vec3)">
            <summary>
            Gets all minimum parts from two <see cref="T:CSharpGL.vec3"/>.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.GetCenter(CSharpGL.IBoundingBox)">
            <summary>
            Gets center position of this bounding box.
            </summary>
            <param name="boundingBox"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.Union(CSharpGL.IBoundingBox,CSharpGL.IBoundingBox)">
            <summary>
            expand this boudning box's positions to wrap another one.
            </summary>
            <param name="boundingBox"></param>
            <param name="another"></param>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.Expand(CSharpGL.IBoundingBox,System.Single)">
            <summary>
            Expands the <see cref="T:CSharpGL.IBoundingBox"/>'s values.
            </summary>
            <param name="boundingBox"></param>
            <param name="factor">0 for no expanding.</param>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.Render(CSharpGL.IBoundingBox,System.Drawing.Color,CSharpGL.RenderEventArgs)">
            <summary>
            Render this bounding box.
            </summary>
            <param name="boundingBox"></param>
            <param name="color"></param>
            <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.IBoundingBoxHelper.Union(CSharpGL.IBoundingBox,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="box"></param>
             <param name="point"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL">
            <summary>
            </summary>
            <summary>
            The OpenGL class wraps Sun's OpenGL 3D library.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_BYTE_3_3_2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT_4_4_4_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT_5_5_5_1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_8_8_8_8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_10_10_10_2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_SKIP_IMAGES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_IMAGE_HEIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_SKIP_IMAGES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_IMAGE_HEIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_WRAP_R">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_3D_TEXTURE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_BYTE_2_3_3_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT_5_6_5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT_5_6_5_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT_4_4_4_4_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT_1_5_5_5_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_8_8_8_8_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_2_10_10_10_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BGR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BGRA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_ELEMENTS_VERTICES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_ELEMENTS_INDICES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLAMP_TO_EDGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_MIN_LOD">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_MAX_LOD">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BASE_LEVEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_MAX_LEVEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SMOOTH_POINT_SIZE_RANGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SMOOTH_POINT_SIZE_GRANULARITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SMOOTH_LINE_WIDTH_RANGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SMOOTH_LINE_WIDTH_GRANULARITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALIASED_LINE_WIDTH_RANGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE6">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE7">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE9">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE10">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE11">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE13">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE14">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE15">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE17">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE18">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE19">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE20">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE21">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE22">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE23">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE24">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE25">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE26">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE27">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE28">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE29">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE30">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE31">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACTIVE_TEXTURE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MULTISAMPLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLE_ALPHA_TO_COVERAGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLE_ALPHA_TO_ONE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLE_COVERAGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLE_BUFFERS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLE_COVERAGE_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLE_COVERAGE_INVERT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_CUBE_MAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_POSITIVE_X">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_NEGATIVE_X">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_POSITIVE_Y">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_POSITIVE_Z">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_CUBE_MAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_CUBE_MAP_TEXTURE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPRESSED_RGB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPRESSED_RGBA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COMPRESSION_HINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COMPRESSED_IMAGE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COMPRESSED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NUM_COMPRESSED_TEXTURE_FORMATS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPRESSED_TEXTURE_FORMATS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLAMP_TO_BORDER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_COMPONENT24">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MIRRORED_REPEAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ARRAY_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ELEMENT_ARRAY_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_READ_ONLY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_WRITE_ONLY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_READ_WRITE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BUFFER_ACCESS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STREAM_DRAW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STREAM_READ">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STREAM_COPY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STATIC_DRAW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STATIC_READ">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STATIC_COPY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DYNAMIC_DRAW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DYNAMIC_READ">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DYNAMIC_COPY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLES_PASSED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TIME_ELAPSED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_RESULT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_RESULT_AVAILABLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_PROGRAM_POINT_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAGMENT_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPILE_STATUS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINK_STATUS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INFO_LOG_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_BACK_REF">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_BACK_VALUE_MASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_BACK_WRITEMASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_PACK_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_UNPACK_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPARE_REF_TO_TEXTURE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE6">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_DISTANCE7">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_CLIP_DISTANCES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAJOR_VERSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MINOR_VERSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NUM_EXTENSIONS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONTEXT_FLAGS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPRESSED_RED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPRESSED_RG">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA32F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB32F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA16F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB16F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ATTRIB_ARRAY_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_ARRAY_TEXTURE_LAYERS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MIN_PROGRAM_TEXEL_OFFSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_PROGRAM_TEXEL_OFFSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLAMP_READ_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FIXED_ONLY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_VARYING_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_1D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_1D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_2D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_2D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_1D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_2D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R11F_G11F_B10F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_10F_11F_11F_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB9_E5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_5_9_9_9_REV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_SHARED_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_VARYINGS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER_START">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PRIMITIVES_GENERATED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RASTERIZER_DISCARD">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INTERLEAVED_ATTRIBS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SEPARATE_ATTRIBS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA32UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB32UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA16UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB16UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA8UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB8UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA32I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB32I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA16I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB16I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA8I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB8I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RED_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GREEN_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLUE_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BGR_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BGRA_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_1D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_2D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_1D_ARRAY_SHADOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_2D_ARRAY_SHADOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_CUBE_SHADOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_VEC2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_VEC3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_VEC4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_CUBE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_1D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_2D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_CUBE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_WAIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_NO_WAIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_BY_REGION_WAIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_BY_REGION_NO_WAIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BUFFER_ACCESS_FLAGS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BUFFER_MAP_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BUFFER_MAP_OFFSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R16F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R32F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG16F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG32F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R8I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R8UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R16I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R16UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R32I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R32UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG8I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG8UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG16I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG16UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG32I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG32UI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG_INTEGER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_2D_RECT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_2D_RECT_SHADOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SAMPLER_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_2D_RECT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT_SAMPLER_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_2D_RECT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT_SAMPLER_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TEXTURE_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BUFFER_DATA_STORE_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BUFFER_FORMAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_RECTANGLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_RECTANGLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_RECTANGLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_RECTANGLE_TEXTURE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RED_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R8_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG8_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB8_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA8_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R16_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RG16_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB16_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA16_SNORM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SIGNED_NORMALIZED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PRIMITIVE_RESTART">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PRIMITIVE_RESTART_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONTEXT_CORE_PROFILE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINES_ADJACENCY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_STRIP_ADJACENCY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRIANGLES_ADJACENCY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PATCHES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRIANGLE_STRIP_ADJACENCY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROGRAM_POINT_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_ATTACHMENT_LAYERED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GEOMETRY_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GEOMETRY_VERTICES_OUT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GEOMETRY_INPUT_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GEOMETRY_OUTPUT_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_UNIFORM_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_OUTPUT_VERTICES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_VERTEX_OUTPUT_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_INPUT_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_OUTPUT_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAGMENT_INPUT_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONTEXT_PROFILE_MASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_CUBE_MAP_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_CUBE_MAP_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INVALID_FRAMEBUFFER_OPERATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_RENDERBUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_READ_FRAMEBUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DRAW_FRAMEBUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_COMPLETE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_UNDEFINED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_UNSUPPORTED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COLOR_ATTACHMENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAMEBUFFER_WIDTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAMEBUFFER_HEIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAMEBUFFER_LAYERS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAMEBUFFER_SAMPLES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT6">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT7">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT9">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT10">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT11">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT13">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT14">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ATTACHMENT15">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_ATTACHMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_ATTACHMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_STENCIL_ATTACHMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_WIDTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_HEIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_INTERNAL_FORMAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_INDEX1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_INDEX4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_INDEX8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_INDEX16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_RED_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_GREEN_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_BLUE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_ALPHA_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_DEPTH_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERBUFFER_STENCIL_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_DEFAULT_WIDTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_DEFAULT_HEIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_DEFAULT_LAYERS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_DEFAULT_SAMPLES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLES_LOCATIONS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERSION_1_1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LOAD">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RETURN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MULT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ADD">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NEVER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LESS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EQUAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LEQUAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GREATER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NOTEQUAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GEQUAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALWAYS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_STIPPLE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MODE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHTING_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_BUFFER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM_BUFFER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_BUFFER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VIEWPORT_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ENABLE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_BUFFER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COVERAGE_BUFFER_BIT_NV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_HINT_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EVAL_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIST_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SCISSOR_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALL_ATTRIB_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINTS">
            <summary>
            Treats each vertex as a single point. Vertex n defines point n. N points are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINES">
            <summary>
            Treats each pair of vertices as an independent line segment. Vertices 2n - 1 and 2n define line n. N/2 lines are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_LOOP">
            <summary>
            Draws a connected group of line segments from the first vertex to the last, then back to the first. Vertices n and n + 1 define line n. The last line, however, is defined by vertices N and 1. N lines are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_STRIP">
            <summary>
            Draws a connected group of line segments from the first vertex to the last. Vertices n and n+1 define line n. N - 1 lines are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRIANGLES">
            <summary>
            Treats each triplet of vertices as an independent triangle. Vertices 3n - 2, 3n - 1, and 3n define triangle n. N/3 triangles are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRIANGLE_STRIP">
            <summary>
            Draws a connected group of triangles. One triangle is defined for each vertex presented after the first two vertices. For odd n, vertices n, n + 1, and n + 2 define triangle n. For even n, vertices n + 1, n, and n + 2 define triangle n. N - 2 triangles are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRIANGLE_FAN">
            <summary>
            Draws a connected group of triangles. one triangle is defined for each vertex presented after the first two vertices. Vertices 1, n + 1, n + 2 define triangle n. N - 2 triangles are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUADS">
            <summary>
            Treats each group of four vertices as an independent quadrilateral. Vertices 4n - 3, 4n - 2, 4n - 1, and 4n define quadrilateral n. N/4 quadrilaterals are drawn.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUAD_STRIP">
            <summary>
            Draws a connected group of quadrilaterals. One quadrilateral is defined for each pair of vertices presented after the first pair. Vertices 2n - 1, 2n, 2n + 2, and 2n + 1 define quadrilateral n. N/2 - 1 quadrilaterals are drawn. Note that the order in which vertices are used to construct a quadrilateral from strip data is different from that used with independent data.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON">
            <summary>
            Draws a single, convex polygon. Vertices 1 through N define this polygon.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ZERO">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SRC_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE_MINUS_SRC_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SRC_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE_MINUS_SRC_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DST_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE_MINUS_DST_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DST_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE_MINUS_DST_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SRC_ALPHA_SATURATE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONSTANT_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE_MINUS_CONSTANT_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONSTANT_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ONE_MINUS_CONSTANT_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FALSE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_PLANE0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_PLANE1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_PLANE2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_PLANE3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_PLANE4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIP_PLANE5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BYTE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_BYTE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHORT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_SHORT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNSIGNED_INT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FLOAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_2_BYTES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_3_BYTES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_4_BYTES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DOUBLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NONE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.gl_front_left">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.gl_front_right">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.gl_back_left">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BACK_RIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRONT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BACK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LEFT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRONT_AND_BACK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AUX0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AUX1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AUX2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AUX3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NO_ERROR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INVALID_ENUM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INVALID_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INVALID_OPERATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STACK_OVERFLOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STACK_UNDERFLOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_OUT_OF_MEMORY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_4D_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_3D_COLOR_TEXTURE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_4D_COLOR_TEXTURE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PASS_THROUGH_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BITMAP_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DRAW_PIXEL_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COPY_PIXEL_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_RESET_TOKEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EXP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EXP2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CCW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COEFF">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ORDER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DOMAIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_NORMAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_TEXTURE_COORDS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_RASTER_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_RASTER_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_RASTER_TEXTURE_COORDS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_RASTER_POSITION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_RASTER_POSITION_VALID">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CURRENT_RASTER_DISTANCE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_SMOOTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_SIZE_RANGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_SIZE_GRANULARITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_SMOOTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_WIDTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_WIDTH_RANGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_WIDTH_GRANULARITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_STIPPLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_STIPPLE_PATTERN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_STIPPLE_REPEAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIST_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_LIST_NESTING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIST_BASE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIST_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_SMOOTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_STIPPLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EDGE_FLAG">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CULL_FACE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CULL_FACE_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRONT_FACE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHTING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT_MODEL_LOCAL_VIEWER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT_MODEL_TWO_SIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT_MODEL_AMBIENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADE_MODEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_MATERIAL_FACE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_MATERIAL_PARAMETER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_MATERIAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_DENSITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_START">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_END">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_RANGE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_TEST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_WRITEMASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_CLEAR_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_FUNC">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM_CLEAR_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_TEST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_CLEAR_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_FUNC">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_VALUE_MASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_FAIL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_PASS_DEPTH_FAIL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_PASS_DEPTH_PASS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_REF">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_WRITEMASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MATRIX_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NORMALIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VIEWPORT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MODELVIEW_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROJECTION_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MODELVIEW_MATRIX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROJECTION_MATRIX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_MATRIX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ATTRIB_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIENT_ATTRIB_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA_TEST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA_TEST_FUNC">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA_TEST_REF">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DITHER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLEND_DST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLEND_SRC">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLEND">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LOGIC_OP_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_LOGIC_OP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_LOGIC_OP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AUX_BUFFERS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DRAW_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_READ_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SCISSOR_BOX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SCISSOR_TEST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_CLEAR_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_WRITEMASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_CLEAR_VALUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_WRITEMASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DOUBLEBUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STEREO">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDER_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PERSPECTIVE_CORRECTION_HINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_SMOOTH_HINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE_SMOOTH_HINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_SMOOTH_HINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FOG_HINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_GEN_S">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_GEN_T">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_GEN_R">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_GEN_Q">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_I">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_S_TO_S">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_R">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_G">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_B">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_A">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_R_TO_R">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_G_TO_G">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_B_TO_B">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_A_TO_A">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_I_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_S_TO_S_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_R_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_G_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_B_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_I_TO_A_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_R_TO_R_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_G_TO_G_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_B_TO_B_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_MAP_A_TO_A_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_SWAP_BYTES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_LSB_FIRST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_ROW_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_SKIP_ROWS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_SKIP_PIXELS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNPACK_ALIGNMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_SWAP_BYTES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_LSB_FIRST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_ROW_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_SKIP_ROWS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_SKIP_PIXELS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PACK_ALIGNMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_STENCIL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_SHIFT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_OFFSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RED_SCALE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RED_BIAS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ZOOM_X">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ZOOM_Y">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GREEN_SCALE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GREEN_BIAS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLUE_SCALE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLUE_BIAS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA_SCALE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA_BIAS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_SCALE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_BIAS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_EVAL_ORDER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_LIGHTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_CLIP_PLANES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TEXTURE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_PIXEL_MAP_TABLE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_ATTRIB_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_MODELVIEW_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_NAME_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_PROJECTION_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TEXTURE_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_VIEWPORT_DIMS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SUBPIXEL_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RED_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GREEN_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLUE_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM_RED_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM_GREEN_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM_BLUE_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACCUM_ALPHA_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NAME_STACK_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AUTO_NORMAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_COLOR_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_NORMAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_TEXTURE_COORD_1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_TEXTURE_COORD_2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_TEXTURE_COORD_3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_TEXTURE_COORD_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_VERTEX_3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_VERTEX_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_COLOR_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_NORMAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_TEXTURE_COORD_1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_TEXTURE_COORD_2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_TEXTURE_COORD_3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_TEXTURE_COORD_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_VERTEX_3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_VERTEX_4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_GRID_DOMAIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP1_GRID_SEGMENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_GRID_DOMAIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP2_GRID_SEGMENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FEEDBACK_BUFFER_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FEEDBACK_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FEEDBACK_BUFFER_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SELECTION_BUFFER_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SELECTION_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_WIDTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_HEIGHT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_INTERNAL_FORMAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BORDER_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BORDER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DONT_CARE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FASTEST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NICEST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT6">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LIGHT7">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AMBIENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DIFFUSE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SPECULAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POSITION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SPOT_DIRECTION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SPOT_EXPONENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SPOT_CUTOFF">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CONSTANT_ATTENUATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINEAR_ATTENUATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUADRATIC_ATTENUATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPILE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPILE_AND_EXECUTE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLEAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AND">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AND_REVERSE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COPY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AND_INVERTED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NOOP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_XOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_OR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EQUIV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INVERT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_OR_REVERSE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COPY_INVERTED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_OR_INVERTED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NAND">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EMISSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHININESS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_AMBIENT_AND_DIFFUSE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEXES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MODELVIEW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROJECTION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_STENCIL_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH_COMPONENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GREEN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BLUE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE_ALPHA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BITMAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FILL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FEEDBACK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SELECT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FLAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SMOOTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_KEEP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_REPLACE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INCR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DECR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VENDOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RENDERER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EXTENSIONS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_S">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_Q">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MODULATE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DECAL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_ENV_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_ENV_COLOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_ENV">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EYE_LINEAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_OBJECT_LINEAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SPHERE_MAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_GEN_MODE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_OBJECT_PLANE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EYE_PLANE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NEAREST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINEAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NEAREST_MIPMAP_NEAREST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINEAR_MIPMAP_NEAREST">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NEAREST_MIPMAP_LINEAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LINEAR_MIPMAP_LINEAR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_MAG_FILTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_MIN_FILTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_WRAP_S">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_WRAP_T">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_GENERATE_MIPMAP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLAMP">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_REPEAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIENT_PIXEL_STORE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIENT_VERTEX_ARRAY_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIENT_ALL_ATTRIB_BITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_OFFSET_FACTOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_OFFSET_UNITS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_OFFSET_POINT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_OFFSET_LINE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POLYGON_OFFSET_FILL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ALPHA16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE4_ALPHA4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE6_ALPHA2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE8_ALPHA8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE12_ALPHA4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE12_ALPHA12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_LUMINANCE16_ALPHA16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INTENSITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INTENSITY4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INTENSITY8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INTENSITY12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INTENSITY16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_R3_G3_B2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB10">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB5_A1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGB10_A2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_RGBA16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_RED_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_GREEN_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BLUE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_ALPHA_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_LUMINANCE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_INTENSITY_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PROXY_TEXTURE_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_PRIORITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_RESIDENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_BINDING_2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NORMAL_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COORD_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EDGE_FLAG_ARRAY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ARRAY_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ARRAY_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NORMAL_ARRAY_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NORMAL_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ARRAY_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ARRAY_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_ARRAY_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COORD_ARRAY_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COORD_ARRAY_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COORD_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EDGE_FLAG_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ARRAY_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NORMAL_ARRAY_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ARRAY_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_ARRAY_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COORD_ARRAY_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EDGE_FLAG_ARRAY_POINTER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_V2F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_C4UB_V2F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_C4UB_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_C3F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_N3F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_C4F_N3F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T2F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T4F_V4F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T2F_C4UB_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T2F_C3F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T2F_N3F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T2F_C4F_N3F_V3F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_T4F_C4F_N3F_V4F">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EXT_vertex_array">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EXT_bgra">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EXT_paletted_texture">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_WIN_swap_hint">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_WIN_draw_range_elements">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ARRAY_COUNT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_NORMAL_ARRAY_COUNT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_ARRAY_COUNT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_INDEX_ARRAY_COUNT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_COORD_ARRAY_COUNT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_EDGE_FLAG_ARRAY_COUNT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_FORMAT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_WIDTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_RED_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_GREEN_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_BLUE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_ALPHA_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_LUMINANCE_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_TABLE_INTENSITY_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COLOR_INDEX16">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_ELEMENTS_VERTICES_WIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_ELEMENTS_INDICES_WIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PHONG_WIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PHONG_HINT_WIN">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ANY_SAMPLES_PASSED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_POINT_SPRITE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COORD_REPLACE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_MAJOR_VERSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_MINOR_VERSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_LAYER_PLANE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_FLAGS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_PROFILE_MASK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_DEBUG_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_FORWARD_COMPATIBLE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_CORE_PROFILE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.ERROR_INVALID_VERSION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.ERROR_INVALID_PROFILE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMPUTE_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ANY_SAMPLES_PASSED_CONSERVATIVE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BLOCK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BUFFER_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BUFFER_START">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_SHADER_STORAGE_BLOCK_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_STORAGE_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_OUTPUT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_OUTPUT_SYNCHRONOUS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SOURCE_API">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SOURCE_WINDOW_SYSTEM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SOURCE_SHADER_COMPILER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SOURCE_THIRD_PARTY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SOURCE_APPLICATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SOURCE_OTHER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_TYPE_ERROR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_TYPE_PORTABILITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_TYPE_PERFORMANCE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_TYPE_OTHER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SEVERITY_HIGH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SEVERITY_MEDIUM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEBUG_SEVERITY_LOW">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ATOMIC_COUNTER_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BUFFER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BUFFER_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BUFFER_START">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_VERTEX_IMAGE_UNIFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_IMAGE_UNIFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAGMENT_IMAGE_UNIFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_IMAGE_UNIFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_VERTEX_UNIFORM_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_GEOMETRY_UNIFORM_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_FRAGMENT_UNIFORM_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_UNIFORM_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_UNIFORM_BUFFER_BINDINGS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_UNIFORM_BLOCK_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ACTIVE_UNIFORM_BLOCKS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_TYPE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_NAME_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_INDEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_OFFSET">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_ARRAY_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_MATRIX_STRIDE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_IS_ROW_MAJOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_BINDING">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_DATA_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_NAME_LENGTH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_READ_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_WRITE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_INVALIDATE_RANGE_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_INVALIDATE_BUFFER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_FLUSH_EXPLICIT_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_MAP_UNSYNCHRONIZED_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PATCH_VERTICES">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PATCH_DEFAULT_INNER_LEVEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PATCH_DEFAULT_OUTER_LEVEL">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ELEMENT_ARRAY_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_UNIFORM_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_FETCH_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_SHADER_IMAGE_ACCESS_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_COMMAND_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_PIXEL_BUFFER_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TEXTURE_UPDATE_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_BUFFER_UPDATE_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_FRAMEBUFFER_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_TRANSFORM_FEEDBACK_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_ATOMIC_COUNTER_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_QUERY_BUFFER_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.GL_DEPTH24_STENCIL8">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.GenerateMipmap(CSharpGL.MipmapTarget)">
             <summary>
            
             </summary>
             <param name="target"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetDelegateFor``1">
            <summary>
            Returns a delegate for an extension function. This delegate  can be called to execute the extension function.
            </summary>
            <typeparam name="T">The extension delegate type.</typeparam>
            <returns>The delegate that points to the extension function.</returns>
        </member>
        <member name="F:CSharpGL.OpenGL.extensionFunctions">
            <summary>
            The set of extension functions.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.glxGetProcAddress(System.String)">
             <summary>
            
             </summary>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OpenGL.CheckError">
            <summary>
            Check if error exists.
            </summary>
        </member>
        <member name="F:CSharpGL.OpenGL.FOG_SPECULAR_TEXTURE_WIN">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.BindImageTexture(System.UInt32,System.UInt32,System.Int32,System.Boolean,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            bind a level of a texture to an image unit(a uniform image2D in compute shader).
            <para>for more information check http://www.unix.com/man-page/debian/3g/GLBINDIMAGETEXTURE/</para>
            </summary>
            <param name="unit">Specifies the index of the image unit to which to bind the texture.<para>a uniform image2D variable's location.</para></param>
            <param name="texture">Specifies the name of the texture to bind to the image unit.<para>texture's id from glGenTexture().</para></param>
            <param name="level">Specifies the level of the texture that is to be bound.</param>
            <param name="layered">Specifies whether a layered texture binding is to be established.</param>
            <param name="layer">If <paramref name="layered"/>​ is false, specifies the layer of texture​ to be bound to the image unit. Ignored otherwise.</param>
            <param name="access">Specifies a token indicating the type of access that will be performed on the image.<para>OpenGL.GL_READ_ONLY, OpenGL.GL_WRITE_ONLY, OpenGL.GL_READ_WRITE etc.</para></param>
            <param name="format">Specifies the format that the elements of the image will be treated as for the purposes of formatted stores.<para>OpenGL.GL_RGBA32F etc.</para></param>
        </member>
        <member name="M:CSharpGL.OpenGL.Accum(System.UInt32,System.Single)">
            <summary>
            Set the Accumulation Buffer operation.
            </summary>
            <param name="op">Operation of the buffer.</param>
            <param name="value">Reference value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.AlphaFunc(System.UInt32,System.Single)">
            <summary>
            Specify the Alpha Test function.
            </summary>
            <param name="func">Specifies the alpha comparison function. Symbolic constants OpenGL.NEVER, OpenGL.LESS, OpenGL.EQUAL, OpenGL.LEQUAL, OpenGL.GREATER, OpenGL.NOTEQUAL, OpenGL.GEQUAL and OpenGL.ALWAYS are accepted. The initial value is OpenGL.ALWAYS.</param>
            <param name="ref_notkeword">Specifies the reference	value that incoming alpha values are compared to. This value is clamped to the range 0	through	1, where 0 represents the lowest possible alpha value and 1 the highest possible value. The initial reference value is 0.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.AreTexturesResident(System.Int32,System.UInt32[],System.Byte[])">
            <summary>
            Determine if textures are loaded in texture memory.
            </summary>
            <param name="n">Specifies the number of textures to be queried.</param>
            <param name="textures">Specifies an array containing the names of the textures to be queried.</param>
            <param name="residences">Specifies an array in which the texture residence status is returned. The residence status of a texture named by an element of textures is returned in the corresponding element of residences.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OpenGL.ArrayElement(System.Int32)">
            <summary>
            Render a vertex using the specified vertex array element.
            </summary>
            <param name="i">Specifies an index	into the enabled vertex	data arrays.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Begin(System.UInt32)">
             <summary>
            
             </summary>
             <param name="mode"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindTexture(System.UInt32,System.UInt32)">
            <summary>
            Call this function after creating a texture to finalise creation of it,
            or to make an existing texture current.
            </summary>
            <param name="target">The target type, e.g TEXTURE_2D.</param>
            <param name="texture">The OpenGL texture object.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindSampler(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="sampler"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.Bitmap(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Byte[])">
            <summary>
            Draw a bitmap.
            </summary>
            <param name="width">Specify the pixel width	of the bitmap image.</param>
            <param name="height">Specify the pixel height of the bitmap image.</param>
            <param name="xorig">Specify	the location of	the origin in the bitmap image. The origin is measured from the lower left corner of the bitmap, with right and up being the positive axes.</param>
            <param name="yorig">Specify	the location of	the origin in the bitmap image. The origin is measured from the lower left corner of the bitmap, with right and up being the positive axes.</param>
            <param name="xmove">Specify	the x and y offsets to be added	to the current	raster position	after the bitmap is drawn.</param>
            <param name="ymove">Specify	the x and y offsets to be added	to the current	raster position	after the bitmap is drawn.</param>
            <param name="bitmap">Specifies the address of the bitmap image.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.BlendFunc(System.UInt32,System.UInt32)">
            <summary>
            This function sets the current blending function.
            </summary>
            <param name="sfactor">Source factor.</param>
            <param name="dfactor">Destination factor.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CallList(System.UInt32)">
            <summary>
            This function calls a certain display list.
            </summary>
            <param name="list">The display list to call.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CallLists(System.Int32,System.UInt32,System.IntPtr)">
            <summary>
            Execute	a list of display lists.
            </summary>
            <param name="n">Specifies the number of display lists to be executed.</param>
            <param name="type">Specifies the type of values in lists. Symbolic constants OpenGL.BYTE, OpenGL.UNSIGNED_BYTE, OpenGL.SHORT, OpenGL.UNSIGNED_SHORT, OpenGL.INT, OpenGL.UNSIGNED_INT, OpenGL.FLOAT, OpenGL.2_BYTES, OpenGL.3_BYTES and OpenGL.4_BYTES are accepted.</param>
            <param name="lists">Specifies the address of an array of name offsets in the display list. The pointer type is void because the offsets can be bytes, shorts, ints, or floats, depending on the value of type.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CallLists(System.Int32,System.UInt32,System.UInt32[])">
            <summary>
            Execute	a list of display lists. Automatically uses the GL_UNSIGNED_INT version of the function.
            </summary>
            <param name="n">The number of lists.</param>
            <param name="type"></param>
            <param name="lists">The lists.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CallLists(System.Int32,System.UInt32,System.Byte[])">
            <summary>
            Execute	a list of display lists. Automatically uses the GL_UNSIGNED_BYTE version of the function.
            </summary>
            <param name="n">The number of lists.</param>
            <param name="type"></param>
            <param name="lists">The lists.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Clear(System.UInt32)">
            <summary>
            This function clears the buffers specified by mask.
            </summary>
            <param name="mask">Which buffers to clear.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Clear(CSharpGL.ClearBufferMask)">
            <summary>
            This function clears the buffers specified by mask.
            </summary>
            <param name="mask">Which buffers to clear.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ClearAccum(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Specify clear values for the accumulation buffer.
            </summary>
            <param name="red">Specify the red, green, blue and alpha values used when the accumulation buffer is cleared. The initial values are all 0.</param>
            <param name="green">Specify the red, green, blue and alpha values used when the accumulation buffer is cleared. The initial values are all 0.</param>
            <param name="blue">Specify the red, green, blue and alpha values used when the accumulation buffer is cleared. The initial values are all 0.</param>
            <param name="alpha">Specify the red, green, blue and alpha values used when the accumulation buffer is cleared. The initial values are all 0.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.glClearColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This function sets the color that the drawing buffer is 'cleared' to.
            </summary>
            <param name="red">Red component of the color (between 0 and 1).</param>
            <param name="green">Green component of the color (between 0 and 1).</param>
            <param name="blue">Blue component of the color (between 0 and 1)./</param>
            <param name="alpha">Alpha component of the color (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ClearDepth(System.Double)">
            <summary>
            Specify the clear value for the depth buffer.
            </summary>
            <param name="depth">Specifies the depth value used	when the depth buffer is cleared. The initial value is 1.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ClearIndex(System.Single)">
            <summary>
            Specify the clear value for the color index buffers.
            </summary>
            <param name="c">Specifies the index used when the color index buffers are cleared. The initial value is 0.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ClearStencil(System.Int32)">
            <summary>
            Specify the clear value for the stencil buffer.
            </summary>
            <param name="s">Specifies the index used when the stencil buffer is cleared. The initial value is 0.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ClipPlane(System.UInt32,System.Double[])">
            <summary>
            Specify a plane against which all geometry is clipped.
            <para>https://www.opengl.org/sdk/docs/man2/xhtml/glClipPlane.xml</para>
            </summary>
            <param name="plane">Specifies which clipping plane is being positioned. Symbolic names of the form OpenGL.CLIP_PLANEi, where i is an integer between 0 and OpenGL.MAX_CLIP_PLANES -1, are accepted.</param>
            <param name="equation">Specifies the address of an	array of four double-precision floating-point values. These values are interpreted as a plane equation.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3b(System.Byte,System.Byte,System.Byte)">
             <summary>
            
             </summary>
             <param name="red"></param>
             <param name="green"></param>
             <param name="blue"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3bv(System.Byte[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 byte values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3d(System.Double,System.Double,System.Double)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3dv(System.Double[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 double values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3f(System.Single,System.Single,System.Single)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3fv(System.Single[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 float values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3i(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3iv(System.Int32[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3s(System.Int16,System.Int16,System.Int16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3sv(System.Int16[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3ub(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 255).</param>
            <param name="green">Green color component (between 0 and 255).</param>
            <param name="blue">Blue color component (between 0 and 255).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3ubv(System.Byte[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3ui(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3uiv(System.UInt32[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 unsigned int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3us(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color3usv(System.UInt16[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 unsigned short values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4b(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 255).</param>
            <param name="green">Green color component (between 0 and 255).</param>
            <param name="blue">Blue color component (between 0 and 255).</param>
            <param name="alpha">Alpha color component (between 0 and 255).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4bv(System.Byte[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 byte values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4d(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component (between 0 and 255).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4dv(System.Double[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 double values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4f(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4fv(System.Single[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 float values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4i(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4iv(System.Int32[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4s(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4sv(System.Int16[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4ub(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 255).</param>
            <param name="green">Green color component (between 0 and 255).</param>
            <param name="blue">Blue color component (between 0 and 255).</param>
            <param name="alpha">Alpha color component (between 0 and 255).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4ubv(System.Byte[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4ui(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4uiv(System.UInt32[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 unsigned int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4us(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color4usv(System.UInt16[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 unsigned short values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ColorMask(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            enable and disable writing of frame buffer color components.
            <para>Specify whether red, green, blue, and alpha can or cannot be written into the frame buffer. The initial values are all GL_TRUE, indicating that the color components can be written.</para>
            <para>glGet with argument GL_COLOR_WRITEMASK.</para>
            </summary>
            <param name="redWritable">Red component mask.</param>
            <param name="greenWritable">Green component mask.</param>
            <param name="blueWritable">Blue component mask.</param>
            <param name="alphaWritable">Alpha component mask.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ColorMaterial(System.UInt32,System.UInt32)">
            <summary>
            Cause a material color to track the current color.
            </summary>
            <param name="face">Specifies whether front, back, or both front and back material parameters should track the current color. Accepted values are OpenGL.FRONT, OpenGL.BACK, and OpenGL.FRONT_AND_BACK. The initial value is OpenGL.FRONT_AND_BACK.</param>
            <param name="mode">Specifies which	of several material parameters track the current color. Accepted values are	OpenGL.EMISSION, OpenGL.AMBIENT, OpenGL.DIFFUSE, OpenGL.SPECULAR and OpenGL.AMBIENT_AND_DIFFUSE. The initial value is OpenGL.AMBIENT_AND_DIFFUSE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ColorPointer(System.Int32,System.UInt32,System.Int32,System.IntPtr)">
            <summary>
            Define an array of colors.
            </summary>
            <param name="size">Specifies the number	of components per color. Must be 3	or 4.</param>
            <param name="type">Specifies the data type of each color component in the array. Symbolic constants OpenGL.BYTE, OpenGL.UNSIGNED_BYTE, OpenGL.SHORT, OpenGL.UNSIGNED_SHORT, OpenGL.INT, OpenGL.UNSIGNED_INT, OpenGL.FLOAT and OpenGL.DOUBLE are accepted.</param>
            <param name="stride">Specifies the byte offset between consecutive colors. If stride is 0, (the initial value), the colors are understood to be tightly packed in the array.</param>
            <param name="pointer">Specifies a pointer to the first component of the first color element in the array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CopyPixels(System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copy pixels in	the frame buffer.
            </summary>
            <param name="x">Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.</param>
            <param name="y">Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.</param>
            <param name="width">Specify the dimensions of the rectangular region of pixels to be copied. Both must be nonnegative.</param>
            <param name="height">Specify the dimensions of the rectangular region of pixels to be copied. Both must be nonnegative.</param>
            <param name="type">Specifies whether color values, depth values, or stencil values are to be copied. Symbolic constants OpenGL.COLOR, OpenGL.DEPTH, and OpenGL.STENCIL are accepted.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CopyTexImage1D(System.UInt32,System.Int32,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy pixels into a 1D texture image.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_1D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="internalFormat">Specifies the internal format of the texture.</param>
            <param name="x">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="y">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="width">Specifies the width of the texture image. Must be 0 or 2^n = (2 * border) for some integer n. The height of the texture image is 1.</param>
            <param name="border">Specifies the width of the border. Must be either 0 or 1.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CopyTexImage2D(System.UInt32,System.Int32,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy pixels into a	2D texture image.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_2D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="internalFormat">Specifies the internal format of the texture.</param>
            <param name="x">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="y">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="width">Specifies the width of the texture image.</param>
            <param name="height">Specifies the height of the texture image.</param>
            <param name="border">Specifies the width of the border. Must be either 0 or 1.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CopyTexSubImage1D(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy a one-dimensional texture subimage.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_1D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies the texel offset within the texture array.</param>
            <param name="x">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="y">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="width">Specifies the width of the texture image.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CopyTexSubImage2D(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy a two-dimensional texture subimage.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_2D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies the texel offset within the texture array.</param>
            <param name="yoffset">Specifies the texel offset within the texture array.</param>
            <param name="x">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="y">Specify the window coordinates of the left corner of the row of pixels to be copied.</param>
            <param name="width">Specifies the width of the texture image.</param>
            <param name="height">Specifies the height of the texture image.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.CullFace(System.UInt32)">
            <summary>
            Specify whether front- or back-facing facets can be culled.
            </summary>
            <param name="mode">Specifies whether front- or back-facing facets are candidates for culling. Symbolic constants OpenGL.FRONT, OpenGL.BACK, and OpenGL.FRONT_AND_BACK are accepted. The initial	value is OpenGL.BACK.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DeleteLists(System.UInt32,System.Int32)">
            <summary>
            This function deletes a list, or a range of lists.
            </summary>
            <param name="list">The list to delete.</param>
            <param name="range">The range of lists (often just 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.glDeleteTextures(System.Int32,System.UInt32[])">
            <summary>
            This function deletes a set of Texture objects.
            </summary>
            <param name="n">Number of textures to delete.</param>
            <param name="textures">The array containing the names of the textures to delete.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DeleteTextures(System.Int32,System.UInt32[])">
            <summary>
            This function deletes a set of Texture objects.
            </summary>
            <param name="n">Number of textures to delete.</param>
            <param name="textures">The array containing the names of the textures to delete.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DeleteFramebuffers(System.UInt32,System.UInt32[])">
            <summary>
            This function deletes a set of Texture objects.
            </summary>
            <param name="n">Number of textures to delete.</param>
            <param name="framebuffers">The array containing the names of the textures to delete.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DeleteRenderbuffers(System.UInt32,System.UInt32[])">
            <summary>
            This function deletes a set of Texture objects.
            </summary>
            <param name="n">Number of textures to delete.</param>
            <param name="renderbuffers">The array containing the names of the textures to delete.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DeleteBuffers(System.Int32,System.UInt32[])">
            <summary>
            This function deletes a set of vertex buffer objects.
            </summary>
            <param name="n">Number of textures to delete.</param>
            <param name="buffers">The array containing the names of the buffers to delete.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DepthFunc(System.UInt32)">
            <summary>
            This function sets the current depth buffer comparison function, the default it LESS.
            </summary>
            <param name="func">The comparison function to set.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DepthMask(System.Boolean)">
            <summary>
            enable or disable writing into the depth buffer
            <para>允许或禁止向深度缓冲区写入数据</para>
            <para>glGet with argument GL_DEPTH_WRITEMASK</para>
            </summary>
            <param name="writable">Specifies whether the depth buffer is enabled for writing.If flag is GL_FALSE,depth buffer writing is disabled.Otherwise, it is enabled.Initially, depth buffer writing is enabled.
            <para>指定是否允许向深度缓冲区写入数据。如果flag是GL_FLASE，那么向深度缓冲区写入是禁止的。否则，就是允许的。初始时，是允许向深度缓冲区写入数据的。</para></param>
        </member>
        <member name="M:CSharpGL.OpenGL.DepthRange(System.Double,System.Double)">
            <summary>
            Specify mapping of depth values from normalized device coordinates	to window coordinates.
            </summary>
            <param name="zNear">Specifies the mapping of the near clipping plane to window coordinates. The initial value is 0.</param>
            <param name="zFar">Specifies the mapping of the near clipping plane to window coordinates. The initial value is 1.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Disable(System.UInt32)">
            <summary>
            Call this function to disable an OpenGL capability.
            </summary>
            <param name="cap">The capability to disable.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawArrays(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Render	primitives from	array data.
            </summary>
            <param name="mode">Specifies what kind of primitives to render. Symbolic constants OpenGL.POINTS, OpenGL.LINE_STRIP, OpenGL.LINE_LOOP, OpenGL.LINES, OpenGL.TRIANGLE_STRIP, OpenGL.TRIANGLE_FAN, OpenGL.TRIANGLES, OpenGL.QUAD_STRIP, OpenGL.QUADS, and OpenGL.POLYGON are accepted.</param>
            <param name="first">Specifies the starting	index in the enabled arrays.</param>
            <param name="count">Specifies the number of vertexes to be rendered.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawBuffer(System.UInt32)">
            <summary>
            Specify which color buffers are to be drawn into.
            </summary>
            <param name="mode">Specifies up to	four color buffers to be drawn into. Symbolic constants OpenGL.NONE, OpenGL.FRONT_LEFT, OpenGL.FRONT_RIGHT,	OpenGL.BACK_LEFT, OpenGL.BACK_RIGHT, OpenGL.FRONT, OpenGL.BACK, OpenGL.LEFT, OpenGL.RIGHT, OpenGL.FRONT_AND_BACK, and OpenGL.AUXi, where i is between 0 and (OpenGL.AUX_BUFFERS - 1), are accepted (OpenGL.AUX_BUFFERS is not the upper limit; use glGet to query the number of	available aux buffers.)  The initial value is OpenGL.FRONT for single- buffered contexts, and OpenGL.BACK for double-buffered contexts.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawElements(System.UInt32,System.Int32,System.UInt32,System.IntPtr)">
            <summary>
            Render primitives from array data.
            </summary>
            <param name="mode">Specifies what kind of primitives to	render. Symbolic constants OpenGL.POINTS, OpenGL.LINE_STRIP, OpenGL.LINE_LOOP, OpenGL.LINES, OpenGL.TRIANGLE_STRIP, OpenGL.TRIANGLE_FAN, OpenGL.TRIANGLES, OpenGL.QUAD_STRIP, OpenGL.QUADS, and OpenGL.POLYGON are accepted.</param>
            <param name="count">Specifies the number of elements to be rendered.</param>
            <param name="type">Specifies the type of the values in indices.	Must be one of OpenGL.UNSIGNED_BYTE, OpenGL.UNSIGNED_SHORT, or OpenGL.UNSIGNED_INT.</param>
            <param name="indices">Specifies a pointer to the location where the indices are stored.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawElements(System.UInt32,System.Int32,System.UInt32,System.UInt32[])">
            <summary>
            Render primitives from array data.
            </summary>
            <param name="mode">Specifies what kind of primitives to	render. Symbolic constants OpenGL.POINTS, OpenGL.LINE_STRIP, OpenGL.LINE_LOOP, OpenGL.LINES, OpenGL.TRIANGLE_STRIP, OpenGL.TRIANGLE_FAN, OpenGL.TRIANGLES, OpenGL.QUAD_STRIP, OpenGL.QUADS, and OpenGL.POLYGON are accepted.</param>
            <param name="count">Specifies the number of elements to be rendered.</param>
            <param name="type"></param>
            <param name="indices">Specifies a pointer to the location where the indices are stored.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawPixels(System.Int32,System.Int32,System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Draws a rectangle of pixel data at the current raster position.
            </summary>
            <param name="width">Width of pixel data.</param>
            <param name="height">Height of pixel data.</param>
            <param name="format">Format of pixel data.</param>
            <param name="type"></param>
            <param name="pixels">Pixel data buffer.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawPixels(System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32[])">
            <summary>
            Draws a rectangle of pixel data at the current raster position.
            </summary>
            <param name="width">Width of pixel data.</param>
            <param name="height">Height of pixel data.</param>
            <param name="format">Format of pixel data.</param>
            <param name="type"></param>
            <param name="pixels">Pixel data buffer.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawPixels(System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt16[])">
            <summary>
            Draws a rectangle of pixel data at the current raster position.
            </summary>
            <param name="width">Width of pixel data.</param>
            <param name="height">Height of pixel data.</param>
            <param name="format">Format of pixel data.</param>
            <param name="type"></param>
            <param name="pixels">Pixel data buffer.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawPixels(System.Int32,System.Int32,System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Draws a rectangle of pixel data at the current raster position.
            </summary>
            <param name="width">Width of pixel data.</param>
            <param name="height">Height of pixel data.</param>
            <param name="format">Format of pixel data.</param>
            <param name="type"></param>
            <param name="pixels">Pixel data buffer.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawPixels(System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Draws a rectangle of pixel data at the current raster position.
            </summary>
            <param name="width">Width of pixel data.</param>
            <param name="height">Height of pixel data.</param>
            <param name="format">Format of pixel data.</param>
            <param name="type">The GL data type.</param>
            <param name="pixels">Pixel data buffer.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EdgeFlag(System.Byte)">
            <summary>
            Flag edges as either boundary or nonboundary.
            </summary>
            <param name="flag">Specifies the current edge flag	value, either OpenGL.TRUE or OpenGL.FALSE. The initial value is OpenGL.TRUE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EdgeFlagPointer(System.Int32,System.Int32[])">
            <summary>
            Define an array of edge flags.
            </summary>
            <param name="stride">Specifies the byte offset between consecutive edge flags. If stride is	0 (the initial value), the edge	flags are understood to	be tightly packed in the array.</param>
            <param name="pointer">Specifies a pointer to the first edge flag in the array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EdgeFlagv(System.Byte[])">
            <summary>
            Flag edges as either boundary or nonboundary.
            </summary>
            <param name="flag">Specifies a pointer to an array that contains a single boolean element,	which replaces the current edge	flag value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Enable(System.UInt32)">
            <summary>
            Call this function to enable an OpenGL capability.
            </summary>
            <param name="cap">The capability you wish to enable.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EnableClientState(System.UInt32)">
            <summary>
            This function enables one of the client state arrays, such as a vertex array.
            </summary>
            <param name="array">The array to enable.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.End">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.EndList">
            <summary>
            Ends the current display list compilation.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord1d(System.Double)">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord1dv(System.Double[])">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord1f(System.Single)">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord1fv(System.Single[])">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord2d(System.Double,System.Double)">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
            <param name="v">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord2dv(System.Double[])">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord2f(System.Single,System.Single)">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
            <param name="v">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalCoord2fv(System.Single[])">
            <summary>
            Evaluate from the current evaluator.
            <para>Calls glVertex() inside.</para>
            </summary>
            <param name="u">Domain coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalMesh1(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Evaluates a 'mesh' from the current evaluators.
            </summary>
            <param name="mode">Drawing mode, can be POINT or LINE.</param>
            <param name="i1">Beginning of range.</param>
            <param name="i2">End of range.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalMesh2(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Evaluates a 'mesh' from the current evaluators.
            </summary>
            <param name="mode">Drawing mode, fill, point or line.</param>
            <param name="i1">Beginning of range.</param>
            <param name="i2">End of range.</param>
            <param name="j1">Beginning of range.</param>
            <param name="j2">End of range.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalPoint1(System.Int32)">
            <summary>
            Generate and evaluate a single point in a mesh.
            </summary>
            <param name="i">The integer value for grid domain variable i.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.EvalPoint2(System.Int32,System.Int32)">
            <summary>
            Generate and evaluate a single point in a mesh.
            </summary>
            <param name="i">The integer value for grid domain variable i.</param>
            <param name="j">The integer value for grid domain variable j.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.FeedbackBuffer(System.Int32,System.UInt32,System.Single[])">
            <summary>
            This function sets the feedback buffer, that will receive feedback data.
            </summary>
            <param name="size">Size of the buffer.</param>
            <param name="type">Type of data in the buffer.</param>
            <param name="buffer">The buffer itself.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Finish">
            <summary>
            This function is similar to flush, but in a sense does it more, as it
            executes all commands aon both the client and the server.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.Flush">
            <summary>
            This forces OpenGL to execute any commands you have given it.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.Fogf(System.UInt32,System.Single)">
            <summary>
            Sets a fog parameter.
            </summary>
            <param name="pname">The parameter to set.</param>
            <param name="param">The value to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Fogfv(System.UInt32,System.Single[])">
            <summary>
            Sets a fog parameter.
            </summary>
            <param name="pname">The parameter to set.</param>
            <param name="parameters">The values to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Fogi(System.UInt32,System.Int32)">
            <summary>
            Sets a fog parameter.
            </summary>
            <param name="pname">The parameter to set.</param>
            <param name="param">The value to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Fogiv(System.UInt32,System.Int32[])">
            <summary>
            Sets a fog parameter.
            </summary>
            <param name="pname">The parameter to set.</param>
            <param name="parameters">The values to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.FrontFace(System.UInt32)">
            <summary>
            This function sets what defines a front face. Counter ClockWise by default.
            <para>作用是控制多边形的正面是如何决定的。在默认情况下，mode是GL_CCW。</para>
            </summary>
            <param name="mode">Winding mode, counter clockwise by default.
            <para>GL_CCW 表示窗口坐标上投影多边形的顶点顺序为逆时针方向的表面为正面。</para>
            <para>GL_CW 表示顶点顺序为顺时针方向的表面为正面。</para></param>
        </member>
        <member name="M:CSharpGL.OpenGL.Frustum(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function creates a frustrum transformation and mulitplies it to the current
            matrix (which in most cases should be the projection matrix).
            </summary>
            <param name="left">Left clip position.</param>
            <param name="right">Right clip position.</param>
            <param name="bottom">Bottom clip position.</param>
            <param name="top">Top clip position.</param>
            <param name="zNear">Near clip position.</param>
            <param name="zFar">Far clip position.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GenLists(System.Int32)">
            <summary>
            This function generates 'range' number of contiguos display list indices.
            </summary>
            <param name="range">The number of lists to generate.</param>
            <returns>The first list.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.GenTextures(System.Int32,System.UInt32[])">
            <summary>
            Create a set of unique texture names.
            </summary>
            <param name="n">Number of names to create.</param>
            <param name="textures">Array to store the texture names.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GenSamplers(System.Int32,System.UInt32[])">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="textures"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetBooleanv(System.UInt32,System.Byte[])">
            <summary>
            This function queries OpenGL for data, and puts it in the buffer supplied.
            </summary>
            <param name="pname">The parameter to query.</param>
            <param name="parameters"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetClipPlane(System.UInt32,System.Double[])">
            <summary>
            Return the coefficients of the specified clipping plane.
            </summary>
            <param name="plane">Specifies a	clipping plane.	 The number of clipping planes depends on the implementation, but at least six clipping planes are supported. They are identified by symbolic names of the form OpenGL.CLIP_PLANEi where 0 Less Than i Less Than OpenGL.MAX_CLIP_PLANES.</param>
            <param name="equation">Returns four double-precision values that are the coefficients of the plane equation of plane in eye coordinates. The initial value is (0, 0, 0, 0).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetDoublev(System.UInt32,System.Double[])">
            <summary>
            This function queries OpenGL for data, and puts it in the buffer supplied.
            </summary>
            <param name="pname">The parameter to query.</param>
            <param name="parameters">The buffer to put that data into.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetError">
            <summary>
            Get the current OpenGL error code.
            </summary>
            <returns>The current OpenGL error code.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.GetFloatv(System.UInt32,System.Single[])">
            <summary>
            This this function to query OpenGL values.
            </summary>
            <param name="pname">The parameter to query.</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetIntegerv(System.UInt32,System.Int32[])">
            <summary>
            Use this function to query OpenGL parameter values.
            </summary>
            <param name="pname">The Parameter to query</param>
            <param name="parameters">An array to put the values into.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetLightfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Return light source parameter values.
            </summary>
            <param name="light">Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form OpenGL.LIGHTi where i ranges from 0 to the value of OpenGL.GL_MAX_LIGHTS - 1.</param>
            <param name="pname">Specifies a light source parameter for light.</param>
            <param name="parameters">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetLightiv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Return light source parameter values.
            </summary>
            <param name="light">Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form OpenGL.LIGHTi where i ranges from 0 to the value of OpenGL.GL_MAX_LIGHTS - 1.</param>
            <param name="pname">Specifies a light source parameter for light.</param>
            <param name="parameters">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetMapdv(System.UInt32,System.UInt32,System.Double[])">
            <summary>
            Return evaluator parameters.
            </summary>
            <param name="target">Specifies the symbolic name of a map.</param>
            <param name="query">Specifies which parameter to return.</param>
            <param name="v">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetMapfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Return evaluator parameters.
            </summary>
            <param name="target">Specifies the symbolic name of a map.</param>
            <param name="query">Specifies which parameter to return.</param>
            <param name="v">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetMapiv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Return evaluator parameters.
            </summary>
            <param name="target">Specifies the symbolic name of a map.</param>
            <param name="query">Specifies which parameter to return.</param>
            <param name="v">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetMaterialfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Return material parameters.
            </summary>
            <param name="face">Specifies which of the two materials is being queried. OpenGL.FRONT or OpenGL.BACK are accepted, representing the front and back materials, respectively.</param>
            <param name="pname">Specifies the material parameter to return.</param>
            <param name="parameters">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetMaterialiv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Return material parameters.
            </summary>
            <param name="face">Specifies which of the two materials is being queried. OpenGL.FRONT or OpenGL.BACK are accepted, representing the front and back materials, respectively.</param>
            <param name="pname">Specifies the material parameter to return.</param>
            <param name="parameters">Returns the requested data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetPixelMapfv(System.UInt32,System.Single[])">
            <summary>
            Return the specified pixel map.
            </summary>
            <param name="map">Specifies the	name of	the pixel map to return.</param>
            <param name="values">Returns the pixel map	contents.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetPixelMapuiv(System.UInt32,System.UInt32[])">
            <summary>
            Return the specified pixel map.
            </summary>
            <param name="map">Specifies the	name of	the pixel map to return.</param>
            <param name="values">Returns the pixel map	contents.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetPixelMapusv(System.UInt32,System.UInt16[])">
            <summary>
            Return the specified pixel map.
            </summary>
            <param name="map">Specifies the	name of	the pixel map to return.</param>
            <param name="values">Returns the pixel map	contents.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetPointerv(System.UInt32,System.Int32[])">
            <summary>
            Return the address of the specified pointer.
            </summary>
            <param name="pname">Specifies the array or buffer pointer to be returned.</param>
            <param name="parameters">Returns the pointer value specified by parameters.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetPolygonStipple(System.Byte[])">
            <summary>
            Return the polygon stipple pattern.
            </summary>
            <param name="mask">Returns the stipple pattern. The initial value is all 1's.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.glGetString(System.UInt32)">
            <summary>
            Return a string	describing the current GL connection.
            </summary>
            <param name="name">Specifies a symbolic constant, one of OpenGL.VENDOR, OpenGL.RENDERER, OpenGL.VERSION, or OpenGL.EXTENSIONS.</param>
            <returns>Pointer to the specified string.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexEnvfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Return texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment.  Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the	symbolic name of a texture environment parameter.  Accepted values are OpenGL.TEXTURE_ENV_MODE, and OpenGL.TEXTURE_ENV_COLOR.</param>
            <param name="parameters">Returns the requested	data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexEnviv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Return texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment.  Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the	symbolic name of a texture environment parameter.  Accepted values are OpenGL.TEXTURE_ENV_MODE, and OpenGL.TEXTURE_ENV_COLOR.</param>
            <param name="parameters">Returns the requested	data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexGendv(System.UInt32,System.UInt32,System.Double[])">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function. Must be OpenGL.TEXTURE_GEN_MODE.</param>
            <param name="parameters">Specifies a single-valued texture generation parameter, one of OpenGL.OBJECT_LINEAR, OpenGL.EYE_LINEAR, or OpenGL.SPHERE_MAP.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexGenfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function. Must be OpenGL.TEXTURE_GEN_MODE.</param>
            <param name="parameters">Specifies a single-valued texture generation parameter, one of OpenGL.OBJECT_LINEAR, OpenGL.EYE_LINEAR, or OpenGL.SPHERE_MAP.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexGeniv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function. Must be OpenGL.TEXTURE_GEN_MODE.</param>
            <param name="parameters">Specifies a single-valued texture generation parameter, one of OpenGL.OBJECT_LINEAR, OpenGL.EYE_LINEAR, or OpenGL.SPHERE_MAP.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexImage(System.UInt32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Return a texture image.
            </summary>
            <param name="target">Specifies which texture is to	be obtained. OpenGL.TEXTURE_1D and OpenGL.TEXTURE_2D are accepted.</param>
            <param name="level">Specifies the level-of-detail number of the desired image.  Level	0 is the base image level.  Level n is the nth mipmap reduction image.</param>
            <param name="format">Specifies a pixel format for the returned data.</param>
            <param name="type">Specifies a pixel type for the returned data.</param>
            <param name="pixels">Returns the texture image.  Should be	a pointer to an array of the type specified by type.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexLevelParameterfv(System.UInt32,System.Int32,System.UInt32,System.Single[])">
            <summary>
            Return texture parameter values for a specific level of detail.
            </summary>
            <param name="target">Specifies the	symbolic name of the target texture.</param>
            <param name="level">Specifies the level-of-detail	number of the desired image.  Level	0 is the base image level.  Level n is the nth mipmap reduction image.</param>
            <param name="pname">Specifies the symbolic name of a texture parameter.</param>
            <param name="parameters">Returns the requested	data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexLevelParameteriv(System.UInt32,System.Int32,System.UInt32,System.Int32[])">
            <summary>
            Return texture parameter values for a specific level of detail.
            </summary>
            <param name="target">Specifies the	symbolic name of the target texture.</param>
            <param name="level">Specifies the level-of-detail	number of the desired image.  Level	0 is the base image level.  Level n is the nth mipmap reduction image.</param>
            <param name="pname">Specifies the symbolic name of a texture parameter.</param>
            <param name="parameters">Returns the requested	data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexParameterfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Return texture parameter values.
            </summary>
            <param name="target">Specifies the symbolic name of the target texture.</param>
            <param name="pname">Specifies the symbolic name of a texture parameter.</param>
            <param name="parameters">Returns the texture parameters.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexParameteriv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Return texture parameter values.
            </summary>
            <param name="target">Specifies the symbolic name of the target texture.</param>
            <param name="pname">Specifies the symbolic name of a texture parameter.</param>
            <param name="parameters">Returns the texture parameters.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Hint(System.UInt32,System.UInt32)">
            <summary>
            Specify implementation-specific hints.
            </summary>
            <param name="target">Specifies a symbolic constant indicating the behavior to be controlled.</param>
            <param name="mode">Specifies a symbolic constant indicating the desired behavior.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.IndexMask(System.UInt32)">
            <summary>
            Control	the writing of individual bits in the color	index buffers.
            </summary>
            <param name="mask">Specifies a bit	mask to	enable and disable the writing of individual bits in the color index buffers. Initially, the mask is all 1's.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.IndexPointer(System.UInt32,System.Int32,System.Int32[])">
            <summary>
            Define an array of color indexes.
            </summary>
            <param name="type">Specifies the data type of each color index in the array.  Symbolic constants OpenGL.UNSIGNED_BYTE, OpenGL.SHORT, OpenGL.INT, OpenGL.FLOAT, and OpenGL.DOUBLE are accepted.</param>
            <param name="stride">Specifies the byte offset between consecutive color indexes.  If stride is 0 (the initial value), the color indexes are understood	to be tightly packed in the array.</param>
            <param name="pointer">Specifies a pointer to the first index in the array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexd(System.Double)">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexdv(System.Double[])">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexf(System.Single)">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexfv(System.Single[])">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexi(System.Int32)">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexiv(System.Int32[])">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexs(System.Int16)">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexsv(System.Int16[])">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexub(System.Byte)">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Indexubv(System.Byte[])">
            <summary>
            Set the current color index.
            </summary>
            <param name="c">Specifies the new value for the current color index.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.InitNames">
            <summary>
            This function initialises the select buffer names.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.InterleavedArrays(System.UInt32,System.Int32,System.Int32[])">
            <summary>
            Simultaneously specify and enable several interleaved arrays.
            </summary>
            <param name="format">Specifies the type of array to enable.</param>
            <param name="stride">Specifies the offset in bytes between each aggregate array element.</param>
            <param name="pointer">The array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.IsEnabled(System.UInt32)">
            <summary>
            Use this function to query if a certain OpenGL function is enabled or not.
            </summary>
            <param name="cap">The capability to test.</param>
            <returns>True if the capability is enabled, otherwise, false.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.IsList(System.UInt32)">
            <summary>
            This function determines whether a specified value is a display list.
            </summary>
            <param name="list">The value to test.</param>
            <returns>TRUE if it is a list, FALSE otherwise.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.IsTexture(System.UInt32)">
            <summary>
            Determine if a name corresponds	to a texture.
            </summary>
            <param name="texture">Specifies a value that may be the name of a texture.</param>
            <returns>True if texture is a texture object.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.LightModelf(System.UInt32,System.Single)">
            <summary>
            This function sets a parameter of the lighting model.
            </summary>
            <param name="pname">The name of the parameter.</param>
            <param name="param">The parameter to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LightModelfv(System.UInt32,System.Single[])">
            <summary>
            This function sets a parameter of the lighting model.
            </summary>
            <param name="pname">The name of the parameter.</param>
            <param name="parameters">The parameter to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LightModeli(System.UInt32,System.Int32)">
            <summary>
            This function sets a parameter of the lighting model.
            </summary>
            <param name="pname">The name of the parameter.</param>
            <param name="param">The parameter to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LightModeliv(System.UInt32,System.Int32[])">
            <summary>
            This function sets a parameter of the lighting model.
            </summary>
            <param name="pname">The name of the parameter.</param>
            <param name="parameters">The parameter to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Lightf(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Set the parameter (pname) of the light 'light'.
            </summary>
            <param name="light">The light you wish to set parameters for.</param>
            <param name="pname">The parameter you want to set.</param>
            <param name="param">The value that you want to set the parameter to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Lightfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Set the parameter (pname) of the light 'light'.
            </summary>
            <param name="light">The light you wish to set parameters for.</param>
            <param name="pname">The parameter you want to set.</param>
            <param name="parameters">The value that you want to set the parameter to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Lighti(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Set the parameter (pname) of the light 'light'.
            </summary>
            <param name="light">The light you wish to set parameters for.</param>
            <param name="pname">The parameter you want to set.</param>
            <param name="param">The value that you want to set the parameter to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Lightiv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Set the parameter (pname) of the light 'light'.
            </summary>
            <param name="light">The light you wish to set parameters for.</param>
            <param name="pname">The parameter you want to set.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LineStipple(System.Int32,System.UInt16)">
            <summary>
            Specify the line stipple pattern.
            </summary>
            <param name="factor">Specifies a multiplier for each bit in the line stipple pattern.  If factor is 3, for example, each bit in the pattern is used three times before the next	bit in the pattern is used. factor is clamped to the range	[1, 256] and defaults to 1.</param>
            <param name="pattern">Specifies a 16-bit integer whose bit	pattern determines which fragments of a line will be drawn when	the line is rasterized.	 Bit zero is used first; the default pattern is all 1's.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LineWidth(System.Single)">
            <summary>
            Set's the current width of lines.
            </summary>
            <param name="width">New line width to set.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ListBase(System.UInt32)">
            <summary>
            Set the display-list base for glCallLists.
            </summary>
            <param name="listbase">Specifies an integer offset that will be added to glCallLists offsets to generate display-list names. The initial value is 0.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LoadIdentity">
            <summary>
            Call this function to load the identity matrix into the current matrix stack.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.LoadMatrixd(System.Double[])">
            <summary>
            Replace the current matrix with the specified matrix.
            </summary>
            <param name="m">Specifies a pointer to 16 consecutive values, which are used as the elements of a 4x4 column-major matrix.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LoadMatrixf(System.Single[])">
            <summary>
            Replace the current matrix with the specified matrix.
            </summary>
            <param name="m">Specifies a pointer to 16 consecutive values, which are used as the elements of a 4x4 column-major matrix.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LoadName(System.UInt32)">
            <summary>
            This function replaces the name at the top of the selection names stack
            with 'name'.
            </summary>
            <param name="name">The name to replace it with.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.LogicOp(System.UInt32)">
            <summary>
            Specify a logical pixel operation for color index rendering.
            </summary>
            <param name="opcode">Specifies a symbolic constant	that selects a logical operation.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Map1d(System.UInt32,System.Double,System.Double,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Defines a 1D evaluator.
            </summary>
            <param name="target">What the control points represent (e.g. MAP1_VERTEX_3).</param>
            <param name="u1">Range of the variable 'u'.</param>
            <param name="u2">Range of the variable 'u'.</param>
            <param name="stride">Offset between beginning of one control point, and beginning of next.</param>
            <param name="order">The degree plus one, should agree with the number of control points.</param>
            <param name="points">The data for the points.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Map1f(System.UInt32,System.Single,System.Single,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Defines a 1D evaluator.
            </summary>
            <param name="target">What the control points represent (e.g. MAP1_VERTEX_3).</param>
            <param name="u1">Range of the variable 'u'.</param>
            <param name="u2">Range of the variable 'u'.</param>
            <param name="stride">Offset between beginning of one control point, and beginning of next.</param>
            <param name="order">The degree plus one, should agree with the number of control points.</param>
            <param name="points">The data for the points.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Map2d(System.UInt32,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Defines a 2D evaluator.
            </summary>
            <param name="target">What the control points represent (e.g. MAP2_VERTEX_3).</param>
            <param name="u1">Range of the variable 'u'.</param>
            <param name="u2">Range of the variable 'u.</param>
            <param name="ustride">Offset between beginning of one control point and the next.</param>
            <param name="uorder">The degree plus one.</param>
            <param name="v1">Range of the variable 'v'.</param>
            <param name="v2">Range of the variable 'v'.</param>
            <param name="vstride">Offset between beginning of one control point and the next.</param>
            <param name="vorder">The degree plus one.</param>
            <param name="points">The data for the points.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Map2f(System.UInt32,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Defines a 2D evaluator.
            </summary>
            <param name="target">What the control points represent (e.g. MAP2_VERTEX_3).</param>
            <param name="u1">Range of the variable 'u'.</param>
            <param name="u2">Range of the variable 'u.</param>
            <param name="ustride">Offset between beginning of one control point and the next.</param>
            <param name="uorder">The degree plus one.</param>
            <param name="v1">Range of the variable 'v'.</param>
            <param name="v2">Range of the variable 'v'.</param>
            <param name="vstride">Offset between beginning of one control point and the next.</param>
            <param name="vorder">The degree plus one.</param>
            <param name="points">The data for the points.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MapGrid1d(System.Int32,System.Double,System.Double)">
            <summary>
            This function defines a grid that goes from u1 to u1 in n steps, evenly spaced.
            </summary>
            <param name="un">Number of steps.</param>
            <param name="u1">Range of variable 'u'.</param>
            <param name="u2">Range of variable 'u'.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MapGrid1f(System.Int32,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="un"></param>
             <param name="u1"></param>
             <param name="u2"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.MapGrid2d(System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            This function defines a grid that goes from u1 to u1 in n steps, evenly spaced,
            and the same for v.
            </summary>
            <param name="un">Number of steps.</param>
            <param name="u1">Range of variable 'u'.</param>
            <param name="u2">Range of variable 'u'.</param>
            <param name="vn">Number of steps.</param>
            <param name="v1">Range of variable 'v'.</param>
            <param name="v2">Range of variable 'v'.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MapGrid2f(System.Int32,System.Single,System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            This function defines a grid that goes from u1 to u1 in n steps, evenly spaced,
            and the same for v.
            </summary>
            <param name="un">Number of steps.</param>
            <param name="u1">Range of variable 'u'.</param>
            <param name="u2">Range of variable 'u'.</param>
            <param name="vn">Number of steps.</param>
            <param name="v1">Range of variable 'v'.</param>
            <param name="v2">Range of variable 'v'.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Materialf(System.UInt32,System.UInt32,System.Single)">
            <summary>
            This function sets a material parameter.
            </summary>
            <param name="face">What faces is this parameter for (i.e front/back etc).</param>
            <param name="pname">What parameter you want to set.</param>
            <param name="param">The value to set 'pname' to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Materialfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            This function sets a material parameter.
            </summary>
            <param name="face">What faces is this parameter for (i.e front/back etc).</param>
            <param name="pname">What parameter you want to set.</param>
            <param name="parameters">The value to set 'pname' to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Materiali(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            This function sets a material parameter.
            </summary>
            <param name="face">What faces is this parameter for (i.e front/back etc).</param>
            <param name="pname">What parameter you want to set.</param>
            <param name="param">The value to set 'pname' to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Materialiv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            This function sets a material parameter.
            </summary>
            <param name="face">What faces is this parameter for (i.e front/back etc).</param>
            <param name="pname">What parameter you want to set.</param>
            <param name="parameters">The value to set 'pname' to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MatrixMode(System.UInt32)">
            <summary>
            Set the current matrix mode (the matrix that matrix operations will be
            performed on).
            </summary>
            <param name="mode">The mode, normally PROJECTION or MODELVIEW.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MultMatrixd(System.Double[])">
            <summary>
            Multiply the current matrix with the specified matrix.
            </summary>
            <param name="m">Points to 16 consecutive values that are used as the elements of a 4x4 column-major matrix.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MultMatrixf(System.Single[])">
            <summary>
            Multiply the current matrix with the specified matrix.
            </summary>
            <param name="m">Points to 16 consecutive values that are used as the elements of a 4x4 column-major matrix.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.NewList(System.UInt32,System.UInt32)">
            <summary>
            This function starts compiling a new display list.
            </summary>
            <param name="list">The list to compile.</param>
            <param name="mode">Either COMPILE or COMPILE_AND_EXECUTE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3b(System.Byte,System.Byte,System.Byte)">
            <summary>
            Set the current normal.
            </summary>
            <param name="nx">Normal Coordinate.</param>
            <param name="ny">Normal Coordinate.</param>
            <param name="nz">Normal Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3bv(System.Byte[])">
            <summary>
            This function sets the current normal.
            </summary>
            <param name="v">The normal.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3d(System.Double,System.Double,System.Double)">
            <summary>
            Set the current normal.
            </summary>
            <param name="nx">Normal Coordinate.</param>
            <param name="ny">Normal Coordinate.</param>
            <param name="nz">Normal Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3dv(System.Double[])">
            <summary>
            This function sets the current normal.
            </summary>
            <param name="v">The normal.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3f(System.Single,System.Single,System.Single)">
            <summary>
            Set the current normal.
            </summary>
            <param name="nx">Normal Coordinate.</param>
            <param name="ny">Normal Coordinate.</param>
            <param name="nz">Normal Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3fv(System.Single[])">
            <summary>
            This function sets the current normal.
            </summary>
            <param name="v">The normal.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3i(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the current normal.
            </summary>
            <param name="nx">Normal Coordinate.</param>
            <param name="ny">Normal Coordinate.</param>
            <param name="nz">Normal Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3iv(System.Int32[])">
            <summary>
            This function sets the current normal.
            </summary>
            <param name="v">The normal.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3s(System.Int16,System.Int16,System.Int16)">
            <summary>
            Set the current normal.
            </summary>
            <param name="nx">Normal Coordinate.</param>
            <param name="ny">Normal Coordinate.</param>
            <param name="nz">Normal Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Normal3sv(System.Int16[])">
            <summary>
            This function sets the current normal.
            </summary>
            <param name="v">The normal.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.NormalPointer(System.UInt32,System.Int32,System.IntPtr)">
            <summary>
            Set's the pointer to the normal array.
            </summary>
            <param name="type">The type of data.</param>
            <param name="stride">The space in bytes between each normal.</param>
            <param name="pointer">The normals.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.NormalPointer(System.UInt32,System.Int32,System.Single[])">
            <summary>
            Set's the pointer to the normal array.
            </summary>
            <param name="type">The type of data.</param>
            <param name="stride">The space in bytes between each normal.</param>
            <param name="pointer">The normals.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Ortho(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function creates an orthographic projection matrix (i.e one with no
            perspective) and multiplies it to the current matrix stack, which would
            normally be 'PROJECTION'.
            </summary>
            <param name="left">Left clipping plane.</param>
            <param name="right">Right clipping plane.</param>
            <param name="bottom">Bottom clipping plane.</param>
            <param name="top">Top clipping plane.</param>
            <param name="zNear">Near clipping plane.</param>
            <param name="zFar">Far clipping plane.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PassThrough(System.Single)">
            <summary>
            Place a marker in the feedback buffer.
            </summary>
            <param name="token">Specifies a marker value to be placed in the feedback buffer following a OpenGL.PASS_THROUGH_TOKEN.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelMapfv(System.UInt32,System.Int32,System.Single[])">
            <summary>
            Set up pixel transfer maps.
            </summary>
            <param name="map">Specifies a symbolic	map name.</param>
            <param name="mapsize">Specifies the size of the map being defined.</param>
            <param name="values">Specifies an	array of mapsize values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelMapuiv(System.UInt32,System.Int32,System.UInt32[])">
            <summary>
            Set up pixel transfer maps.
            </summary>
            <param name="map">Specifies a symbolic	map name.</param>
            <param name="mapsize">Specifies the size of the map being defined.</param>
            <param name="values">Specifies an	array of mapsize values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelMapusv(System.UInt32,System.Int32,System.UInt16[])">
            <summary>
            Set up pixel transfer maps.
            </summary>
            <param name="map">Specifies a symbolic	map name.</param>
            <param name="mapsize">Specifies the size of the map being defined.</param>
            <param name="values">Specifies an	array of mapsize values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelStoref(System.UInt32,System.Single)">
            <summary>
            Set pixel storage modes.
            </summary>
            <param name="pname">Specifies the symbolic	name of	the parameter to be set.</param>
            <param name="param">Specifies the value that pname	is set to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelStorei(System.UInt32,System.Int32)">
            <summary>
            Set pixel storage modes.
            </summary>
            <param name="pname">Specifies the symbolic	name of	the parameter to be set.</param>
            <param name="param">Specifies the value that pname	is set to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelTransferf(System.UInt32,System.Single)">
            <summary>
            Set pixel transfer modes.
            </summary>
            <param name="pname">Specifies the symbolic name of the pixel transfer parameter to be set.</param>
            <param name="param">Specifies the value that pname is set to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelTransferi(System.UInt32,System.Int32)">
            <summary>
            Set pixel transfer modes.
            </summary>
            <param name="pname">Specifies the symbolic name of the pixel transfer parameter to be set.</param>
            <param name="param">Specifies the value that pname is set to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PixelZoom(System.Single,System.Single)">
            <summary>
            Specify	the pixel zoom factors.
            </summary>
            <param name="xfactor">Specify the x and y zoom factors for pixel write operations.</param>
            <param name="yfactor">Specify the x and y zoom factors for pixel write operations.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PointSize(System.Single)">
            <summary>
            The size of points to be rasterised.
            </summary>
            <param name="size">Size in pixels.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PolygonMode(System.UInt32,System.UInt32)">
            <summary>
            This sets the current drawing mode of polygons (points, lines, filled).
            </summary>
            <param name="face">The faces this applies to (front, back or both).</param>
            <param name="mode">The mode to set to (points, lines, or filled).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PolygonOffset(System.Single,System.Single)">
            <summary>
            Set	the scale and units used to calculate depth	values.
            </summary>
            <param name="factor">Specifies a scale factor that	is used	to create a variable depth offset for each polygon. The initial value is 0.</param>
            <param name="units">Is multiplied by an implementation-specific value to create a constant depth offset. The initial value is 0.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PolygonStipple(System.Byte[])">
            <summary>
            Set the polygon stippling pattern.
            <para>https://www.opengl.org/sdk/docs/man2/xhtml/glPolygonStipple.xml</para>
            </summary>
            <param name="mask">Specifies a pointer to a 32x32 stipple pattern that will be unpacked from memory in the same way that glDrawPixels unpacks pixels.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PopAttrib">
            <summary>
            This function restores the attribute stack to the state it was when
            PushAttrib was called.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.PopClientAttrib">
            <summary>
            Pop the client attribute stack.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.PopMatrix">
            <summary>
            Restore the previously saved state of the current matrix stack.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.PopName">
            <summary>
            This takes the top name off the selection names stack.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.PrioritizeTextures(System.Int32,System.UInt32[],System.Single[])">
            <summary>
            Set texture residence priority.
            </summary>
            <param name="n">Specifies the number of textures to be prioritized.</param>
            <param name="textures">Specifies an array containing the names of the textures to be prioritized.</param>
            <param name="priorities">Specifies	an array containing the	texture priorities. A priority given in an element of priorities applies to the	texture	named by the corresponding element of textures.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PushAttrib(System.UInt32)">
            <summary>
            Save the current state of the attribute groups specified by 'mask'.
            </summary>
            <param name="mask">The attibute groups to save.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PushClientAttrib(System.UInt32)">
            <summary>
            Push the client attribute stack.
            </summary>
            <param name="mask">Specifies a mask that indicates	which attributes to save.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PushMatrix">
            <summary>
            Save the current state of the current matrix stack.
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL.PushName(System.UInt32)">
            <summary>
            This function adds a new name to the selection buffer.
            </summary>
            <param name="name">The name to add.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2d(System.Double,System.Double)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2dv(System.Double[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2f(System.Single,System.Single)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2fv(System.Single[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2i(System.Int32,System.Int32)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2iv(System.Int32[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2s(System.Int16,System.Int16)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos2sv(System.Int16[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3d(System.Double,System.Double,System.Double)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3dv(System.Double[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3f(System.Single,System.Single,System.Single)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3fv(System.Single[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3i(System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3iv(System.Int32[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3s(System.Int16,System.Int16,System.Int16)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos3sv(System.Int16[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4d(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
            <param name="w">W coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4dv(System.Double[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4f(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
            <param name="w">W coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4fv(System.Single[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4i(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
            <param name="w">W coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4iv(System.Int32[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4s(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
            <param name="w">W coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RasterPos4sv(System.Int16[])">
            <summary>
            This function sets the current raster position.
            </summary>
            <param name="v">The coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ReadBuffer(System.UInt32)">
            <summary>
            Select	a color	buffer source for pixels.
            </summary>
            <param name="mode">Specifies a color buffer.  Accepted values are OpenGL.FRONT_LEFT, OpenGL.FRONT_RIGHT, OpenGL.BACK_LEFT, OpenGL.BACK_RIGHT, OpenGL.FRONT, OpenGL.BACK, OpenGL.LEFT, OpenGL.GL_RIGHT, and OpenGL.AUXi, where i is between 0 and OpenGL.AUX_BUFFERS - 1.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ReadPixels(System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Reads a block of pixels from the frame buffer.
            </summary>
            <param name="x">Top-Left X value.</param>
            <param name="y">Top-Left Y value.</param>
            <param name="width">Width of block to read.</param>
            <param name="height">Height of block to read.</param>
            <param name="format">Specifies the format of the pixel data. The following symbolic values are accepted: OpenGL.COLOR_INDEX, OpenGL.STENCIL_INDEX, OpenGL.DEPTH_COMPONENT, OpenGL.RED, OpenGL.GREEN, OpenGL.BLUE, OpenGL.ALPHA, OpenGL.RGB, OpenGL.RGBA, OpenGL.LUMINANCE and OpenGL.LUMINANCE_ALPHA.</param>
            <param name="type">Specifies the data type of the pixel data.Must be one of OpenGL.UNSIGNED_BYTE, OpenGL.BYTE, OpenGL.BITMAP, OpenGL.UNSIGNED_SHORT, OpenGL.SHORT, OpenGL.UNSIGNED_INT, OpenGL.INT or OpenGL.FLOAT.</param>
            <param name="pixels">Storage for the pixel data received.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ReadPixels(System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Reads a block of pixels from the frame buffer.
            </summary>
            <param name="x">Top-Left X value.</param>
            <param name="y">Top-Left Y value.</param>
            <param name="width">Width of block to read.</param>
            <param name="height">Height of block to read.</param>
            <param name="format">Specifies the format of the pixel data. The following symbolic values are accepted: OpenGL.COLOR_INDEX, OpenGL.STENCIL_INDEX, OpenGL.DEPTH_COMPONENT, OpenGL.RED, OpenGL.GREEN, OpenGL.BLUE, OpenGL.ALPHA, OpenGL.RGB, OpenGL.RGBA, OpenGL.LUMINANCE and OpenGL.LUMINANCE_ALPHA.</param>
            <param name="type">Specifies the data type of the pixel data.Must be one of OpenGL.UNSIGNED_BYTE, OpenGL.BYTE, OpenGL.BITMAP, OpenGL.UNSIGNED_SHORT, OpenGL.SHORT, OpenGL.UNSIGNED_INT, OpenGL.INT or OpenGL.FLOAT.</param>
            <param name="pixels">Storage for the pixel data received.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rectd(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draw a rectangle from two coordinates (top-left and bottom-right).
            </summary>
            <param name="x1">Top-Left X value.</param>
            <param name="y1">Top-Left Y value.</param>
            <param name="x2">Bottom-Right X Value.</param>
            <param name="y2">Bottom-Right Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rectdv(System.Double[],System.Double[])">
            <summary>
            Draw a rectangle from two coordinates, expressed as arrays, e.g
            Rect(new float[] {0, 0}, new float[] {10, 10});
            </summary>
            <param name="v1">Top-Left point.</param>
            <param name="v2">Bottom-Right point.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rectf(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="x1"></param>
             <param name="y1"></param>
             <param name="x2"></param>
             <param name="y2"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rectfv(System.Single[],System.Single[])">
            <summary>
            Draw a rectangle from two coordinates, expressed as arrays, e.g
            Rect(new float[] {0, 0}, new float[] {10, 10});
            </summary>
            <param name="v1">Top-Left point.</param>
            <param name="v2">Bottom-Right point.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Recti(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw a rectangle from two coordinates (top-left and bottom-right).
            </summary>
            <param name="x1">Top-Left X value.</param>
            <param name="y1">Top-Left Y value.</param>
            <param name="x2">Bottom-Right X Value.</param>
            <param name="y2">Bottom-Right Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rectiv(System.Int32[],System.Int32[])">
            <summary>
            Draw a rectangle from two coordinates, expressed as arrays, e.g
            Rect(new float[] {0, 0}, new float[] {10, 10});
            </summary>
            <param name="v1">Top-Left point.</param>
            <param name="v2">Bottom-Right point.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rects(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Draw a rectangle from two coordinates (top-left and bottom-right).
            </summary>
            <param name="x1">Top-Left X value.</param>
            <param name="y1">Top-Left Y value.</param>
            <param name="x2">Bottom-Right X Value.</param>
            <param name="y2">Bottom-Right Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rectsv(System.Int16[],System.Int16[])">
            <summary>
            Draw a rectangle from two coordinates, expressed as arrays, e.g
            Rect(new float[] {0, 0}, new float[] {10, 10});
            </summary>
            <param name="v1">Top-Left point.</param>
            <param name="v2">Bottom-Right point.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.RenderMode(System.UInt32)">
            <summary>
            This function sets the current render mode (render, feedback or select).
            </summary>
            <param name="mode">The Render mode (RENDER, SELECT or FEEDBACK).</param>
            <returns>The hits that selection or feedback caused..</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.Rotated(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function applies a rotation transformation to the current matrix.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <param name="x">Amount along x.</param>
            <param name="y">Amount along y.</param>
            <param name="z">Amount along z.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rotatef(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This function applies a rotation transformation to the current matrix.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <param name="x">Amount along x.</param>
            <param name="y">Amount along y.</param>
            <param name="z">Amount along z.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Scaled(System.Double,System.Double,System.Double)">
            <summary>
            This function applies a scale transformation to the current matrix.
            </summary>
            <param name="x">The amount to scale along x.</param>
            <param name="y">The amount to scale along y.</param>
            <param name="z">The amount to scale along z.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Scalef(System.Single,System.Single,System.Single)">
            <summary>
            This function applies a scale transformation to the current matrix.
            </summary>
            <param name="x">The amount to scale along x.</param>
            <param name="y">The amount to scale along y.</param>
            <param name="z">The amount to scale along z.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Scissor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Define the scissor box.
            https://www.khronos.org/opengles/sdk/docs/man/xhtml/glScissor.xml
            </summary>
            <param name="x">Specify the lower left corner of the scissor box. Initially (0, 0).</param>
            <param name="y">Specify the lower left corner of the scissor box. Initially (0, 0).</param>
            <param name="width">Specify the width and height of the scissor box. When a GL context is first attached to a window, width and height are set to the dimensions of that window.</param>
            <param name="height">Specify the width and height of the scissor box. When a GL context is first attached to a window, width and height are set to the dimensions of that window.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.SelectBuffer(System.Int32,System.UInt32[])">
            <summary>
            This function sets the current select buffer.
            </summary>
            <param name="size">The size of the buffer you are passing.</param>
            <param name="buffer">The buffer itself.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.ShadeModel(System.UInt32)">
            <summary>
            Select flat or smooth shading.
            </summary>
            <param name="mode">Specifies a symbolic value representing a shading technique. Accepted values are OpenGL.FLAT and OpenGL.SMOOTH. The default is OpenGL.SMOOTH.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.StencilFunc(System.UInt32,System.Int32,System.UInt32)">
            <summary>
            This function sets the current stencil buffer function.
            </summary>
            <param name="func">The function type.</param>
            <param name="reference">The function reference.</param>
            <param name="mask">The function mask.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.StencilMask(System.UInt32)">
            <summary>
            control the front and back writing of individual bits in the stencil planes
            <para>glStencilMask controls the writing of individual bits in the stencil planes. The least significant n bits of mask, where n is the number of bits in the stencil buffer, specify a mask. Where a 1 appears in the mask, it's possible to write to the corresponding bit in the stencil buffer. Where a 0 appears, the corresponding bit is write-protected. Initially, all bits are enabled for writing.
            There can be two separate mask writemasks; one affects back-facing polygons, and the other affects front-facing polygons as well as other non-polygon primitives. glStencilMask sets both front and back stencil writemasks to the same values. Use glStencilMaskSeparate to set front and back stencil writemasks to different values.</para>
            <para>glStencilMask is the same as calling glStencilMaskSeparate with face set to GL_FRONT_AND_BACK.</para>
            <para>glGet with argument GL_STENCIL_WRITEMASK, GL_STENCIL_BACK_WRITEMASK, or GL_STENCIL_BITS</para>
            <para>See Also glColorMask, glDepthMask, glStencilFunc, glStencilFuncSeparate, glStencilMaskSeparate, glStencilOp, glStencilOpSeparate</para>
            </summary>
            <param name="mask">Specifies a bit mask to enable and disable writing of individual bits in the stencil planes. Initially, the mask is all 1's.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.StencilOp(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            This function sets the stencil buffer operation.
            </summary>
            <param name="fail">Fail operation.</param>
            <param name="zfail">Depth fail component.</param>
            <param name="zpass">Depth pass component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1d(System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1dv(System.Double[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1f(System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1fv(System.Single[])">
            <summary>
            This function sets the current texture coordinates. WARNING: if you
            can call something more explicit, like TexCoord2f then call that, it's
            much faster.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1i(System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1iv(System.Int32[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1s(System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord1sv(System.Int16[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2d(System.Double,System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2dv(System.Double[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2f(System.Single,System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2fv(System.Single[])">
            <summary>
            This function sets the current texture coordinates. WARNING: if you
            can call something more explicit, like TexCoord2f then call that, it's
            much faster.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2i(System.Int32,System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2iv(System.Int32[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2s(System.Int16,System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord2sv(System.Int16[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3d(System.Double,System.Double,System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3dv(System.Double[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3f(System.Single,System.Single,System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3fv(System.Single[])">
            <summary>
            This function sets the current texture coordinates. WARNING: if you
            can call something more explicit, like TexCoord2f then call that, it's
            much faster.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3i(System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3iv(System.Int32[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3s(System.Int16,System.Int16,System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord3sv(System.Int16[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4d(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4dv(System.Double[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4f(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4fv(System.Single[])">
            <summary>
            This function sets the current texture coordinates. WARNING: if you
            can call something more explicit, like TexCoord2f then call that, it's
            much faster.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4i(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4iv(System.Int32[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4s(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord4sv(System.Int16[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoordPointer(System.Int32,System.UInt32,System.Int32,System.IntPtr)">
            <summary>
            This function sets the texture coord array.
            </summary>
            <param name="size">The number of coords per set.</param>
            <param name="type">The type of data.</param>
            <param name="stride">The number of bytes between coords.</param>
            <param name="pointer">The coords.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoordPointer(System.Int32,System.UInt32,System.Int32,System.Single[])">
            <summary>
            This function sets the texture coord array.
            </summary>
            <param name="size">The number of coords per set.</param>
            <param name="type">The type of data.</param>
            <param name="stride">The number of bytes between coords.</param>
            <param name="pointer">The coords.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnvf(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a single-valued texture environment parameter. Must be OpenGL.TEXTURE_ENV_MODE.</param>
            <param name="param">Specifies a single symbolic constant, one of OpenGL.MODULATE, OpenGL.DECAL, OpenGL.BLEND, or OpenGL.REPLACE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnvfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a texture environment parameter. Accepted values are OpenGL.TEXTURE_ENV_MODE and OpenGL.TEXTURE_ENV_COLOR.</param>
            <param name="parameters">Specifies a pointer to a parameter array that contains either a single symbolic constant or an RGBA color.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnvi(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a single-valued texture environment parameter. Must be OpenGL.TEXTURE_ENV_MODE.</param>
            <param name="param">Specifies a single symbolic constant, one of OpenGL.MODULATE, OpenGL.DECAL, OpenGL.BLEND, or OpenGL.REPLACE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnviv(System.UInt32,System.UInt32,System.Int32[])">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexGend(System.UInt32,System.UInt32,System.Double)">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function. Must be OpenGL.TEXTURE_GEN_MODE.</param>
            <param name="param">Specifies a single-valued texture generation parameter, one of OpenGL.OBJECT_LINEAR, OpenGL.GL_EYE_LINEAR, or OpenGL.SPHERE_MAP.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexGendv(System.UInt32,System.UInt32,System.Double[])">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function or function parameters. Must be OpenGL.TEXTURE_GEN_MODE, OpenGL.OBJECT_PLANE, or OpenGL.EYE_PLANE.</param>
            <param name="parameters">Specifies a pointer to an array of texture generation parameters. If pname is OpenGL.TEXTURE_GEN_MODE, then the array must contain a single symbolic constant, one of OpenGL.OBJECT_LINEAR, OpenGL.EYE_LINEAR, or OpenGL.SPHERE_MAP. Otherwise, params holds the coefficients for the texture-coordinate generation function specified by pname.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexGenf(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function. Must be OpenGL.TEXTURE_GEN_MODE.</param>
            <param name="param">Specifies a single-valued texture generation parameter, one of OpenGL.OBJECT_LINEAR, OpenGL.GL_EYE_LINEAR, or OpenGL.SPHERE_MAP.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexGenfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function or function parameters. Must be OpenGL.TEXTURE_GEN_MODE, OpenGL.OBJECT_PLANE, or OpenGL.EYE_PLANE.</param>
            <param name="parameters">Specifies a pointer to an array of texture generation parameters. If pname is OpenGL.TEXTURE_GEN_MODE, then the array must contain a single symbolic constant, one of OpenGL.OBJECT_LINEAR, OpenGL.EYE_LINEAR, or OpenGL.SPHERE_MAP. Otherwise, params holds the coefficients for the texture-coordinate generation function specified by pname.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexGeni(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function. Must be OpenGL.TEXTURE_GEN_MODE.</param>
            <param name="param">Specifies a single-valued texture generation parameter, one of OpenGL.OBJECT_LINEAR, OpenGL.GL_EYE_LINEAR, or OpenGL.SPHERE_MAP.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexGeniv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Control the generation of texture coordinates.
            </summary>
            <param name="coord">Specifies a texture coordinate. Must be one of OpenGL.S, OpenGL.T, OpenGL.R, or OpenGL.Q.</param>
            <param name="pname">Specifies the symbolic name of the texture-coordinate generation function or function parameters. Must be OpenGL.TEXTURE_GEN_MODE, OpenGL.OBJECT_PLANE, or OpenGL.EYE_PLANE.</param>
            <param name="parameters">Specifies a pointer to an array of texture generation parameters. If pname is OpenGL.TEXTURE_GEN_MODE, then the array must contain a single symbolic constant, one of OpenGL.OBJECT_LINEAR, OpenGL.EYE_LINEAR, or OpenGL.SPHERE_MAP. Otherwise, params holds the coefficients for the texture-coordinate generation function specified by pname.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexImage1D(System.UInt32,System.Int32,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            This function sets the image for the currently binded texture.
            </summary>
            <param name="target">The type of texture, TEXTURE_2D or PROXY_TEXTURE_2D.</param>
            <param name="level">For mip-map textures, ordinary textures should be '0'.</param>
            <param name="internalformat">The format of the data you are want OpenGL to create, e.g  RGB16.</param>
            <param name="width">The width of the texture image (must be a power of 2, e.g 64).</param>
            <param name="border">The width of the border (0 or 1).</param>
            <param name="format">The format of the data you are passing, e.g. RGBA.</param>
            <param name="type">The type of data you are passing, e.g GL_BYTE.</param>
            <param name="pixels">The actual pixel data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexImage1D(System.UInt32,System.Int32,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            This function sets the image for the currently binded texture.
            </summary>
            <param name="target">The type of texture, TEXTURE_2D or PROXY_TEXTURE_2D.</param>
            <param name="level">For mip-map textures, ordinary textures should be '0'.</param>
            <param name="internalformat">The format of the data you are want OpenGL to create, e.g  RGB16.</param>
            <param name="width">The width of the texture image (must be a power of 2, e.g 64).</param>
            <param name="border">The width of the border (0 or 1).</param>
            <param name="format">The format of the data you are passing, e.g. RGBA.</param>
            <param name="type">The type of data you are passing, e.g GL_BYTE.</param>
            <param name="pixels">The actual pixel data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexImage2D(System.UInt32,System.Int32,System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            This function sets the image for the currently binded texture.
            </summary>
            <param name="target">The type of texture, TEXTURE_2D or PROXY_TEXTURE_2D.</param>
            <param name="level">For mip-map textures, ordinary textures should be '0'.</param>
            <param name="internalformat">The format of the data you are want OpenGL to create, e.g  RGB16.</param>
            <param name="width">The width of the texture image (must be a power of 2, e.g 64).</param>
            <param name="height">The height of the texture image (must be a power of 2, e.g 32).</param>
            <param name="border">The width of the border (0 or 1).</param>
            <param name="format">The format of the data you are passing, e.g. RGBA.</param>
            <param name="type">The type of data you are passing, e.g GL_BYTE.</param>
            <param name="pixels">The actual pixel data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexParameterf(System.UInt32,System.UInt32,System.Single)">
            <summary>
            This function sets the parameters for the currently binded texture object.
            </summary>
            <param name="target">The type of texture you are setting the parameter to, e.g. TEXTURE_2D</param>
            <param name="pname">The parameter to set.</param>
            <param name="param">The value to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexParameterfv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            This function sets the parameters for the currently binded texture object.
            </summary>
            <param name="target">The type of texture you are setting the parameter to, e.g. TEXTURE_2D</param>
            <param name="pname">The parameter to set.</param>
            <param name="parameters">The value to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexParameteri(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            This function sets the parameters for the currently binded texture object.
            </summary>
            <param name="target">The type of texture you are setting the parameter to, e.g. TEXTURE_2D</param>
            <param name="pname">The parameter to set.</param>
            <param name="param">The value to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.SamplerParameteri(System.UInt32,System.UInt32,System.Int32)">
             <summary>
            
             </summary>
             <param name="sampler"></param>
             <param name="pname"></param>
             <param name="param"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexParameteriv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            This function sets the parameters for the currently binded texture object.
            </summary>
            <param name="target">The type of texture you are setting the parameter to, e.g. TEXTURE_2D</param>
            <param name="pname">The parameter to set.</param>
            <param name="parameters">The value to set it to.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexSubImage1D(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Specify a two-dimensional texture subimage.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_1D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies a texel offset in the x direction within the texture array.</param>
            <param name="width">Specifies the width of the texture subimage.</param>
            <param name="format">Specifies the format of the pixel data.</param>
            <param name="type">Specifies the data type of the pixel	data.</param>
            <param name="pixels">Specifies a pointer to the image data in memory.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexSubImage1D(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Specify a two-dimensional texture subimage.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_1D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies a texel offset in the x direction within the texture array.</param>
            <param name="width">Specifies the width of the texture subimage.</param>
            <param name="format">Specifies the format of the pixel data.</param>
            <param name="type">Specifies the data type of the pixel	data.</param>
            <param name="pixels">Specifies a pointer to the image data in memory.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexSubImage2D(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Specify a two-dimensional texture subimage.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_1D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies a texel offset in the x direction within the texture array.</param>
            <param name="yoffset">Specifies a texel offset in the y direction within the texture array.</param>
            <param name="width">Specifies the width of the texture subimage.</param>
            <param name="height">Specifies the height of the texture subimage.</param>
            <param name="format">Specifies the format of the pixel data.</param>
            <param name="type">Specifies the data type of the pixel	data.</param>
            <param name="pixels">Specifies a pointer to the image data in memory.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexSubImage2D(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Specify a two-dimensional texture subimage.
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_1D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies a texel offset in the x direction within the texture array.</param>
            <param name="yoffset">Specifies a texel offset in the y direction within the texture array.</param>
            <param name="width">Specifies the width of the texture subimage.</param>
            <param name="height">Specifies the height of the texture subimage.</param>
            <param name="format">Specifies the format of the pixel data.</param>
            <param name="type">Specifies the data type of the pixel	data.</param>
            <param name="pixels">Specifies a pointer to the image data in memory.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Translated(System.Double,System.Double,System.Double)">
            <summary>
            This function applies a translation transformation to the current matrix.
            </summary>
            <param name="x">The amount to translate along the x axis.</param>
            <param name="y">The amount to translate along the y axis.</param>
            <param name="z">The amount to translate along the z axis.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Translatef(System.Single,System.Single,System.Single)">
            <summary>
            This function applies a translation transformation to the current matrix.
            </summary>
            <param name="x">The amount to translate along the x axis.</param>
            <param name="y">The amount to translate along the y axis.</param>
            <param name="z">The amount to translate along the z axis.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2d(System.Double,System.Double)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2dv(System.Double[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2f(System.Single,System.Single)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2fv(System.Single[])">
            <summary>
            Sets the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">An array of 2, 3 or 4 floats.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2i(System.Int32,System.Int32)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2iv(System.Int32[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2s(System.Int16,System.Int16)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex2sv(System.Int16[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3d(System.Double,System.Double,System.Double)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3dv(System.Double[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3f(System.Single,System.Single,System.Single)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3fv(System.Single[])">
            <summary>
            Sets the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">An array of 2, 3 or 4 floats.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3i(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3iv(System.Int32[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3s(System.Int16,System.Int16,System.Int16)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex3sv(System.Int16[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4d(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4dv(System.Double[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4f(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4fv(System.Single[])">
            <summary>
            Sets the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">An array of 2, 3 or 4 floats.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4i(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4iv(System.Int32[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4s(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex4sv(System.Int16[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.VertexPointer(System.Int32,System.UInt32,System.Int32,System.IntPtr)">
            <summary>
            This function sets the address of the vertex pointer array.
            </summary>
            <param name="size">The number of coords per vertex.</param>
            <param name="type">The data type.</param>
            <param name="stride">The byte offset between vertices.</param>
            <param name="pointer">The array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.VertexPointer(System.Int32,System.UInt32,System.Int32,System.Int16[])">
            <summary>
            This function sets the address of the vertex pointer array.
            </summary>
            <param name="size">The number of coords per vertex.</param>
            <param name="type"></param>
            <param name="stride">The byte offset between vertices.</param>
            <param name="pointer">The array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.VertexPointer(System.Int32,System.UInt32,System.Int32,System.Int32[])">
            <summary>
            This function sets the address of the vertex pointer array.
            </summary>
            <param name="size">The number of coords per vertex.</param>
            <param name="type"></param>
            <param name="stride">The byte offset between vertices.</param>
            <param name="pointer">The array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.VertexPointer(System.Int32,System.UInt32,System.Int32,System.Single[])">
            <summary>
            This function sets the address of the vertex pointer array.
            </summary>
            <param name="size">The number of coords per vertex.</param>
            <param name="type"></param>
            <param name="stride">The byte offset between vertices.</param>
            <param name="pointer">The array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.VertexPointer(System.Int32,System.UInt32,System.Int32,System.Double[])">
            <summary>
            This function sets the address of the vertex pointer array.
            </summary>
            <param name="size">The number of coords per vertex.</param>
            <param name="type"></param>
            <param name="stride">The byte offset between vertices.</param>
            <param name="pointer">The array.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Viewport(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This sets the viewport of the current Render Context. Normally x and y are 0
            and the width and height are just those of the control/graphics you are drawing
            to.
            </summary>
            <param name="x">Top-Left point of the viewport.</param>
            <param name="y">Top-Left point of the viewport.</param>
            <param name="width">Width of the viewport.</param>
            <param name="height">Height of the viewport.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Translate(System.Double,System.Double,System.Double)">
            <summary>
            This function applies a translation transformation to the current matrix.
            </summary>
            <param name="x">The amount to translate along the x axis.</param>
            <param name="y">The amount to translate along the y axis.</param>
            <param name="z">The amount to translate along the z axis.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Translate(System.Single,System.Single,System.Single)">
            <summary>
            This function applies a translation transformation to the current matrix.
            </summary>
            <param name="x">The amount to translate along the x axis.</param>
            <param name="y">The amount to translate along the y axis.</param>
            <param name="z">The amount to translate along the z axis.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rotate(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function applies a rotation transformation to the current matrix.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <param name="x">Amount along x.</param>
            <param name="y">Amount along y.</param>
            <param name="z">Amount along z.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Rotate(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This function applies a rotation transformation to the current matrix.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <param name="x">Amount along x.</param>
            <param name="y">Amount along y.</param>
            <param name="z">Amount along z.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Scale(System.Double,System.Double,System.Double)">
            <summary>
            This function applies a translation transformation to the current matrix.
            </summary>
            <param name="x">The amount to translate along the x axis.</param>
            <param name="y">The amount to translate along the y axis.</param>
            <param name="z">The amount to translate along the z axis.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Scale(System.Single,System.Single,System.Single)">
            <summary>
            This function applies a translation transformation to the current matrix.
            </summary>
            <param name="x">The amount to translate along the x axis.</param>
            <param name="y">The amount to translate along the y axis.</param>
            <param name="z">The amount to translate along the z axis.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 255).</param>
            <param name="green">Green color component (between 0 and 255).</param>
            <param name="blue">Blue color component (between 0 and 255).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 255).</param>
            <param name="green">Green color component (between 0 and 255).</param>
            <param name="blue">Blue color component (between 0 and 255).</param>
            <param name="alpha">Alpha color component (between 0 and 255).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Double,System.Double,System.Double)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Single,System.Single,System.Single)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Single[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 float values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Int32[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Int16[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Double[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 double values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Byte[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 byte values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.UInt32[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 unsigned int values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.UInt16[])">
            <summary>
            Sets the current color to 'v'.
            </summary>
            <param name="v">An array of either 3 or 4 unsigned short values.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Int16,System.Int16,System.Int16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Color(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the current color.
            </summary>
            <param name="red">Red color component (between 0 and 1).</param>
            <param name="green">Green color component (between 0 and 1).</param>
            <param name="blue">Blue color component (between 0 and 1).</param>
            <param name="alpha">Alpha color component (between 0 and 1).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Double,System.Double)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Double[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Single,System.Single)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int32,System.Int32)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int32[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int16,System.Int16)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int16[])">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">Specifies the coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Double,System.Double,System.Double)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Single,System.Single,System.Single)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Single[])">
            <summary>
            Sets the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="v">An array of 2, 3 or 4 floats.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int16,System.Int16,System.Int16)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Vertex(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Set the current vertex (must be called between 'Begin' and 'End').
            </summary>
            <param name="x">X Value.</param>
            <param name="y">Y Value.</param>
            <param name="z">Z Value.</param>
            <param name="w">W Value.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Double[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Single[])">
            <summary>
            This function sets the current texture coordinates. WARNING: if you
            can call something more explicit, like TexCoord2f then call that, it's
            much faster.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int32[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int16[])">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="v">Array of 1,2,3 or 4 Texture Coordinates.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Double,System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Single,System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int32,System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int16,System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Double,System.Double,System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Single,System.Single,System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int16,System.Int16,System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexCoord(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            This function sets the current texture coordinates.
            </summary>
            <param name="s">Texture Coordinate.</param>
            <param name="t">Texture Coordinate.</param>
            <param name="r">Texture Coordinate.</param>
            <param name="q">Texture Coordinate.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.Begin(CSharpGL.DrawMode)">
             <summary>
            
             </summary>
             <param name="mode"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawArrays(CSharpGL.DrawMode,System.Int32,System.Int32)">
            <summary>
            Render	primitives from	array data.
            </summary>
            <param name="mode">Specifies what kind of primitives to render. Symbolic constants OpenGL.POINTS, OpenGL.LINE_STRIP, OpenGL.LINE_LOOP, OpenGL.LINES, OpenGL.TRIANGLE_STRIP, OpenGL.TRIANGLE_FAN, OpenGL.TRIANGLES, OpenGL.QUAD_STRIP, OpenGL.QUADS, and OpenGL.POLYGON are accepted.</param>
            <param name="first">Specifies the starting	index in the enabled arrays.</param>
            <param name="count">Specifies the number of indices to be rendered.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MultiDrawArrays(CSharpGL.DrawMode,System.Int32[],System.Int32[],System.Int32)">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="first"></param>
             <param name="count"></param>
             <param name="primcount"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawElements(CSharpGL.DrawMode,System.Int32,System.UInt32,System.IntPtr)">
            <summary>
            Render primitives from array data.
            </summary>
            <param name="mode">Specifies what kind of primitives to	render. Symbolic constants OpenGL.POINTS, OpenGL.LINE_STRIP, OpenGL.LINE_LOOP, OpenGL.LINES, OpenGL.TRIANGLE_STRIP, OpenGL.TRIANGLE_FAN, OpenGL.TRIANGLES, OpenGL.QUAD_STRIP, OpenGL.QUADS, and OpenGL.POLYGON are accepted.</param>
            <param name="count">Specifies the number of elements to be rendered.</param>
            <param name="type">Specifies the type of the values in indices.	Must be one of OpenGL.UNSIGNED_BYTE, OpenGL.UNSIGNED_SHORT, or OpenGL.UNSIGNED_INT.</param>
            <param name="indices">Specifies a pointer to the location where the indices are stored.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MultiDrawElements(CSharpGL.DrawMode,System.Int32[],System.UInt32,System.IntPtr,System.Int32)">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="count"></param>
             <param name="type"></param>
             <param name="indices"></param>
             <param name="primcount"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawRangeElements(CSharpGL.DrawMode,System.UInt32,System.UInt32,System.Int32,System.UInt32,System.IntPtr)">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="start"></param>
             <param name="end"></param>
             <param name="count"></param>
             <param name="type"></param>
             <param name="indices"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.Hint(CSharpGL.HintTarget,CSharpGL.HintMode)">
            <summary>
            Specify implementation-specific hints.
            </summary>
            <param name="target">Specifies a symbolic constant indicating the behavior to be controlled.</param>
            <param name="mode">Specifies a symbolic constant indicating the desired behavior.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetInteger(CSharpGL.GetTarget,System.Int32[])">
            <summary>
            Use this function to query OpenGL parameter values.
            </summary>
            <param name="pname">The Parameter to query</param>
            <param name="parameters">An array to put the values into.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetInteger(System.UInt32,System.Int32[])">
            <summary>
            Use this function to query OpenGL parameter values.
            </summary>
            <param name="pname">The Parameter to query</param>
            <param name="parameters">An array to put the values into.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetFloat(CSharpGL.GetTarget,System.Single[])">
            <summary>
            This this function to query OpenGL values.
            </summary>
            <param name="pname">The parameter to query.</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetDouble(CSharpGL.GetTarget,System.Double[])">
            <summary>
            This function queries OpenGL for data, and puts it in the buffer supplied.
            </summary>
            <param name="pname">The parameter to query.</param>
            <param name="parameters">The buffer to put that data into.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetBoolean(CSharpGL.GetTarget,System.Byte[])">
            <summary>
            This function queries OpenGL for data, and puts it in the buffer supplied.
            </summary>
            <param name="pname">The parameter to query.</param>
            <param name="parameters"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.ShadeModel(CSharpGL.ShadeModel)">
            <summary>
            Select flat or smooth shading.
            </summary>
            <param name="mode">Specifies a symbolic value representing a shading technique. Accepted values are OpenGL.FLAT and OpenGL.SMOOTH. The default is OpenGL.SMOOTH.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.BufferData(CSharpGL.BufferTarget,CSharpGL.UnmanagedArrayBase,CSharpGL.BufferUsage)">
            <summary>
            设置当前VBO的数据。
            </summary>
            <param name="target"></param>
            <param name="data"></param>
            <param name="usage"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.BufferData(System.UInt32,CSharpGL.UnmanagedArrayBase,CSharpGL.BufferUsage)">
            <summary>
            设置当前VBO的数据。
            </summary>
            <param name="target"></param>
            <param name="data"></param>
            <param name="usage"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexImage2D(CSharpGL.TexImage2DTargets,System.Int32,CSharpGL.TexImage2DFormats,System.Int32,System.Int32,System.Int32,CSharpGL.TexImage2DFormats,CSharpGL.TexImage2DTypes,System.IntPtr)">
            <summary>
            This function sets the image for the currently binded texture.
            </summary>
            <param name="target">The type of texture, TEXTURE_2D or PROXY_TEXTURE_2D.</param>
            <param name="level">For mip-map textures, ordinary textures should be '0'.</param>
            <param name="internalformat">The format of the data you are want OpenGL to create, e.g  RGB16.</param>
            <param name="width">The width of the texture image (must be a power of 2, e.g 64).</param>
            <param name="height">The height of the texture image (must be a power of 2, e.g 32).</param>
            <param name="border">The width of the border (0 or 1).</param>
            <param name="format">The format of the data you are passing, e.g. RGBA.</param>
            <param name="type">The type of data you are passing, e.g GL_BYTE.</param>
            <param name="pixels">The actual pixel data.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexSubImage2D(CSharpGL.TexSubImage2DTarget,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,CSharpGL.TexSubImage2DFormats,CSharpGL.TexSubImage2DType,System.IntPtr)">
            <summary>
            Specify a two-dimensional texture subimage.
            Update texture's content.
            https://www.khronos.org/opengles/sdk/docs/man/xhtml/glTexSubImage2D.xml
            </summary>
            <param name="target">Specifies the target texture. Must be OpenGL.TEXTURE_2D.</param>
            <param name="level">Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.</param>
            <param name="xoffset">Specifies a texel offset in the x direction within the texture array.</param>
            <param name="yoffset">Specifies a texel offset in the y direction within the texture array.</param>
            <param name="width">Specifies the width of the texture subimage.</param>
            <param name="height">Specifies the height of the texture subimage.</param>
            <param name="format">Specifies the format of the pixel data.</param>
            <param name="type">Specifies the data type of the pixel	data.</param>
            <param name="pixels">Specifies a pointer to the image data in memory.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetTexImage(CSharpGL.GetTexImageTargets,System.Int32,CSharpGL.GetTexImageFormats,CSharpGL.GetTexImageTypes,CSharpGL.UnmanagedArrayBase)">
            <summary>
            Return a texture image.
            </summary>
            <param name="target">Specifies which texture is to	be obtained. OpenGL.TEXTURE_1D and OpenGL.TEXTURE_2D are accepted.</param>
            <param name="level">Specifies the level-of-detail number of the desired image.  Level	0 is the base image level.  Level n is the nth mipmap reduction image.</param>
            <param name="format">Specifies a pixel format for the returned data.</param>
            <param name="type">Specifies a pixel type for the returned data.</param>
            <param name="pixels">Returns the texture image.  Should be	a pointer to an array of the type specified by type.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexImage3D(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr)">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="level"></param>
             <param name="internalformat"></param>
             <param name="width"></param>
             <param name="height"></param>
             <param name="depth"></param>
             <param name="border"></param>
             <param name="format"></param>
             <param name="type"></param>
             <param name="pixels"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.PolygonMode(CSharpGL.PolygonModeFaces,CSharpGL.PolygonMode)">
            <summary>
            This sets the current drawing mode of polygons (points, lines, filled).
            </summary>
            <param name="face">The faces this applies to (front, back or both).</param>
            <param name="mode">The mode to set to (points, lines, or filled).</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DebugMessageCallback(CSharpGL.OpenGL.DebugProc,System.IntPtr)">
            <summary>
            设置Debug模式的回调函数。
            <para>此函数的'try to remove unused items from rc2ProcDict'部分尚需检测。</para>
            </summary>
            <param name="callback"></param>
            <param name="userParam">建议使用UnmanagedArray.Header</param>
        </member>
        <member name="M:CSharpGL.OpenGL.DebugMessageControl(CSharpGL.DebugMessageControlSource,CSharpGL.DebugMessageControlType,CSharpGL.DebugMessageControlSeverity,System.Int32,System.Int32[],System.Boolean)">
            <summary>
            设置哪些属性的消息能够/不能被传入callback函数。
            </summary>
            <param name="source"></param>
            <param name="type"></param>
            <param name="severity"></param>
            <param name="count"></param>
            <param name="ids"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.DebugMessageInsert(CSharpGL.DebugSource,CSharpGL.DebugType,System.UInt32,CSharpGL.DebugSeverity,System.Int32,System.Text.StringBuilder)">
            <summary>
            用户App或工具用此函数可向Debug流写入一条消息。
            </summary>
            <param name="source"></param>
            <param name="type"></param>
            <param name="id"></param>
            <param name="severity"></param>
            <param name="length">用-1即可。</param>
            <param name="buf"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindTransformFeedback(CSharpGL.TransformFeedbackTarget,System.UInt32)">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="id"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindBufferBase(CSharpGL.BindBufferBaseTarget,System.UInt32,System.UInt32)">
            <summary>
            用于transform feedback。
            <para>bind a buffer object to an indexed buffer target.</para>
            </summary>
            <param name="target">Specifies the target buffer object.</param>
            <param name="index">Specify the index of the binding point within the array specified by <paramref name="target"/></param>
            <param name="buffer">The name of a buffer object to bind to the specified binding point.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindBufferRange(CSharpGL.BindBufferBaseTarget,System.UInt32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            bind a range within a buffer object to an indexed buffer target
            </summary>
            <param name="target">Specifies the target buffer object.</param>
            <param name="index">Specify the index of the binding point within the array specified by <paramref name="target"/></param>
            <param name="buffer">The name of a buffer object to bind to the specified binding point.</param>
            <param name="offset">The starting offset in basic machine units into the buffer object <paramref name="buffer"/>​.</param>
            <param name="size">The amount of data in machine units that can be read from the buffer object while used as an indexed target.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindBufferRange(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            bind a range within a buffer object to an indexed buffer target
            </summary>
            <param name="target">Specifies the target buffer object.</param>
            <param name="index">Specify the index of the binding point within the array specified by <paramref name="target"/></param>
            <param name="buffer">The name of a buffer object to bind to the specified binding point.</param>
            <param name="offset">The starting offset in basic machine units into the buffer object <paramref name="buffer"/>​.</param>
            <param name="size">The amount of data in machine units that can be read from the buffer object while used as an indexed target.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PatchParameter(CSharpGL.PatchParameterName,System.Int32)">
            <summary>
            specifies the parameters for patch primitives
            </summary>
            <param name="pname">Specifies the name of the parameter to set.</param>
            <param name="value">Specifies the new value for the parameter given by <paramref name="pname"/>​.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.PatchParameter(CSharpGL.PatchParameterName,System.Single[])">
            <summary>
            specifies the parameters for patch primitives
            </summary>
            <param name="pname">Specifies the name of the parameter to set.</param>
            <param name="values">Specifies the address of an array containing the new values for the parameter given by <paramref name="pname"/>​.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.MemoryBarrier(CSharpGL.MemoryBarrierFlags)">
            <summary>
            defines a barrier ordering memory transactions
            </summary>
            <param name="barriers">Specifies the barriers to insert.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexStorage1D(CSharpGL.TexStorage1DTarget,System.Int32,System.UInt32,System.Int32)">
            <summary>
            simultaneously specify storage for all levels of a one-dimensional texture
            </summary>
            <param name="target"></param>
            <param name="levels"></param>
            <param name="internalformat"></param>
            <param name="width"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexStorage2D(CSharpGL.TexStorage2DTarget,System.Int32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            simultaneously specify storage for all levels of a two-dimensional or one-dimensional array texture
            </summary>
            <param name="target"></param>
            <param name="levels"></param>
            <param name="internalformat"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexStorage3D(CSharpGL.TexStorage3DTarget,System.Int32,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            simultaneously specify storage for all levels of a three-dimensional, two-dimensional array or cube-map array texture
            </summary>
            <param name="target"></param>
            <param name="levels"></param>
            <param name="internalformat"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.BlendFunc(CSharpGL.BlendingSourceFactor,CSharpGL.BlendingDestinationFactor)">
             <summary>
            
             </summary>
             <param name="sfactor"></param>
             <param name="dfactor"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnv(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a single-valued texture environment parameter. Must be OpenGL.TEXTURE_ENV_MODE.</param>
            <param name="param">Specifies a single symbolic constant, one of OpenGL.MODULATE, OpenGL.DECAL, OpenGL.BLEND, or OpenGL.REPLACE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnv(System.UInt32,System.UInt32,System.Single[])">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a texture environment parameter. Accepted values are OpenGL.TEXTURE_ENV_MODE and OpenGL.TEXTURE_ENV_COLOR.</param>
            <param name="parameters">Specifies a pointer to a parameter array that contains either a single symbolic constant or an RGBA color.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnv(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a single-valued texture environment parameter. Must be OpenGL.TEXTURE_ENV_MODE.</param>
            <param name="param">Specifies a single symbolic constant, one of OpenGL.MODULATE, OpenGL.DECAL, OpenGL.BLEND, or OpenGL.REPLACE.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.TexEnv(System.UInt32,System.UInt32,System.Int32[])">
            <summary>
            Set texture environment parameters.
            </summary>
            <param name="target">Specifies a texture environment. Must be OpenGL.TEXTURE_ENV.</param>
            <param name="pname">Specifies the symbolic name of a texture environment parameter. Accepted values are OpenGL.TEXTURE_ENV_MODE and OpenGL.TEXTURE_ENV_COLOR.</param>
            <param name="parameters">Specifies a pointer to a parameter array that contains either a single symbolic constant or an RGBA color.</param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetString(CSharpGL.StringName)">
            <summary>
            Return a string	describing the current GL connection.
            </summary>
            <param name="name">Specifies a symbolic constant, one of OpenGL.VENDOR, OpenGL.RENDERER, OpenGL.VERSION, or OpenGL.EXTENSIONS.</param>
            <returns>Pointer to the specified string.</returns>
        </member>
        <member name="M:CSharpGL.OpenGL.ReadPixel(System.Int32,System.Int32)">
            <summary>
            读取某一点的颜色
            </summary>
            <param name="x">以左下角为(0, 0)</param>
            <param name="y">以左下角为(0, 0)</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OpenGL.DrawText(System.Int32,System.Int32,System.Drawing.Color,System.String,System.Single,System.String)">
            <summary>
            Draws the text.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
            <param name="faceName"></param>
            <param name="fontSize"></param>
            <param name="text"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetViewport">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OpenGL.GetViewport(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="width"></param>
             <param name="height"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.GetDepthRange(System.Single@,System.Single@)">
             <summary>
            
             </summary>
             <param name="near"></param>
             <param name="far"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.LineWidthRange(System.Single@,System.Single@)">
             <summary>
            
             </summary>
             <param name="min"></param>
             <param name="max"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.PointSizeRange(System.Single@,System.Single@)">
             <summary>
            
             </summary>
             <param name="min"></param>
             <param name="max"></param>
        </member>
        <member name="M:CSharpGL.OpenGL.BindTexture(CSharpGL.TextureTarget,System.UInt32)">
            <summary>
            bind a named texture to a texturing target
            </summary>
            <param name="target"></param>
            <param name="textureId"></param>
        </member>
        <member name="P:CSharpGL.OpenGL.ClearColor">
            <summary>
            Gets or sets OpenGL's clear color.
            </summary>
        </member>
        <member name="T:CSharpGL.OpenGL.glDrawRangeElements">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="start"></param>
             <param name="end"></param>
             <param name="count"></param>
             <param name="type"></param>
             <param name="indices"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexImage3D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="level"></param>
             <param name="internalformat"></param>
             <param name="width"></param>
             <param name="height"></param>
             <param name="depth"></param>
             <param name="border"></param>
             <param name="format"></param>
             <param name="type"></param>
             <param name="pixels"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexSubImage2D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="level"></param>
             <param name="xoffset"></param>
             <param name="yoffset"></param>
             <param name="width"></param>
             <param name="height"></param>
             <param name="format"></param>
             <param name="type"></param>
             <param name="pixels"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexSubImage3D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="level"></param>
             <param name="xoffset"></param>
             <param name="yoffset"></param>
             <param name="zoffset"></param>
             <param name="width"></param>
             <param name="height"></param>
             <param name="depth"></param>
             <param name="format"></param>
             <param name="type"></param>
             <param name="pixels"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glActiveTexture">
             <summary>
            
             </summary>
             <param name="texture"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glMultiDrawArrays">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="first"></param>
             <param name="count"></param>
             <param name="primcount"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glMultiDrawElements">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="count"></param>
             <param name="type"></param>
             <param name="indices"></param>
             <param name="primcount"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGenQueries">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="ids"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteQueries">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="ids"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsQuery">
             <summary>
            
             </summary>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glBeginQuery">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="id"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glEndQuery">
             <summary>
            
             </summary>
             <param name="target"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetQueryiv">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetQueryObjectiv">
             <summary>
            
             </summary>
             <param name="id"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetQueryObjectuiv">
             <summary>
            
             </summary>
             <param name="id"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindBuffer">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="buffer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteBuffers">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="buffers"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGenBuffers">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="buffers"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsBuffer">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glBufferData">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="size"></param>
             <param name="data"></param>
             <param name="usage"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBufferSubData">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="offset"></param>
             <param name="size"></param>
             <param name="data"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetBufferSubData">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="offset"></param>
             <param name="size"></param>
             <param name="data"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glMapBuffer">
            <summary>
            把服务端（GPU）上的当前Buffer Object映射到客户端（CPU）的内存上。
            </summary>
            <param name="target"></param>
            <param name="access"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glMapBufferRange">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="offset"></param>
             <param name="length"></param>
             <param name="access"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glUnmapBuffer">
            <summary>
            把客户端（CPU）上的当前Buffer Object映射到服务端（GPU）的内存上。
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glDrawBuffers">
            <summary>
            Select buffers that are written to.
            </summary>
            <param name="n"></param>
            <param name="bufs"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glAttachShader">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="shader"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindAttribLocation">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="index"></param>
             <param name="name"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glCompileShader">
             <summary>
            
             </summary>
             <param name="shader"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glCreateProgram">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glCreateShader">
            <summary>
            create a shader object.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteProgram">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteShader">
             <summary>
            
             </summary>
             <param name="shader"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDetachShader">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="shader"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDisableVertexAttribArray">
             <summary>
            
             </summary>
             <param name="index"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glEnableVertexAttribArray">
             <summary>
            
             </summary>
             <param name="index"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetAttribLocation">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramiv">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramInfoLog">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="bufSize"></param>
             <param name="length"></param>
             <param name="infoLog"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetShaderiv">
             <summary>
            
             </summary>
             <param name="shader"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetShaderInfoLog">
             <summary>
            
             </summary>
             <param name="shader"></param>
             <param name="bufSize"></param>
             <param name="length"></param>
             <param name="infoLog"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetShaderSource">
             <summary>
            
             </summary>
             <param name="shader"></param>
             <param name="bufSize"></param>
             <param name="length"></param>
             <param name="source"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetUniformLocation">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetUniformfv">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="location"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetUniformiv">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="location"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsProgram">
             <summary>
            
             </summary>
             <param name="program"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsShader">
             <summary>
            
             </summary>
             <param name="shader"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glLinkProgram">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glShaderSource">
             <summary>
            
             </summary>
             <param name="shader"></param>
             <param name="count"></param>
             <param name="source"></param>
             <param name="length"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUseProgram">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform1f">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform2f">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform3f">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
             <param name="v2"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform4f">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
             <param name="v2"></param>
             <param name="v3"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform1i">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform2i">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform3i">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
             <param name="v2"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform4i">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
             <param name="v2"></param>
             <param name="v3"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform1fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform2fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform3fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform4fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform1iv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform2iv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform3iv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform4iv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniformMatrix2fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="transpose"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniformMatrix3fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="transpose"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniformMatrix4fv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="transpose"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glVertexAttribPointer">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="size"></param>
             <param name="type"></param>
             <param name="normalized"></param>
             <param name="stride"></param>
             <param name="pointer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBeginTransformFeedback">
             <summary>
            
             </summary>
             <param name="primitiveMode"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindBufferRange">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="index"></param>
             <param name="buffer"></param>
             <param name="offset"></param>
             <param name="size"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindBufferBase">
            <summary>
            </summary>
            <param name="target">Specifies the target buffer object.</param>
            <param name="bindingPoint">Specify the index of the binding point within the array specified by <paramref name="target"/></param>
            <param name="bufferName">Buffer name generated from glGenBuffers().</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBeginConditionalRender">
             <summary>
            
             </summary>
             <param name="id"></param>
             <param name="mode"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glEndConditionalRender">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.OpenGL.glVertexAttribIPointer">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="size"></param>
             <param name="type"></param>
             <param name="stride"></param>
             <param name="pointer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glVertexAttribLPointer">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="size"></param>
             <param name="type"></param>
             <param name="stride"></param>
             <param name="pointer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindFragDataLocation">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="colorNumber"></param>
             <param name="name"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindFragDataLocationIndexed">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="colorNumber"></param>
             <param name="index"></param>
             <param name="name"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetFragDataLocation">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetFragDataIndex">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform1ui">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform2ui">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform3ui">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
             <param name="v2"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform4ui">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="v0"></param>
             <param name="v1"></param>
             <param name="v2"></param>
             <param name="v3"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform1uiv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform2uiv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform3uiv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniform4uiv">
             <summary>
            
             </summary>
             <param name="location"></param>
             <param name="count"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearBufferiv">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <param name="drawbuffer"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearBufferuiv">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <param name="drawbuffer"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearBufferfv">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <param name="drawbuffer"></param>
             <param name="value"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearBufferfi">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <param name="drawbuffer"></param>
             <param name="depth"></param>
             <param name="stencil"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDrawArraysInstanced">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="first"></param>
             <param name="count"></param>
             <param name="primcount"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDrawElementsInstanced">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="count"></param>
             <param name="type"></param>
             <param name="indices"></param>
             <param name="primcount"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDrawElementsBaseVertex">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="count"></param>
             <param name="type"></param>
             <param name="indices"></param>
             <param name="baseVertex"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexBuffer">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="internalformat"></param>
             <param name="buffer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glPrimitiveRestartIndex">
             <summary>
            
             </summary>
             <param name="index"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetInteger64i_v">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="index"></param>
             <param name="data"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetBufferParameteri64v">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glFramebufferTexture">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="attachment"></param>
             <param name="texture"></param>
             <param name="level"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glVertexAttribDivisor">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="divisor"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glFramebufferParameteri">
            <summary>
            Set a named parameter of a framebuffer.
            </summary>
            <param name="target">The target of the operation, which must be GL_READ_FRAMEBUFFER​, GL_DRAW_FRAMEBUFFER​ or GL_FRAMEBUFFER​.</param>
            <param name="pname">A token indicating the parameter to be modified.</param>
            <param name="param">The new value for the parameter named pname​.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetFramebufferParameteriv">
            <summary>
            Retrieve a named parameter from a framebuffer
            </summary>
            <param name="target">The target of the operation, which must be GL_READ_FRAMEBUFFER​, GL_DRAW_FRAMEBUFFER​ or GL_FRAMEBUFFER​.</param>
            <param name="pname">A token indicating the parameter to be retrieved.</param>
            <param name="parameters">The address of a variable to receive the value of the parameter named pname​.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glNamedFramebufferParameteri">
             <summary>
            
             </summary>
             <param name="framebuffer"></param>
             <param name="pname"></param>
             <param name="param"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetNamedFramebufferParameteriv">
             <summary>
            
             </summary>
             <param name="framebuffer"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsRenderbuffer">
             <summary>
            
             </summary>
             <param name="renderbuffer"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindRenderbuffer">
            <summary>
            bind a named renderbuffer object.
            </summary>
            <param name="target">Specifies the target to which the renderbuffer object is bound. The symbolic constant must be GL_RENDERBUFFER.</param>
            <param name="renderbuffer">Specifies the name of a renderbuffer object.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteRenderbuffers">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="renderbuffers"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGenRenderbuffers">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="renderbuffers"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glRenderbufferStorage">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="internalformat"></param>
             <param name="width"></param>
             <param name="height"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetRenderbufferParameteriv">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsFramebuffer">
             <summary>
            
             </summary>
             <param name="framebuffer"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindFramebuffer">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="framebuffer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteFramebuffers">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="framebuffers"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGenFramebuffers">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="framebuffers"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glCheckFramebufferStatus">
             <summary>
            
             </summary>
             <param name="target"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glFramebufferTexture1D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="attachment"></param>
             <param name="textarget"></param>
             <param name="texture"></param>
             <param name="level"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glFramebufferTexture2D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="attachment"></param>
             <param name="textarget"></param>
             <param name="texture"></param>
             <param name="level"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glFramebufferTexture3D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="attachment"></param>
             <param name="textarget"></param>
             <param name="texture"></param>
             <param name="level"></param>
             <param name="zoffset"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glFramebufferRenderbuffer">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="attachment"></param>
             <param name="renderbuffertarget"></param>
             <param name="renderbuffer"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetFramebufferAttachmentParameteriv">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="attachment"></param>
             <param name="pname"></param>
             <param name="parameters"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGenerateMipmap">
             <summary>
            
             </summary>
             <param name="target"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindVertexArray">
             <summary>
            
             </summary>
             <param name="array"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteVertexArrays">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="arrays"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGenVertexArrays">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="arrays"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsVertexArray">
             <summary>
            
             </summary>
             <param name="array"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.wglCreateContextAttribs">
            <summary>
            Creates a render context with the specified attributes.
            </summary>
            <param name="hDC">device context handle.</param>
            <param name="hShareContext">
            If is not null, then all shareable data (excluding
            OpenGL texture objects named 0) will be shared by <paramref name="hShareContext"/>,
            all other contexts <paramref name="hShareContext"/> already shares with, and the
            newly created context. An arbitrary number of contexts can share
            data in this fashion.</param>
            <param name="attribList">
            specifies a list of attributes for the context. The
            list consists of a sequence of &lt;name, value&gt; pairs terminated by the
            value 0. If an attribute is not specified in <paramref name="attribList"/>, then the
            default value specified below is used instead. If an attribute is
            specified more than once, then the last value specified is used.
            </param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearBufferData">
            <summary>
            Fill a buffer object's data store with a fixed value
            </summary>
            <param name="target">Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER​, GL_ATOMIC_COUNTER_BUFFER​, GL_COPY_READ_BUFFER​, GL_COPY_WRITE_BUFFER​, GL_DRAW_INDIRECT_BUFFER​, GL_DISPATCH_INDIRECT_BUFFER​, GL_ELEMENT_ARRAY_BUFFER​, GL_PIXEL_PACK_BUFFER​, GL_PIXEL_UNPACK_BUFFER​, GL_QUERY_BUFFER​, GL_SHADER_STORAGE_BUFFER​, GL_TEXTURE_BUFFER​, GL_TRANSFORM_FEEDBACK_BUFFER​, or GL_UNIFORM_BUFFER​.</param>
            <param name="internalformat">The sized internal format with which the data will be stored in the buffer object.</param>
            <param name="format">Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT​, GL_STENCIL_INDEX​, or GL_DEPTH_STENCIL​, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED​, GL_GREEN​, GL_BLUE​, GL_RG​, GL_RGB​, GL_BGR​, GL_RGBA​, and GL_BGRA​. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER​, GL_GREEN_INTEGER​, GL_BLUE_INTEGER​, GL_RG_INTEGER​, GL_RGB_INTEGER​, GL_BGR_INTEGER​, GL_RGBA_INTEGER​, and GL_BGRA_INTEGER​.</param>
            <param name="type">Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE​, GL_BYTE​, GL_UNSIGNED_SHORT​, GL_SHORT​, GL_UNSIGNED_INT​, GL_INT​, GL_FLOAT​, GL_UNSIGNED_BYTE_3_3_2​, GL_UNSIGNED_BYTE_2_3_3_REV​, GL_UNSIGNED_SHORT_5_6_5​, GL_UNSIGNED_SHORT_5_6_5_REV​, GL_UNSIGNED_SHORT_4_4_4_4​, GL_UNSIGNED_SHORT_4_4_4_4_REV​, GL_UNSIGNED_SHORT_5_5_5_1​, GL_UNSIGNED_SHORT_1_5_5_5_REV​, GL_UNSIGNED_INT_8_8_8_8​, GL_UNSIGNED_INT_8_8_8_8_REV​, GL_UNSIGNED_INT_10_10_10_2​, and GL_UNSIGNED_INT_2_10_10_10_REV​.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be NULL.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearBufferSubData">
            <summary>
            Fill all or part of buffer object's data store with a fixed value
            </summary>
            <param name="target">Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER​, GL_ATOMIC_COUNTER_BUFFER​, GL_COPY_READ_BUFFER​, GL_COPY_WRITE_BUFFER​, GL_DRAW_INDIRECT_BUFFER​, GL_DISPATCH_INDIRECT_BUFFER​, GL_ELEMENT_ARRAY_BUFFER​, GL_PIXEL_PACK_BUFFER​, GL_PIXEL_UNPACK_BUFFER​, GL_QUERY_BUFFER​, GL_SHADER_STORAGE_BUFFER​, GL_TEXTURE_BUFFER​, GL_TRANSFORM_FEEDBACK_BUFFER​, or GL_UNIFORM_BUFFER​.</param>
            <param name="internalformat">The sized internal format with which the data will be stored in the buffer object.</param>
            <param name="offset">The offset, in basic machine units into the buffer object's data store at which to start filling.</param>
            <param name="size">The size, in basic machine units of the range of the data store to fill.</param>
            <param name="format">Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT​, GL_STENCIL_INDEX​, or GL_DEPTH_STENCIL​, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED​, GL_GREEN​, GL_BLUE​, GL_RG​, GL_RGB​, GL_BGR​, GL_RGBA​, and GL_BGRA​. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER​, GL_GREEN_INTEGER​, GL_BLUE_INTEGER​, GL_RG_INTEGER​, GL_RGB_INTEGER​, GL_BGR_INTEGER​, GL_RGBA_INTEGER​, and GL_BGRA_INTEGER​.</param>
            <param name="type">Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE​, GL_BYTE​, GL_UNSIGNED_SHORT​, GL_SHORT​, GL_UNSIGNED_INT​, GL_INT​, GL_FLOAT​, GL_UNSIGNED_BYTE_3_3_2​, GL_UNSIGNED_BYTE_2_3_3_REV​, GL_UNSIGNED_SHORT_5_6_5​, GL_UNSIGNED_SHORT_5_6_5_REV​, GL_UNSIGNED_SHORT_4_4_4_4​, GL_UNSIGNED_SHORT_4_4_4_4_REV​, GL_UNSIGNED_SHORT_5_5_5_1​, GL_UNSIGNED_SHORT_1_5_5_5_REV​, GL_UNSIGNED_INT_8_8_8_8​, GL_UNSIGNED_INT_8_8_8_8_REV​, GL_UNSIGNED_INT_10_10_10_2​, and GL_UNSIGNED_INT_2_10_10_10_REV​.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be NULL.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearNamedBufferData">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <param name="internalformat"></param>
             <param name="format"></param>
             <param name="type"></param>
             <param name="data"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glClearNamedBufferSubData">
             <summary>
            
             </summary>
             <param name="buffer"></param>
             <param name="internalformat"></param>
             <param name="offset"></param>
             <param name="size"></param>
             <param name="format"></param>
             <param name="type"></param>
             <param name="data"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glCopyBufferSubData">
            <summary>
            
            </summary>
            <param name="readTarget"></param>
            <param name="writeTarget"></param>
            <param name="readOffset"></param>
            <param name="writeOffset"></param>
            <param name="size"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDispatchCompute">
             <summary>
            
             </summary>
             <param name="num_groups_x"></param>
             <param name="num_groups_y"></param>
             <param name="num_groups_z"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramInterfaceiv">
            <summary>
            Query a property of an interface in a program
            </summary>
            <param name="program">The name of a program object whose interface to query.</param>
            <param name="programInterface">A token identifying the interface within program​ to query.</param>
            <param name="pname">The name of the parameter within programInterface​ to query.</param>
            <param name="parameters">The address of a variable to retrieve the value of pname​ for the program interface..</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramResourceIndex">
            <summary>
            Query the index of a named resource within a program
            </summary>
            <param name="program">The name of a program object whose resources to query.</param>
            <param name="programInterface">A token identifying the interface within program​ containing the resource named name​.</param>
            <param name="name">The name of the resource to query the index of.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramResourceName">
            <summary>
            Query the name of an indexed resource within a program
            </summary>
            <param name="program">The name of a program object whose resources to query.</param>
            <param name="programInterface">A token identifying the interface within program​ containing the indexed resource.</param>
            <param name="index">The index of the resource within programInterface​ of program​.</param>
            <param name="bufSize">The size of the character array whose address is given by name​.</param>
            <param name="length">The address of a variable which will receive the length of the resource name.</param>
            <param name="name">The address of a character array into which will be written the name of the resource.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramResourceiv">
            <summary>
            Retrieve values for multiple properties of a single active resource within a program object
            </summary>
            <param name="program">The name of a program object whose resources to query.</param>
            <param name="programInterface">A token identifying the interface within program​ containing the resource named name​.</param>
            <param name="index">The index within the programInterface​ to query information about.</param>
            <param name="propCount">The number of properties being queried.</param>
            <param name="props">An array of properties of length propCount​ to query.</param>
            <param name="bufSize">The number of GLint values in the params​ array.</param>
            <param name="length">If not NULL, then this value will be filled in with the number of actual parameters written to params​.</param>
            <param name="parameters">The output array of parameters to write.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramResourceLocation">
            <summary>
            Query the location of a named resource within a program.
            </summary>
            <param name="program">The name of a program object whose resources to query.</param>
            <param name="programInterface">A token identifying the interface within program​ containing the resource named name​.</param>
            <param name="name">The name of the resource to query the location of.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetProgramResourceLocationIndex">
            <summary>
            Query the fragment color index of a named variable within a program.
            </summary>
            <param name="program">The name of a program object whose resources to query.</param>
            <param name="programInterface">A token identifying the interface within program​ containing the resource named name​.</param>
            <param name="name">The name of the resource to query the location of.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glShaderStorageBlockBinding">
            <summary>
            Change an active shader storage block binding.
            </summary>
            <param name="program">The name of the program containing the block whose binding to change.</param>
            <param name="storageBlockIndex">The index storage block within the program.</param>
            <param name="storageBlockBinding">The index storage block binding to associate with the specified storage block.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDebugMessageCallback">
            <summary>
            设置Debug模式的回调函数。
            </summary>
            <param name="callback">使用一个字段来持有
            <para>callback = new GL.DEBUGPROC(this.callbackProc);</para>
            这样就可以避免垃圾回收的问题。
            </param>
            <param name="userParam">建议使用UnmanagedArray.Header</param>
        </member>
        <member name="T:CSharpGL.OpenGL.DEBUGPROC">
             <summary>
            
             </summary>
             <param name="source"></param>
             <param name="type"></param>
             <param name="id"></param>
             <param name="severity"></param>
             <param name="length"></param>
             <param name="message"></param>
             <param name="userParam"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDebugMessageControl">
            <summary>
            设置哪些属性的消息能够/不能被传入callback函数。
            </summary>
            <param name="source"></param>
            <param name="type"></param>
            <param name="severity"></param>
            <param name="count"></param>
            <param name="ids"></param>
            <param name="enabled"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDebugMessageInsert">
            <summary>
            用户App或工具用此函数可向Debug流写入一条消息。
            </summary>
            <param name="source"></param>
            <param name="type"></param>
            <param name="id"></param>
            <param name="severity"></param>
            <param name="length">用-1即可。</param>
            <param name="buf"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindTransformFeedback">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="id"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glIsTransformFeedback">
             <summary>
            
             </summary>
             <param name="id"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteTransformFeedbacks">
             <summary>
            
             </summary>
             <param name="n"></param>
             <param name="ids"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glPauseTransformFeedback">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.OpenGL.glResumeTransformFeedback">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.OpenGL.glUniformBlockBinding">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="uniformBlockIndex"></param>
             <param name="uniformBlockBinding"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetUniformBlockIndex">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="uniformBlockName"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glGetActiveUniformBlockiv">
             <summary>
            
             </summary>
             <param name="program"></param>
             <param name="uniformBlockIndex"></param>
             <param name="pname"></param>
             <param name="pointer"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OpenGL.glDrawTransformFeedback">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="id"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glPatchParameteri">
            <summary>
            specifies the parameters for patch primitives
            </summary>
            <param name="pname">Specifies the name of the parameter to set.</param>
            <param name="value">Specifies the new value for the parameter given by <paramref name="pname"/>​.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glPatchParameterfv">
            <summary>
            specifies the parameters for patch primitives
            </summary>
            <param name="pname">Specifies the name of the parameter to set.</param>
            <param name="values">Specifies the address of an array containing the new values for the parameter given by <paramref name="pname"/>​.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glBindImageTexture">
            <summary>
            bind a level of a texture to an image unit(a uniform image2D in compute shader).
            </summary>
            <param name="unit">Specifies the index of the image unit to which to bind the texture.</param>
            <param name="texture">Specifies the name of the texture to bind to the image unit.</param>
            <param name="level">Specifies the level of the texture that is to be bound.</param>
            <param name="layered">Specifies whether a layered texture binding is to be established.</param>
            <param name="layer">If <paramref name="layered"/>​ is false, specifies the layer of texture​ to be bound to the image unit. Ignored otherwise.</param>
            <param name="access">Specifies a token indicating the type of access that will be performed on the image.</param>
            <param name="format">Specifies the format that the elements of the image will be treated as for the purposes of formatted stores.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexStorage1D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="levels"></param>
             <param name="internalformat"></param>
             <param name="width"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexStorage2D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="levels"></param>
             <param name="internalformat"></param>
             <param name="width"></param>
             <param name="height"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glTexStorage3D">
             <summary>
            
             </summary>
             <param name="target"></param>
             <param name="levels"></param>
             <param name="internalformat"></param>
             <param name="width"></param>
             <param name="height"></param>
             <param name="depth"></param>
        </member>
        <member name="T:CSharpGL.OpenGL.glMemoryBarrier">
            <summary>
            defines a barrier ordering memory transactions
            </summary>
            <param name="barriers">Specifies the barriers to insert.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.glDeleteSamplers">
            <summary>
            This function deletes a set of sampler objects.
            </summary>
            <param name="n">Number of textures to delete.</param>
            <param name="samplers">The array containing the names of the textures to delete.</param>
        </member>
        <member name="T:CSharpGL.OpenGL.DebugProc">
             <summary>
            
             </summary>
             <param name="source"></param>
             <param name="type"></param>
             <param name="id"></param>
             <param name="severity"></param>
             <param name="length"></param>
             <param name="message"></param>
             <param name="userParam"></param>
        </member>
        <member name="T:CSharpGL.Data2Buffer">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenAtomicCounterBuffer``1(``0[],CSharpGL.BufferUsage)">
            <summary>
            Generates an atomic counter buffer.
            </summary>
            <param name="array"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenPixelPackBuffer``1(``0[],CSharpGL.BufferUsage)">
            <summary>
            Generates an pixel pack buffer.
            </summary>
            <param name="array"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenPixelUnpackBuffer``1(``0[],CSharpGL.BufferUsage)">
            <summary>
            Generates an pixel unpack buffer.
            </summary>
            <param name="array"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenShaderStorageBuffer``1(``0[],CSharpGL.BufferUsage)">
            <summary>
            Generates an shader storage buffer.
            </summary>
            <param name="array"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenTextureBuffer``1(``0[],CSharpGL.BufferUsage)">
            <summary>
            Generates an texture buffer.
            </summary>
            <param name="array"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenUniformBuffer``1(``0[],CSharpGL.BufferUsage)">
            <summary>
            Generates an uniform buffer.
            </summary>
            <param name="array"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenIndependentBuffer``1(``0[],CSharpGL.IndependentBufferTarget,CSharpGL.BufferUsage)">
            <summary>
            Generates an independent buffer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="target"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenIndependentBuffer(CSharpGL.UnmanagedArrayBase,CSharpGL.IndependentBufferTarget,CSharpGL.BufferUsage)">
            <summary>
            Generates an independent buffer.
            </summary>
            <param name="array"></param>
            <param name="bufferTarget"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenVertexBuffer``1(``0,CSharpGL.VBOConfig,System.String,CSharpGL.BufferUsage,System.UInt32,System.Int32)">
            <summary>
            生成顶点属性Buffer。描述顶点的位置或颜色或UV等各种属性。
            <para>每个<see cref="T:CSharpGL.VertexBuffer"/>仅描述其中一个属性。</para>
            <para>Vertex Buffer Object that describes vertex' property(position, color, uv coordinate, etc.).</para>
            <para>Each <see cref="T:CSharpGL.VertexBuffer"/> describes only 1 property.</para>
            </summary>
            <param name="data"></param>
            <param name="config">This <paramref name="config"/> decides parameters' values in glVertexAttribPointer(attributeLocation, size, type, false, 0, IntPtr.Zero);</param>
            <param name="varNameInVertexShader">此顶点属性VBO对应于vertex shader中的哪个in变量？<para>Mapping variable's name in vertex shader.</para></param>
            <param name="usage"></param>
            <param name="instancedDivisor">0: not instanced. 1: instanced divisor is 1.</param>
            <param name="patchVertexes">How many vertexes makes a patch? No patch if <paramref name="patchVertexes"/> is 0.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenVertexBuffer(CSharpGL.UnmanagedArrayBase,CSharpGL.VBOConfig,System.String,CSharpGL.BufferUsage,System.UInt32,System.Int32)">
            <summary>
            生成顶点属性Buffer。描述顶点的位置或颜色或UV等各种属性。
            <para>每个<see cref="T:CSharpGL.VertexBuffer"/>仅描述其中一个属性。</para>
            <para>Vertex Buffer Object that describes vertex' property(position, color, uv coordinate, etc.).</para>
            <para>Each <see cref="T:CSharpGL.VertexBuffer"/> describes only 1 property.</para>
            </summary>
            <param name="array"></param>
            <param name="config">This <paramref name="config"/> decides parameters' values in glVertexAttribPointer(attributeLocation, size, type, false, 0, IntPtr.Zero);</param>
            <param name="varNameInVertexShader">此顶点属性VBO对应于vertex shader中的哪个in变量？<para>Mapping variable's name in vertex shader.</para></param>
            <param name="usage"></param>
            <param name="instancedDivisor">0: not instanced. 1: instanced divisor is 1.</param>
            <param name="patchVertexes">How many vertexes makes a patch? No patch if <paramref name="patchVertexes"/> is 0.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenIndexBuffer(System.Byte[],CSharpGL.DrawMode,CSharpGL.BufferUsage,System.Int32)">
            <summary>
            生成一个用于存储索引的VBO。索引指定了<see cref="T:CSharpGL.VertexBuffer"/>里各个顶点的渲染顺序。
            Generates a Vertex Buffer Object storing vertexes' indexes, which indicate the rendering order of each vertex.
            </summary>
            <param name="array"></param>
            <param name="mode">用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）</param>
            <param name="usage"></param>
            <param name="primCount">primCount in instanced rendering.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenIndexBuffer(System.UInt16[],CSharpGL.DrawMode,CSharpGL.BufferUsage,System.Int32)">
            <summary>
            生成一个用于存储索引的VBO。索引指定了<see cref="T:CSharpGL.VertexBuffer"/>里各个顶点的渲染顺序。
            Generates a Vertex Buffer Object storing vertexes' indexes, which indicate the rendering order of each vertex.
            </summary>
            <param name="array"></param>
            <param name="mode">用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）</param>
            <param name="usage"></param>
            <param name="primCount">primCount in instanced rendering.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenIndexBuffer(System.UInt32[],CSharpGL.DrawMode,CSharpGL.BufferUsage,System.Int32)">
            <summary>
            生成一个用于存储索引的VBO。索引指定了<see cref="T:CSharpGL.VertexBuffer"/>里各个顶点的渲染顺序。
            Generates a Vertex Buffer Object storing vertexes' indexes, which indicate the rendering order of each vertex.
            </summary>
            <param name="array"></param>
            <param name="mode">用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）</param>
            <param name="usage"></param>
            <param name="primCount">primCount in instanced rendering.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenIndexBuffer``1(``0[],CSharpGL.DrawMode,CSharpGL.BufferUsage,System.Int32)">
            <summary>
            生成一个用于存储索引的VBO。索引指定了<see cref="T:CSharpGL.VertexBuffer"/>里各个顶点的渲染顺序。
            Generates a Vertex Buffer Object storing vertexes' indexes, which indicate the rendering order of each vertex.
            </summary>
            <param name="array"></param>
            <param name="mode">用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）</param>
            <param name="usage"></param>
            <param name="primCount">primCount in instanced rendering.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenAtomicCounterBuffer``1(``0,CSharpGL.BufferUsage)">
            <summary>
            Generates an atomic counter buffer.
            </summary>
            <param name="data"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenPixelPackBuffer``1(``0,CSharpGL.BufferUsage)">
            <summary>
            Generates an pixel pack buffer.
            </summary>
            <param name="data"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenPixelUnpackBuffer``1(``0,CSharpGL.BufferUsage)">
            <summary>
            Generates an pixel unpack buffer.
            </summary>
            <param name="data"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenShaderStorageBuffer``1(``0,CSharpGL.BufferUsage)">
            <summary>
            Generates an shader storage buffer.
            </summary>
            <param name="data"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenTextureBuffer``1(``0,CSharpGL.BufferUsage)">
            <summary>
            Generates an texture buffer.
            </summary>
            <param name="data"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenUniformBuffer``1(``0,CSharpGL.BufferUsage)">
            <summary>
            Generates an uniform buffer.
            </summary>
            <param name="data"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Data2Buffer.GenVertexBuffer``1(``0[],CSharpGL.VBOConfig,System.String,CSharpGL.BufferUsage,System.UInt32,System.Int32)">
            <summary>
            获取顶点属性Buffer。描述顶点的位置或颜色或UV等各种属性。
            <para>每个<see cref="T:CSharpGL.VertexBuffer"/>仅描述其中一个属性。</para>
            <para>Vertex Buffer Object that describes vertex' property(position, color, uv coordinate, etc.).</para>
            <para>Each <see cref="T:CSharpGL.VertexBuffer"/> describes only 1 property.</para>
            </summary>
            <param name="array"></param>
            <param name="config">This <paramref name="config"/> decides parameters' values in glVertexAttribPointer(attributeLocation, size, type, false, 0, IntPtr.Zero);</param>
            <param name="varNameInVertexShader">此顶点属性VBO对应于vertex shader中的哪个in变量？<para>Mapping variable's name in vertex shader.</para></param>
            <param name="usage"></param>
            <param name="instancedDivisor">0: not instanced. 1: instanced divisor is 1.</param>
            <param name="patchVertexes">How many vertexes makes a patch? No patch if <paramref name="patchVertexes"/> is 0.</param>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.Data2Buffer.glGenBuffers">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Data2Buffer.glBindBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Data2Buffer.glBufferData">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.IndexBufferElementType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndexBufferElementType.UByte">
            <summary>
            byte
            </summary>
        </member>
        <member name="F:CSharpGL.IndexBufferElementType.UShort">
            <summary>
            ushort
            </summary>
        </member>
        <member name="F:CSharpGL.IndexBufferElementType.UInt">
            <summary>
            uint
            </summary>
        </member>
        <member name="T:CSharpGL.GLBuffer">
            <summary>
            位于服务器端（GPU内存）的定长数组。
            <para>An array at server side (GPU memory) with fixed length.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.ClearBufferData(CSharpGL.vec3,System.Boolean)">
            <summary>
            Fill a buffer object's data store with a fixed value.
            </summary>
            <param name="data"></param>
            <param name="autoBind">Automatically call glBindBuffer() inside this method.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.ClearBufferData(System.UInt32,System.UInt32,System.UInt32,CSharpGL.UnmanagedArrayBase,System.Boolean)">
            <summary>
            Fill a buffer object's data store with a fixed value.
            </summary>
            <param name="internalFormat">The sized internal format with which the data will be stored in the buffer object.</param>
            <param name="format">Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT​, GL_STENCIL_INDEX​, or GL_DEPTH_STENCIL​, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED​, GL_GREEN​, GL_BLUE​, GL_RG​, GL_RGB​, GL_BGR​, GL_RGBA​, and GL_BGRA​. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER​, GL_GREEN_INTEGER​, GL_BLUE_INTEGER​, GL_RG_INTEGER​, GL_RGB_INTEGER​, GL_BGR_INTEGER​, GL_RGBA_INTEGER​, and GL_BGRA_INTEGER​.</param>
            <param name="type">Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE​, GL_BYTE​, GL_UNSIGNED_SHORT​, GL_SHORT​, GL_UNSIGNED_INT​, GL_INT​, GL_FLOAT​, GL_UNSIGNED_BYTE_3_3_2​, GL_UNSIGNED_BYTE_2_3_3_REV​, GL_UNSIGNED_SHORT_5_6_5​, GL_UNSIGNED_SHORT_5_6_5_REV​, GL_UNSIGNED_SHORT_4_4_4_4​, GL_UNSIGNED_SHORT_4_4_4_4_REV​, GL_UNSIGNED_SHORT_5_5_5_1​, GL_UNSIGNED_SHORT_1_5_5_5_REV​, GL_UNSIGNED_INT_8_8_8_8​, GL_UNSIGNED_INT_8_8_8_8_REV​, GL_UNSIGNED_INT_10_10_10_2​, and GL_UNSIGNED_INT_2_10_10_10_REV​.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be null.</param>
            <param name="autoBind">Automatically call glBindBuffer() inside this method.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.ClearBufferData(System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.Boolean)">
            <summary>
            Fill a buffer object's data store with a fixed value.
            </summary>
            <param name="internalFormat">The sized internal format with which the data will be stored in the buffer object.</param>
            <param name="format">Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT​, GL_STENCIL_INDEX​, or GL_DEPTH_STENCIL​, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED​, GL_GREEN​, GL_BLUE​, GL_RG​, GL_RGB​, GL_BGR​, GL_RGBA​, and GL_BGRA​. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER​, GL_GREEN_INTEGER​, GL_BLUE_INTEGER​, GL_RG_INTEGER​, GL_RGB_INTEGER​, GL_BGR_INTEGER​, GL_RGBA_INTEGER​, and GL_BGRA_INTEGER​.</param>
            <param name="type">Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE​, GL_BYTE​, GL_UNSIGNED_SHORT​, GL_SHORT​, GL_UNSIGNED_INT​, GL_INT​, GL_FLOAT​, GL_UNSIGNED_BYTE_3_3_2​, GL_UNSIGNED_BYTE_2_3_3_REV​, GL_UNSIGNED_SHORT_5_6_5​, GL_UNSIGNED_SHORT_5_6_5_REV​, GL_UNSIGNED_SHORT_4_4_4_4​, GL_UNSIGNED_SHORT_4_4_4_4_REV​, GL_UNSIGNED_SHORT_5_5_5_1​, GL_UNSIGNED_SHORT_1_5_5_5_REV​, GL_UNSIGNED_INT_8_8_8_8​, GL_UNSIGNED_INT_8_8_8_8_REV​, GL_UNSIGNED_INT_10_10_10_2​, and GL_UNSIGNED_INT_2_10_10_10_REV​.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be IntPtr.Zero.</param>
            <param name="autoBind">Automatically call glBindBuffer() inside this method.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.ClearBufferSubData(System.Int32,System.UInt32,CSharpGL.vec3,System.Boolean)">
            <summary>
            Fill all or part of buffer object's data store with a fixed value.
            </summary>
            <param name="offset">The offset, in basic machine units into the buffer object's data store at which to start filling.</param>
            <param name="size">The size, in basic machine units of the range of the data store to fill.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be null.</param>
            <param name="autoBind">Automatically call glBindBuffer() inside this method.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.ClearBufferSubData(System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,CSharpGL.UnmanagedArrayBase,System.Boolean)">
            <summary>
            Fill all or part of buffer object's data store with a fixed value.
            </summary>
            <param name="internalFormat">The sized internal format with which the data will be stored in the buffer object.</param>
            <param name="offset">The offset, in basic machine units into the buffer object's data store at which to start filling.</param>
            <param name="size">The size, in basic machine units of the range of the data store to fill.</param>
            <param name="format">Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT​, GL_STENCIL_INDEX​, or GL_DEPTH_STENCIL​, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED​, GL_GREEN​, GL_BLUE​, GL_RG​, GL_RGB​, GL_BGR​, GL_RGBA​, and GL_BGRA​. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER​, GL_GREEN_INTEGER​, GL_BLUE_INTEGER​, GL_RG_INTEGER​, GL_RGB_INTEGER​, GL_BGR_INTEGER​, GL_RGBA_INTEGER​, and GL_BGRA_INTEGER​.</param>
            <param name="type">Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE​, GL_BYTE​, GL_UNSIGNED_SHORT​, GL_SHORT​, GL_UNSIGNED_INT​, GL_INT​, GL_FLOAT​, GL_UNSIGNED_BYTE_3_3_2​, GL_UNSIGNED_BYTE_2_3_3_REV​, GL_UNSIGNED_SHORT_5_6_5​, GL_UNSIGNED_SHORT_5_6_5_REV​, GL_UNSIGNED_SHORT_4_4_4_4​, GL_UNSIGNED_SHORT_4_4_4_4_REV​, GL_UNSIGNED_SHORT_5_5_5_1​, GL_UNSIGNED_SHORT_1_5_5_5_REV​, GL_UNSIGNED_INT_8_8_8_8​, GL_UNSIGNED_INT_8_8_8_8_REV​, GL_UNSIGNED_INT_10_10_10_2​, and GL_UNSIGNED_INT_2_10_10_10_REV​.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be null.</param>
            <param name="autoBind">Automatically call glBindBuffer() inside this method.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.ClearBufferSubData(System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.Boolean)">
            <summary>
            Fill all or part of buffer object's data store with a fixed value.
            </summary>
            <param name="internalFormat">The sized internal format with which the data will be stored in the buffer object.</param>
            <param name="offset">The offset, in basic machine units into the buffer object's data store at which to start filling.</param>
            <param name="size">The size, in basic machine units of the range of the data store to fill.</param>
            <param name="format">Specifies the format of the pixel data. For transfers of depth, stencil, or depth/stencil data, you must use GL_DEPTH_COMPONENT​, GL_STENCIL_INDEX​, or GL_DEPTH_STENCIL​, where appropriate. For transfers of normalized integer or floating-point color image data, you must use one of the following: GL_RED​, GL_GREEN​, GL_BLUE​, GL_RG​, GL_RGB​, GL_BGR​, GL_RGBA​, and GL_BGRA​. For transfers of non-normalized integer data, you must use one of the following: GL_RED_INTEGER​, GL_GREEN_INTEGER​, GL_BLUE_INTEGER​, GL_RG_INTEGER​, GL_RGB_INTEGER​, GL_BGR_INTEGER​, GL_RGBA_INTEGER​, and GL_BGRA_INTEGER​.</param>
            <param name="type">Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE​, GL_BYTE​, GL_UNSIGNED_SHORT​, GL_SHORT​, GL_UNSIGNED_INT​, GL_INT​, GL_FLOAT​, GL_UNSIGNED_BYTE_3_3_2​, GL_UNSIGNED_BYTE_2_3_3_REV​, GL_UNSIGNED_SHORT_5_6_5​, GL_UNSIGNED_SHORT_5_6_5_REV​, GL_UNSIGNED_SHORT_4_4_4_4​, GL_UNSIGNED_SHORT_4_4_4_4_REV​, GL_UNSIGNED_SHORT_5_5_5_1​, GL_UNSIGNED_SHORT_1_5_5_5_REV​, GL_UNSIGNED_INT_8_8_8_8​, GL_UNSIGNED_INT_8_8_8_8_REV​, GL_UNSIGNED_INT_10_10_10_2​, and GL_UNSIGNED_INT_2_10_10_10_REV​.</param>
            <param name="data">Specifies a pointer to a single pixel of data to upload. This parameter may not be IntPtr.Zero.</param>
            <param name="autoBind">Automatically call glBindBuffer() inside this method.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.Create(System.Type,System.Int32,CSharpGL.VBOConfig,System.String,CSharpGL.BufferUsage,System.UInt32,System.Int32)">
            <summary>
            Creates a <see cref="T:CSharpGL.VertexBuffer"/> object(actually an array) directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType">element's type of this 'array'.</param>
            <param name="length">How many elements are there?</param>
            <param name="config">mapping to vertex shader's 'in' type.</param>
            <param name="varNameInVertexShader">mapping to vertex shader's 'in' name.</param>
            <param name="usage"></param>
            <param name="instanceDivisor"></param>
            <param name="patchVertexes"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.Create(CSharpGL.DrawMode,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:CSharpGL.ZeroIndexBuffer"/> object directly in server side(GPU) without initializing its value.
            <para><see cref="T:CSharpGL.ZeroIndexBuffer"/> is not a real buffer like <see cref="T:CSharpGL.OneIndexBuffer"/>.</para>
            </summary>
            <param name="mode"></param>
            <param name="firstVertex"></param>
            <param name="vertexCount"></param>
            <param name="primCount"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.Create(CSharpGL.IndexBufferElementType,System.Int32,CSharpGL.DrawMode,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.OneIndexBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="type"></param>
            <param name="length">How many indexes are there?(How many uint/ushort/bytes?)</param>
            <param name="mode"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.Create(CSharpGL.IndependentBufferTarget,System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a sub-type of <see cref="T:CSharpGL.GLBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="target"></param>
            <param name="elementType"></param>
            <param name="length"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.DisposeManagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.DumpBufferTexture(System.UInt32,System.Boolean)">
            <summary>
            Dump a <see cref="T:CSharpGL.Texture"/> filled with this <see cref="T:CSharpGL.GLBuffer"/>.
            </summary>
            <param name="internalFormat"></param>
            <param name="autoDispose">Dispose this buffer when disposing returned texture.</param>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.GLBuffer.glGenBuffers">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glBindBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glBufferData">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glDeleteBuffers">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glMapBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glUnmapBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glMapBufferRange">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glClearBufferData">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLBuffer.glClearBufferSubData">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            位于服务器端（GPU内存）的定长数组。
            <para>An array at server side (GPU memory) with fixed length.</para>
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多少个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.GLBuffer.Bind">
             <summary>
            Bind this buffer.
             </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.Unbind">
            <summary>
            Unind this buffer.
            </summary>
        </member>
        <member name="M:CSharpGL.GLBuffer.MapBufferRange(System.Int32,System.Int32,CSharpGL.MapBufferRangeAccess,System.Boolean)">
            <summary>
            Start to read/write buffer.
            </summary>
            <param name="offset"></param>
            <param name="length"></param>
            <param name="access"></param>
            <param name="bind"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.MapBuffer(CSharpGL.MapBufferAccess,System.Boolean)">
            <summary>
            Start to read/write buffer.
            </summary>
            <param name="access"></param>
            <param name="bind"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GLBuffer.UnmapBuffer(System.Boolean)">
            <summary>
            Stop reading/writing buffer.
            </summary>
            <param name="unbind"></param>
        </member>
        <member name="P:CSharpGL.GLBuffer.BufferId">
            <summary>
            用glGenBuffers()得到的VBO的Id。
            <para>Id got from glGenBuffers();</para>
            </summary>
        </member>
        <member name="P:CSharpGL.GLBuffer.Length">
            <summary>
            此VBO含有多少个元素？
            <para>How many elements in thie buffer?</para>
            </summary>
        </member>
        <member name="P:CSharpGL.GLBuffer.ByteLength">
            <summary>
            此VBO中的数据在内存中占用多少个字节？
            <para>How many bytes in this buffer?</para>
            </summary>
        </member>
        <member name="P:CSharpGL.GLBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="T:CSharpGL.IndependentBufferTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndependentBufferTarget.AtomicCounterBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndependentBufferTarget.PixelPackBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndependentBufferTarget.PixelUnpackBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndependentBufferTarget.ShaderStorageBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndependentBufferTarget.TextureBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.IndependentBufferTarget.UniformBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PixelPackBuffer">
            <summary>
            Buffer object that not work as input variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.PixelPackBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            pixel unpack buffer's pointer.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.PixelPackBuffer.Create(System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.PixelPackBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType"></param>
            <param name="length"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.PixelPackBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="T:CSharpGL.ShaderStorageBuffer">
            <summary>
            Buffer object that not work as input variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderStorageBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            pixel unpack buffer's pointer.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.ShaderStorageBuffer.Binding(CSharpGL.ShaderProgram,System.String,System.UInt32)">
            <summary>
            Bind this uniform buffer object and a uniform block to the same binding point.
            </summary>
            <param name="program">shader program.</param>
            <param name="storageBlockName">name of buffer block in shader.</param>
            <param name="storageBlockBindingPoint">binding point maintained by OpenGL context.</param>
        </member>
        <member name="M:CSharpGL.ShaderStorageBuffer.Create(System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.ShaderStorageBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType"></param>
            <param name="usage"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.ShaderStorageBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="M:CSharpGL.VBOConfigHelper.GetDataSize(CSharpGL.VBOConfig)">
            <summary>
            Gets parameter values for glVertexAttribPointer() and glEnable/DisableVertexAttribArray().
            <para>second parameter in glVertexAttribPointer(uint index, int size, uint type, bool normalized, int stride, IntPtr pointer);</para>
            <para>How many primitive data type(float/int/uint etc) are there in a data unit?</para>
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:CSharpGL.VBOConfigHelper.Parse(CSharpGL.VBOConfig)">
            <summary>
            Gets parameter values for glVertexAttribPointer() and glEnable/DisableVertexAttribArray().
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:CSharpGL.AccumBufferState">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.GLState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLState.On">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLState.Off">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.GLState.Enabled">
            <summary>
            You want to use this switch?
            </summary>
        </member>
        <member name="M:CSharpGL.AccumBufferState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.AccumBufferState.#ctor(System.Drawing.Color,System.Single)">
             <summary>
            
             </summary>
             <param name="clearColor"></param>
             <param name="clearAlphazValue">Ranges between [0, 1.0].</param>
        </member>
        <member name="M:CSharpGL.AccumBufferState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.AccumBufferState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.AccumBufferState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.AccumBufferState.ClearValue">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.AccumBufferState.ClearAlphaValue">
            <summary>
            Alpha value.
            </summary>
        </member>
        <member name="T:CSharpGL.AlphaFuncState">
            <summary>
            specify the alpha test function.
            </summary>
        </member>
        <member name="T:CSharpGL.EnableState">
            <summary>
            GL.Enable(cap); or GL.Disable(cap);
            </summary>
        </member>
        <member name="F:CSharpGL.EnableState.enableCapacityWhenStateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.EnableState.#ctor(System.UInt32)">
            <summary>
            GL.Enable(capacity);
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:CSharpGL.EnableState.#ctor(System.UInt32,System.Boolean)">
            <summary>
            GL.Enable(capacity); or GL.Disable(capacity);
            </summary>
            <param name="capacity"></param>
            <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.EnableState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.EnableState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.EnableState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.EnableState.Capacity">
            <summary>
            GL.Enable(capacity);
            </summary>
        </member>
        <member name="P:CSharpGL.EnableState.EnableCapacity">
            <summary>
            GL.Enable(capacity); or GL.Disable(capacity);
            </summary>
        </member>
        <member name="M:CSharpGL.AlphaFuncState.#ctor">
            <summary>
            specify the alpha test function.
            </summary>
        </member>
        <member name="M:CSharpGL.AlphaFuncState.#ctor(CSharpGL.AlphaTestFunction,System.Single)">
            <summary>
            specify the alpha test function.
            </summary>
            <param name="alphaTestFunc"></param>
            <param name="alphaTestReferenceValue"></param>
        </member>
        <member name="M:CSharpGL.AlphaFuncState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.AlphaFuncState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.AlphaFuncState.AlphaTestFunc">
            <summary>
            Specifies the alpha comparison function. The initial value is GL_ALWAYS.
            </summary>
        </member>
        <member name="P:CSharpGL.AlphaFuncState.AlphaTestReferenceValue">
            <summary>
            Specifies the reference value that incoming alpha values are compared to. This value is clamped to the range [0, 1], where 0 represents the lowest possible alpha value and 1 the highest possible value. The initial reference value is 0.
            </summary>
        </member>
        <member name="T:CSharpGL.AlphaTestFunction">
            <summary>
            The alpha function
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.Never">
            <summary>
            Never passes.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.Less">
            <summary>
            Passes if the incoming alpha value is less than the reference value.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.Equal">
            <summary>
            Passes if the incoming alpha value is equal to the reference value.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.LessThanOrEqual">
            <summary>
            Passes if the incoming alpha value is less than or equal to the reference value.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.Great">
            <summary>
            Passes if the incoming alpha value is greater than the reference value.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.NotEqual">
            <summary>
            Passes if the incoming alpha value is not equal to the reference value.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.GreaterThanOrEqual">
            <summary>
            Passes if the incoming alpha value is greater than or equal to the reference value.
            </summary>
        </member>
        <member name="F:CSharpGL.AlphaTestFunction.Always">
            <summary>
            Always passes (initial value).
            </summary>
        </member>
        <member name="T:CSharpGL.ClipPlaneState">
            <summary>
            specify a plane against which all geometry is clipped.
            <para>you can't use glClipPlane and vertex programs together.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.ClipPlaneState.#ctor">
            <summary>
            specify a plane against which all geometry is clipped.
            </summary>
        </member>
        <member name="M:CSharpGL.ClipPlaneState.#ctor(System.Boolean)">
            <summary>
            specify a plane against which all geometry is clipped.
            </summary>
            <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.ClipPlaneState.#ctor(System.UInt32,System.Double[])">
            <summary>
            specify a plane against which all geometry is clipped.
            </summary>
            <param name="planeIndex">Specifies which clipping plane is being positioned. Symbolic names of the form GL_CLIP_PLANEi, where i is an integer between 0 and GL_MAX_CLIP_PLANES -1 , are accepted.
            <para>Just put in 0, 1, ... GL_MAX_CLIP_PLANES -1./// </para>
            </param>
            <param name="equation">Specifies the address of an array of four double-precision floating-point values. These values are interpreted as a plane equation.</param>
        </member>
        <member name="M:CSharpGL.ClipPlaneState.#ctor(System.UInt32,System.Double[],System.Boolean)">
            <summary>
            specify a plane against which all geometry is clipped.
            </summary>
            <param name="planeIndex">Specifies which clipping plane is being positioned. Symbolic names of the form GL_CLIP_PLANEi, where i is an integer between 0 and GL_MAX_CLIP_PLANES -1 , are accepted.
            <para>Just put in 0, 1, ... GL_MAX_CLIP_PLANES -1./// </para>
            </param>
            <param name="equation">Specifies the address of an array of four double-precision floating-point values. These values are interpreted as a plane equation.</param>
            <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.ClipPlaneState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ClipPlaneState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ClipPlaneState.MaxClipPlanes">
            <summary>
            you can't use glClipPlane and vertex programs together.
            </summary>
        </member>
        <member name="P:CSharpGL.ClipPlaneState.PlaneIndex">
            <summary>
            Specifies which clipping plane is being positioned. Symbolic names of the form GL_CLIP_PLANEi, where i is an integer between 0 and GL_MAX_CLIP_PLANES -1 , are accepted.
            <para>Just put in 0, 1, ... GL_MAX_CLIP_PLANES -1.
            </para>
            </summary>
        </member>
        <member name="P:CSharpGL.ClipPlaneState.Equation">
            <summary>
            Specifies the address of an array of four double-precision floating-point values. These values are interpreted as a plane equation.
            </summary>
        </member>
        <member name="T:CSharpGL.DitherState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DitherState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DitherState.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="enableCapacity">true for enable, false for disable</param>
        </member>
        <member name="M:CSharpGL.DitherState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.LogicOperationState">
            <summary>
            specify a logical pixel operation for rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.LogicOperationState.#ctor">
            <summary>
            specify a logical pixel operation for rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.LogicOperationState.#ctor(CSharpGL.LogicOp)">
            <summary>
            specify a logical pixel operation for rendering.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:CSharpGL.LogicOperationState.#ctor(CSharpGL.LogicOp,System.Boolean)">
            <summary>
            specify a logical pixel operation for rendering.
            </summary>
            <param name="operation"></param>
            <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.LogicOperationState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LogicOperationState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.LogicOperationState.Operation">
            <summary>
            Specifies a symbolic constant that selects a logical operation.
            </summary>
        </member>
        <member name="T:CSharpGL.LogicOp">
            <summary>
            The Logic Op
            </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.Clear">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.And">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.AndReverse">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.Copy">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.AndInverted">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.NoOp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.XOr">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.Or">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.NOr">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.Equiv">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.Invert">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.OrReverse">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.CopyInverted">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.OrInverted">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.NAnd">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.LogicOp.Set">
             <summary>
            
             </summary>
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.FrontFaceState">
            <summary>
            This function sets what defines a front face. Counter ClockWise by default.
            <para>作用是控制多边形的正面是如何决定的。在默认情况下，mode是GL_CCW。</para>
            </summary>
        </member>
        <member name="M:CSharpGL.FrontFaceState.#ctor">
            <summary>
            This function sets what defines a front face. Counter ClockWise by default.
            <para>作用是控制多边形的正面是如何决定的。在默认情况下，mode是GL_CCW。</para>
            </summary>
        </member>
        <member name="M:CSharpGL.FrontFaceState.#ctor(CSharpGL.FrontFaceMode)">
            <summary>
            This function sets what defines a front face. Counter ClockWise by default.
            <para>作用是控制多边形的正面是如何决定的。在默认情况下，mode是GL_CCW。</para>
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:CSharpGL.FrontFaceState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FrontFaceState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FrontFaceState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FrontFaceState.Mode">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.RendererBase">
            <summary>
            用OpenGL初始化和渲染一个模型。
            <para>Initialize and render something with OpenGL.</para>
            </summary>
        </member>
        <member name="T:CSharpGL.IRenderable">
            <summary>
            Render something.
            </summary>
        </member>
        <member name="T:CSharpGL.IModelSpace">
            <summary>
            gets model's original size.
            transform a model from model's sapce to world's space.
            </summary>
        </member>
        <member name="P:CSharpGL.IModelSpace.WorldPosition">
            <summary>
            Position in world space.
            </summary>
        </member>
        <member name="P:CSharpGL.IModelSpace.RotationAngleDegree">
            <summary>
            Rotation angle in degree.
            </summary>
        </member>
        <member name="P:CSharpGL.IModelSpace.RotationAxis">
            <summary>
            Rotation axis.
            </summary>
        </member>
        <member name="P:CSharpGL.IModelSpace.Scale">
            <summary>
            Scale factor.
            </summary>
        </member>
        <member name="P:CSharpGL.IModelSpace.ModelSize">
            <summary>
            Size in X/Y/Z axis.
            </summary>
        </member>
        <member name="M:CSharpGL.IRenderable.Render(CSharpGL.RenderEventArgs)">
            <summary>
            Render something.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="F:CSharpGL.RendererBase.strModelSpace">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RendererBase.modelMatrix">
            <summary>
            model matrix that transform this renderer in world space coordinate.
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.GetModelMatrix">
            <summary>
            Get model matrix that transform this renderer from model space to world space.
            </summary>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.RendererBase.modelMatrixRecord">
            <summary>
            records whether modelMatrix is updated.
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.Initialize">
            <summary>
            Initialize all stuff related to OpenGL.
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.DoInitialize">
            <summary>
            This method should only be invoked once.
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.Render(CSharpGL.RenderEventArgs)">
            <summary>
            Render something.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.RendererBase.DoRender(CSharpGL.RenderEventArgs)">
            <summary>
            Render something.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.RendererBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.RendererBase.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.RendererBase.DisposeManagedResources">
            <summary>
            释放.net托管资源。
            <para>Dispose reources managed by .NET.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.DisposeUnmanagedResources">
            <summary>
            释放.net非托管资源，例如释放OpenGL相关的资源（Buffer、纹理等）。
            <para>Dispose resources not managed by .NET(OpenGL buffers, textures, etc.).</para>
            </summary>
        </member>
        <member name="M:CSharpGL.RendererBase.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.RendererBase.#ctor">
            <summary>
            用OpenGL初始化和渲染一个模型。
            <para>Initialize and render something with OpenGL.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.WorldPosition">
            <summary>
            Position in world space.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.RotationAngleDegree">
            <summary>
            Rotation angle in degree.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.RotationAxis">
            <summary>
            Rotation axis.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.Scale">
            <summary>
            Scale factor.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.ModelSize">
            <summary>
            Length in X/Y/Z axis.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.IsInitialized">
            <summary>
            Already initialized.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.BindingSceneObject">
            <summary>
            binding scene object.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.Enabled">
            <summary>
            Render this or not.
            </summary>
        </member>
        <member name="P:CSharpGL.RendererBase.Id">
            <summary>
            为便于调试而设置的ID值，没有应用意义。
            <para>for debugging purpose only.</para>
            </summary>
        </member>
        <member name="T:CSharpGL.ShaderProgram">
            <summary>
            A shader program object.
            </summary>
            <summary>
            A shader program object.
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Int32[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Single[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.bvec2[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.uvec2[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.ivec2[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.vec2[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.bvec3[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.uvec3[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.ivec3[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.vec3[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.bvec4[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.uvec4[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.ivec4[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,CSharpGL.vec4[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Boolean[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.UInt32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.UInt32,System.UInt32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.UInt32[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Int32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Single)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Single,System.Single)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Single,System.Single,System.Single)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniform(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="v0"></param>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniformMatrix2(System.String,CSharpGL.mat2[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="m"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniformMatrix3(System.String,CSharpGL.mat3[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="m"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniformMatrix4(System.String,CSharpGL.mat4[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="m"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniformMatrix2(System.String,System.Single[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="m"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniformMatrix3(System.String,System.Single[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="m"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.SetUniformMatrix4(System.String,System.Single[])">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <param name="m"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderProgram.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.ShaderProgram.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderProgram.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.Initialize(CSharpGL.Shader[])">
            <summary>
            Initialize this shader program object.
            </summary>
            <param name="shaders"></param>
        </member>
        <member name="M:CSharpGL.ShaderProgram.GetAttributeLocation(System.String)">
            <summary>
            Query location/index of specified <paramref name="attributeName"/>.
            </summary>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderProgram.Bind">
            <summary>
            Use this program.
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderProgram.Unbind">
            <summary>
            Stop using this program.
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderProgram.GetUniformLocation(System.String)">
            <summary>
            </summary>
            <param name="uniformName"></param>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.ShaderProgram.uniformNamesToLocations">
            <summary>
            A mapping of uniform names to locations. This allows us to very easily specify
            uniform data by name, quickly looking up the location first if needed.
            </summary>
        </member>
        <member name="F:CSharpGL.ShaderProgram.attributeNamesToLocations">
            <summary>
            A mapping of attribute names to locations. This allows us to very easily specify
            attribute data by name, quickly looking up the location first if needed.
            </summary>
        </member>
        <member name="P:CSharpGL.ShaderProgram.ProgramId">
            <summary>
            Gets the shader program object.
            </summary>
        </member>
        <member name="T:CSharpGL.CubemapImageFiller">
            <summary>
            build texture's content with Bitmap.
            </summary>
        </member>
        <member name="T:CSharpGL.ImageFiller">
            <summary>
            build texture's content.
            </summary>
        </member>
        <member name="M:CSharpGL.ImageFiller.Fill">
            <summary>
            build texture's content.
            </summary>
        </member>
        <member name="M:CSharpGL.CubemapImageFiller.#ctor(CSharpGL.CubemapImages,System.Int32,System.UInt32,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            build texture's content with Bitmap.
            </summary>
            <param name="images"></param>
            <param name="level">0</param>
            <param name="internalformat">OpenGL.GL_RGBA etc.</param>
            <param name="border">0</param>
            <param name="format">OpenGL.GL_BGRA etc.</param>
            <param name="type">OpenGL.GL_UNSIGNED_BYTE etc.</param>
        </member>
        <member name="M:CSharpGL.CubemapImageFiller.Fill">
            <summary>
            build texture's content with Bitmap.
            </summary>
        </member>
        <member name="T:CSharpGL.CubemapImages">
            <summary>
            maintains 6 images for cube map.
            </summary>
        </member>
        <member name="M:CSharpGL.CubemapImages.#ctor(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            maintains 6 images for cube map.
            </summary>
            <param name="positiveX"></param>
            <param name="negativeX"></param>
            <param name="positiveY"></param>
            <param name="negativeY"></param>
            <param name="positiveZ"></param>
            <param name="negativeZ"></param>
        </member>
        <member name="M:CSharpGL.CubemapImages.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.CubemapImages.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.CubemapImages.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.CubemapImages.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.CubemapImages.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="T:CSharpGL.UniformBlock`1">
            <summary>
            A uiform block in shader.
            <para>https://www.opengl.org/registry/specs/ARB/uniform_buffer_object.txt</para>
            <para>http://blog.csdn.net/csxiaoshui/article/details/32101977</para>
            </summary>
        </member>
        <member name="T:CSharpGL.UniformSingleVariable`1">
            <summary>
            A uiform variable in shader.
            </summary>
        </member>
        <member name="T:CSharpGL.UniformSingleVariableBase">
            <summary>
            A uiform variable in shader.
            </summary>
        </member>
        <member name="T:CSharpGL.UniformVariable">
            <summary>
            An uniform variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVariable.#ctor(System.String)">
            <summary>
            An uniform variable in shader.
            </summary>
            <param name="varName">variable name.</param>
        </member>
        <member name="M:CSharpGL.UniformVariable.SetUniform(CSharpGL.ShaderProgram)">
            <summary>
            Set uniform's value to GPU.(And maybe alsoe reset <see cref="P:CSharpGL.UniformVariable.Updated"/> property.)
            </summary>
            <param name="program"></param>
        </member>
        <member name="M:CSharpGL.UniformVariable.DoSetUniform(CSharpGL.ShaderProgram)">
            <summary>
            Set uniform's value to GPU.(And maybe alsoe reset <see cref="P:CSharpGL.UniformVariable.Updated"/> property.)
            </summary>
            <param name="program"></param>
        </member>
        <member name="P:CSharpGL.UniformVariable.VarName">
            <summary>
            variable name.
            </summary>
        </member>
        <member name="P:CSharpGL.UniformVariable.Location">
            <summary>
            location retrieved from shader.
            </summary>
        </member>
        <member name="P:CSharpGL.UniformVariable.Updated">
            <summary>
            标识此uniform变量是否已更新（若为true，则需要在render前一刻提交到GPU）
            <para>If true, set uniform's value to GPU; otherwise nothing needed to do.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.UniformSingleVariableBase.#ctor(System.String)">
            <summary>
            A uiform variable in shader.
            </summary>
            <param name="varName"></param>
        </member>
        <member name="F:CSharpGL.UniformSingleVariable`1.value">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.UniformSingleVariable`1.#ctor(System.String)">
            <summary>
            A uiform variable in shader.
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformSingleVariable`1.#ctor(System.String,`0)">
            <summary>
            A uiform variable in shader.
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformSingleVariable`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.UniformSingleVariable`1.Value">
            <summary>
            Don't rename this property because its used in Renderer.GetVariable&lt;T&gt;(T value, string varNameInShader).
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBlock`1.#ctor(System.String)">
            <summary>
            A uiform block in shader.
            </summary>
            <param name="blockName"></param>
        </member>
        <member name="M:CSharpGL.UniformBlock`1.#ctor(System.String,`0)">
            <summary>
            A uiform block in shader.
            </summary>
            <param name="blockName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformBlock`1.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="M:CSharpGL.UniformBlock`1.Initialize(CSharpGL.ShaderProgram)">
            <summary>
            Initialize and setup uniform block's value.
            </summary>
            <param name="program"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.UniformValueAttribute">
            <summary>
            Mark <see cref="T:CSharpGL.UniformVariable"/>'s 'Value' property.
            </summary>
        </member>
        <member name="T:CSharpGL.VertexNormalHelper">
            <summary>
            Helper class for generating vertex's normal.
            </summary>
        </member>
        <member name="M:CSharpGL.VertexNormalHelper.GenerateNormalsForQuadMesh(CSharpGL.vec3[],System.UInt32[])">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.VertexNormalHelper.GenerateNormalsForTriangleMesh(CSharpGL.vec3[],System.UInt32[])">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.SortingHelper">
            <summary>
            Helper class for sorting unmanaged array.
            </summary>
            <summary>
            Helper class for sorting unmanaged array.
            </summary>
        </member>
        <member name="M:CSharpGL.SortingHelper.Sort``1(CSharpGL.UnmanagedArray{``0},System.Collections.Generic.Comparer{``0})">
            <summary>
            Sort unmanaged array specified with <paramref name="array"/> at specified area.
            </summary>
            <param name="array"></param>
            <param name="comparer">
            If you want descending sort, make it returns -1 when <paramref name="array"/>[left] &lt; <paramref name="array"/>[right].
            <para>Otherwise, make it returns -1 when <paramref name="array"/>[left] &gt; <paramref name="array"/>[right].</para></param>
        </member>
        <member name="M:CSharpGL.SortingHelper.Sort``1(CSharpGL.UnmanagedArray{``0},System.Int32,System.Int32,System.Collections.Generic.Comparer{``0})">
            <summary>
            Sort unmanaged array specified with <paramref name="array"/> at specified area.
            </summary>
            <param name="array"></param>
            <param name="start">index of first value to be sorted.</param>
            <param name="length">length of <paramref name="array"/> to bo sorted.</param>
            <param name="comparer">
            If you want descending sort, make it returns -1 when <paramref name="array"/>[left] &lt; <paramref name="array"/>[right].
            <para>Otherwise, make it returns -1 when <paramref name="array"/>[left] &gt; <paramref name="array"/>[right].</para></param>
        </member>
        <member name="M:CSharpGL.SortingHelper.Sort``1(CSharpGL.UnmanagedArray{``0},System.Boolean)">
            <summary>
            Sort unmanaged array specified with <paramref name="array"/> at specified area.
            </summary>
            <param name="array"></param>
            <param name="descending">true for descending sort; otherwise false.</param>
        </member>
        <member name="M:CSharpGL.SortingHelper.Sort``1(CSharpGL.UnmanagedArray{``0},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sort unmanaged array specified with <paramref name="array"/> at specified area.
            </summary>
            <param name="array"></param>
            <param name="start">index of first value to be sorted.</param>
            <param name="length">length of <paramref name="array"/> to bo sorted.</param>
            <param name="descending">true for descending sort; otherwise false.</param>
        </member>
        <member name="F:CSharpGL.OpenGL32Library.libPtr">
            <summary>
            glLibrary = Win32.LoadLibrary(OpenGL32);
            </summary>
        </member>
        <member name="M:CSharpGL.OpenGL32Library.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.OpenGL32Library.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Win32">
            <summary>
            Useful functions imported from the Win32 SDK.
            </summary>
        </member>
        <member name="F:CSharpGL.Win32.kernel32">
            <summary>
            private const string kernel32 = "kernel32.dll";
            </summary>
        </member>
        <member name="F:CSharpGL.Win32.gdi32">
            <summary>
            private const string gdi32 = "gdi32.dll"
            </summary>
        </member>
        <member name="F:CSharpGL.Win32.user32">
            <summary>
            private const string user32 = "user32.dll"
            </summary>
        </member>
        <member name="F:CSharpGL.Win32.opengl32">
            <summary>
            internal const string OpenGL32 = "opengl32.dll"
            </summary>
        </member>
        <member name="M:CSharpGL.Win32.wglGetCurrentContext">
            <summary>
            Gets the current render context.
            </summary>
            <returns>The current render context.</returns>
        </member>
        <member name="M:CSharpGL.Win32.wglGetCurrentDC">
            <summary>
            The wglGetCurrentDC function obtains a handle to the device context that is associated with the current OpenGL rendering context of the calling thread.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Win32.wglMakeCurrent(System.IntPtr,System.IntPtr)">
            <summary>
            Make the specified render context current.
            </summary>
            <param name="hdc">The handle to the device context.</param>
            <param name="hrc">The handle to the render context.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Win32.wglCreateContext(System.IntPtr)">
            <summary>
            Creates a render context from the device context.
            </summary>
            <param name="hdc">The handle to the device context.</param>
            <returns>The handle to the render context.</returns>
        </member>
        <member name="M:CSharpGL.Win32.wglDeleteContext(System.IntPtr)">
            <summary>
            Deletes the render context.
            </summary>
            <param name="hrc">The handle to the render context.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Win32.wglGetProcAddress(System.String)">
            <summary>
            Gets a proc address.
            </summary>
            <param name="name">The name of the function.</param>
            <returns>The address of the function.</returns>
        </member>
        <member name="M:CSharpGL.Win32.wglUseFontBitmaps(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            The wglUseFontBitmaps function creates a set of bitmap display lists for use in the current OpenGL rendering context. The set of bitmap display lists is based on the glyphs in the currently selected font in the device context. You can then use bitmaps to draw characters in an OpenGL image.
            </summary>
            <param name="hDC">Specifies the device context whose currently selected font will be used to form the glyph bitmap display lists in the current OpenGL rendering context..</param>
            <param name="first">Specifies the first glyph in the run of glyphs that will be used to form glyph bitmap display lists.</param>
            <param name="count">Specifies the number of glyphs in the run of glyphs that will be used to form glyph bitmap display lists. The function creates count display lists, one for each glyph in the run.</param>
            <param name="listBase">Specifies a starting display list.</param>
            <returns>If the function succeeds, the return value is TRUE. If the function fails, the return value is FALSE. To get extended error information, call GetLastError.</returns>
        </member>
        <member name="M:CSharpGL.Win32.CreateCompatibleDC(System.IntPtr)">
            <summary>
            This function creates a memory device context (DC) compatible with the specified device.
            </summary>
            <param name="hDC">Handle to an existing device context.If this handle is NULL, the function creates a memory device context compatible with the application's current screen.</param>
            <returns>The handle to a memory device context indicates success. NULL indicates failure.</returns>
        </member>
        <member name="T:CSharpGL.TranslateManipulater">
            <summary>
            Rotate model using arc-ball method.
            </summary>
        </member>
        <member name="T:CSharpGL.Manipulater">
            <summary>
            Manipulate camera or model.
            </summary>
        </member>
        <member name="M:CSharpGL.Manipulater.Bind(CSharpGL.ICamera,CSharpGL.ICanvas)">
            <summary>
            start to manipulate specified <paramref name="camera"/> or model.
            </summary>
            <param name="camera"></param>
            <param name="canvas"></param>
        </member>
        <member name="M:CSharpGL.Manipulater.Unbind">
            <summary>
            stop to manipulate camera or model.
            </summary>
        </member>
        <member name="T:CSharpGL.IMouseHandler">
            <summary>
            Handle mouse events.
            </summary>
        </member>
        <member name="M:CSharpGL.IMouseHandler.canvas_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.IMouseHandler.canvas_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.IMouseHandler.canvas_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.IMouseHandler.canvas_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.TranslateManipulater.#ctor(CSharpGL.RendererBase,System.Windows.Forms.MouseButtons)">
            <summary>
            Rotate model using arc-ball method.
            </summary>
            <param name="renderer"></param>
            <param name="bindingMouseButtons"></param>
        </member>
        <member name="M:CSharpGL.TranslateManipulater.Bind(CSharpGL.ICamera,CSharpGL.ICanvas)">
             <summary>
            
             </summary>
             <param name="camera"></param>
             <param name="canvas"></param>
        </member>
        <member name="M:CSharpGL.TranslateManipulater.Unbind">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.TranslateManipulater.IsBinded">
            <summary>
            
            </summary>
        </member>
        <member name="P:CSharpGL.TranslateManipulater.BindingMouseButtons">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.TranslateManipulater.MouseSensitivity">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.BezierType">
            <summary>
            Type of bezier graph.
            </summary>
        </member>
        <member name="F:CSharpGL.BezierType.Curve">
            <summary>
            1D evaluator.(a bezier curve)
            </summary>
        </member>
        <member name="F:CSharpGL.BezierType.Surface">
            <summary>
            2D evaluater.(a bezier surface)
            </summary>
        </member>
        <member name="T:CSharpGL.BezierRenderer">
            <summary>
            Rendering a evaluator(a bezier curve or surface) and its control points.
            </summary>
        </member>
        <member name="T:CSharpGL.PointsRenderer">
            <summary>
            Rendering points.
            </summary>
        </member>
        <member name="T:CSharpGL.PickableRenderer">
            <summary>
            支持"拾取"的渲染器
            </summary>
        </member>
        <member name="T:CSharpGL.Renderer">
            <summary>
            Rendering something using GLSL shader and VBO(VAO).
            </summary>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformBoolArrayValue(System.String,System.Boolean[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformFloatArrayValue(System.String,System.Single[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformVec2ArrayValue(System.String,CSharpGL.vec2[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformVec3ArrayValue(System.String,CSharpGL.vec3[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformVec4ArrayValue(System.String,CSharpGL.vec4[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformMat2ArrayValue(System.String,CSharpGL.mat2[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformMat3ArrayValue(System.String,CSharpGL.mat3[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformMat4ArrayValue(System.String,CSharpGL.mat4[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformSamplerArrayValue(System.String,CSharpGL.samplerValue[]@)">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,System.Boolean[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,System.Single[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.vec2[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.vec3[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.vec4[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.mat2[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.mat3[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.mat4[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.samplerValue[])">
             <summary>
            
             </summary>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.GetVariableArray(System.Array,System.String)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="F:CSharpGL.Renderer.vertexArrayObject">
            <summary>
            Vertex Array Object.
            </summary>
        </member>
        <member name="F:CSharpGL.Renderer.vertexAttributeBuffers">
            <summary>
            Vertex attribute buffers.
            </summary>
        </member>
        <member name="F:CSharpGL.Renderer.indexBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Renderer.stateList">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Renderer.shaderCodes">
            <summary>
            All shader codes needed for this renderer.
            </summary>
        </member>
        <member name="F:CSharpGL.Renderer.attributeMap">
            <summary>
            Mapping relations between 'in' variables in vertex shader and buffers in <see cref="P:CSharpGL.Renderer.DataSource"/>.
            </summary>
        </member>
        <member name="M:CSharpGL.Renderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,CSharpGL.GLState[])">
             <summary>
             Rendering something using GLSL shader and VBO(VAO).
             </summary>
             <param name="model">model data that can be transfermed into OpenGL Buffer's pointer.</param>
             <param name="shaderCodes">All shader codes needed for this renderer.</param>
             <param name="attributeMap">Mapping relations between 'in' variables in vertex shader in <see cref="F:CSharpGL.Renderer.shaderCodes"/> and buffers in <see cref="P:CSharpGL.Renderer.DataSource"/>.</param>
            <param name="switches">OpenGL switches.</param>
        </member>
        <member name="M:CSharpGL.Renderer.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Renderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Renderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="F:CSharpGL.Renderer.uniformVariables">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Renderer.GetUniformValue``1(System.String,``0@)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="varNameInShader"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform(System.String,CSharpGL.Texture)">
            <summary>
            Sets up a new value to specified uniform variable and mark it as updated so that the new value will be sent to shader before rendering.
            </summary>
            <param name="varNameInShader"></param>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderer.SetUniform``1(System.String,``0)">
            <summary>
            Sets up a new value to specified uniform variable and mark it as updated so that the new value will be sent to shader before rendering.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="varNameInShader"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Renderer.Program">
            <summary>
            Shader Program that does the rendering algorithm.
            </summary>
        </member>
        <member name="P:CSharpGL.Renderer.DataSource">
            <summary>
            model data that can be transfermed into OpenGL Buffer Objects.
            </summary>
        </member>
        <member name="P:CSharpGL.Renderer.UniformVariables">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Renderer.StateList">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Renderer.IndexBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Renderer.VertexAttributeBuffers">
            <summary>
             Vertex attribute buffers.
            </summary>
        </member>
        <member name="P:CSharpGL.Renderer.VertexArrayObject">
            <summary>
            Vertex Array Object.
            </summary>
        </member>
        <member name="T:CSharpGL.IPickable">
            <summary>
            Scene element that implemented this interface will take part in color-coded picking.
            </summary>
        </member>
        <member name="M:CSharpGL.IPickable.Render4Picking(CSharpGL.RenderEventArgs)">
            <summary>
            Render for color-coded picking.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.IPickable.GetVertexCount">
            <summary>
            Gets vertices' count in this element's VBO representing positions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IPickable.GetPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Get the geometry according to vertex's id.
            <para>Note: the <paramref name="stageVertexId"/> refers to the last vertex that constructs the geometry. And it's unique among all elements in a scene.</para>
            </summary>
            <param name="arg"></param>
            <param name="stageVertexId">Refers to the last vertex that constructs the primitive. And it's unique in scene's all elements.</param>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.IPickable.PickingBaseId">
            <summary>
            Gets how many primitived have been rendered till now during color coded rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.PickableRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PickableRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
             <summary>
             支持"拾取"的渲染器
             </summary>
             <param name="model">一种渲染方式</param>
             <param name="shaderCodes">各种类型的shader代码</param>
             <param name="attributeMap">关联<paramref name="model"/>和<paramref name="shaderCodes"/>中的属性</param>
             <param name="positionNameInIBufferable">描述顶点位置信息的buffer的名字</param>
            <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.PickableRenderer.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PickableRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.PickableRenderer.Render4Picking(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.PickableRenderer.GetVertexCount">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PickableRenderer.GetPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PickableRenderer.MovePositions(System.Drawing.Point,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4,System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            Move vertexes' position accroding to difference on screen.
            <para>根据<paramref name="differenceOnScreen"/>来修改指定索引处的顶点位置。</para>
            </summary>
            <param name="differenceOnScreen"></param>
            <param name="viewMatrix"></param>
            <param name="projectionMatrix"></param>
            <param name="viewport"></param>
            <param name="positionIndexes"></param>
        </member>
        <member name="M:CSharpGL.PickableRenderer.MovePositions(System.Drawing.Point,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4,System.UInt32[])">
            <summary>
            Move vertexes' position accroding to difference on screen.
            <para>根据<paramref name="differenceOnScreen"/>来修改指定索引处的顶点位置。</para>
            </summary>
            <param name="differenceOnScreen"></param>
            <param name="viewMatrix"></param>
            <param name="projectionMatrix"></param>
            <param name="viewport"></param>
            <param name="positionIndexes"></param>
        </member>
        <member name="P:CSharpGL.PickableRenderer.WorldPosition">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.ModelSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.RotationAngleDegree">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.RotationAxis">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.Scale">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.PositionNameInIBufferable">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.PickingBaseId">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickableRenderer.PositionBuffer">
            <summary>
            Position buffer.
            </summary>
        </member>
        <member name="M:CSharpGL.PointsRenderer.Create(CSharpGL.Points)">
             <summary>
            
             </summary>
             <param name="model"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PointsRenderer.#ctor(CSharpGL.Points,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
             <summary>
            
             </summary>
             <param name="model"></param>
             <param name="shaderCodes"></param>
             <param name="attributeMap"></param>
             <param name="positionNameInIBufferable"></param>
             <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.PointsRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.PointsRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.PointsRenderer.PointColor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BezierRenderer.MovePositions(System.Drawing.Point,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4,System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            Move vertexes' position accroding to difference on screen.
            <para>根据<paramref name="differenceOnScreen"/>来修改指定索引处的顶点位置。</para>
            </summary>
            <param name="differenceOnScreen"></param>
            <param name="viewMatrix"></param>
            <param name="projectionMatrix"></param>
            <param name="viewport"></param>
            <param name="positionIndexes"></param>
        </member>
        <member name="M:CSharpGL.BezierRenderer.MovePositions(System.Drawing.Point,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4,System.UInt32[])">
            <summary>
            Move vertexes' position accroding to difference on screen.
            <para>根据<paramref name="differenceOnScreen"/>来修改指定索引处的顶点位置。</para>
            </summary>
            <param name="differenceOnScreen"></param>
            <param name="viewMatrix"></param>
            <param name="projectionMatrix"></param>
            <param name="viewport"></param>
            <param name="positionIndexes"></param>
        </member>
        <member name="M:CSharpGL.BezierRenderer.Create(System.Collections.Generic.IList{CSharpGL.vec3},CSharpGL.BezierType)">
            <summary>
            Creates a renderer that renders a evaluator(a bezier curve or surface) and its control points.
            </summary>
            <param name="controlPoints"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.BezierRenderer.#ctor(System.Collections.Generic.IList{CSharpGL.vec3},CSharpGL.BezierType,CSharpGL.Points,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
            <summary>
            Rendering a evaluator(a bezier curve or surface) and its control points.
            </summary>
            <param name="controlPoints"></param>
            <param name="type"></param>
            <param name="model"></param>
            <param name="shaderCodes"></param>
            <param name="attributeMap"></param>
            <param name="positionNameInIBufferable"></param>
            <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.BezierRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BezierRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.BezierRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.BezierRenderer.Evaluator">
            <summary>
            Rendering a evaluator(a bezier curve or surface).
            </summary>
        </member>
        <member name="P:CSharpGL.BezierRenderer.WorldPosition">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.BezierRenderer.RotationAngleDegree">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.BezierRenderer.RotationAxis">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.BezierRenderer.Scale">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.EvaluatorRenderer">
            <summary>
            This is an abstract evaluator i.e a bezier curve or surface.
            </summary>
        </member>
        <member name="F:CSharpGL.EvaluatorRenderer.controlPoints">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.EvaluatorRenderer.#ctor(System.Collections.Generic.IList{CSharpGL.vec3})">
            <summary>
            This is a 1D evaluator, i.e a bezier curve.
            </summary>
        </member>
        <member name="M:CSharpGL.EvaluatorRenderer.Setup(CSharpGL.vec3[])">
             <summary>
            
             </summary>
             <param name="controlPoints"></param>
        </member>
        <member name="P:CSharpGL.EvaluatorRenderer.CurveWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.EvaluatorRenderer.CurveColor">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Evaluator1DRenderer">
            <summary>
            This is a 1D evaluator, i.e a bezier curve.
            </summary>
        </member>
        <member name="M:CSharpGL.Evaluator1DRenderer.#ctor(System.Collections.Generic.IList{CSharpGL.vec3})">
            <summary>
            This is a 1D evaluator, i.e a bezier curve.
            </summary>
        </member>
        <member name="M:CSharpGL.Evaluator1DRenderer.DoInitialize">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.Evaluator1DRenderer.DoRender(CSharpGL.RenderEventArgs)">
            <summary>
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.Evaluator1DRenderer.Setup(CSharpGL.vec3[])">
             <summary>
            
             </summary>
             <param name="controlPoints"></param>
        </member>
        <member name="P:CSharpGL.Evaluator1DRenderer.CurveDrawMode">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Evaluator1DRenderer.MinPercent">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Evaluator1DRenderer.Granularity">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Evaluator1DRenderer.MaxPercent">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Evaluator2DRenderer">
            <summary>
            This is a 1D evaluator, i.e a bezier curve.
            </summary>
        </member>
        <member name="M:CSharpGL.Evaluator2DRenderer.#ctor(System.Collections.Generic.IList{CSharpGL.vec3})">
            <summary>
            This is a 1D evaluator, i.e a bezier curve.
            </summary>
            <param name="controlPoints"></param>
        </member>
        <member name="M:CSharpGL.Evaluator2DRenderer.DoInitialize">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.Evaluator2DRenderer.DoRender(CSharpGL.RenderEventArgs)">
            <summary>
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.Evaluator2DRenderer.Setup(CSharpGL.vec3[])">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Evaluator2DRenderer.MeshMode">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Evaluator2DRenderer.MinPercent">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Evaluator2DRenderer.MaxPercent">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PixelUnpackBuffer">
            <summary>
            Buffer object that not work as input variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.PixelUnpackBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            pixel unpack buffer's pointer.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.PixelUnpackBuffer.Create(System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.PixelUnpackBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType"></param>
            <param name="usage"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.PixelUnpackBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="T:CSharpGL.AtomicCounterBuffer">
            <summary>
            Buffer object that not work as input variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.AtomicCounterBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            pixel unpack buffer's pointer.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.AtomicCounterBuffer.Create(System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.AtomicCounterBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType"></param>
            <param name="length"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.AtomicCounterBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="T:CSharpGL.TextureBuffer">
            <summary>
            Buffer object that not work as input variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.TextureBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            TextureBufferObject matches <code>uniform samplerBuffer xxx;</code> in GLSL shader.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.TextureBuffer.Create(System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.TextureBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType"></param>
            <param name="length"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.TextureBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="T:CSharpGL.UniformBuffer">
            <summary>
            Buffer object that not work as input variable in shader.
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBuffer.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            pixel unpack buffer's pointer.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
        </member>
        <member name="M:CSharpGL.UniformBuffer.Binding(CSharpGL.ShaderProgram,System.UInt32,System.UInt32)">
            <summary>
            Bind this uniform buffer object and a uniform block to the same binding point.
            </summary>
            <param name="uniformBlockIndex">index of uniform block got by (glGetUniformBlockIndex).</param>
            <param name="uniformBlockBindingPoint">binding point maintained by OpenGL context.</param>
            <param name="program">shader program.</param>
        </member>
        <member name="M:CSharpGL.UniformBuffer.Create(System.Type,System.Int32,CSharpGL.BufferUsage)">
            <summary>
            Creates a <see cref="T:CSharpGL.UniformBuffer"/> object directly in server side(GPU) without initializing its value.
            </summary>
            <param name="elementType"></param>
            <param name="usage"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.UniformBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="T:CSharpGL.VBOConfig">
            <summary>
            Decides parameter values for glVertexAttribPointer() and glEnable/DisableVertexAttribArray().
            <para>type in 'in vec3 position' in GLSL shader.</para>
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Byte">
            <summary>
            byte.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.BVec2">
            <summary>
            <see cref="T:CSharpGL.bvec2"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.BVec3">
            <summary>
            <see cref="T:CSharpGL.bvec3"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.BVec4">
            <summary>
            <see cref="T:CSharpGL.bvec4"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Int">
            <summary>
            int.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.IVec2">
            <summary>
            <see cref="T:CSharpGL.ivec2"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.IVec3">
            <summary>
            <see cref="T:CSharpGL.ivec3"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.IVec4">
            <summary>
            <see cref="T:CSharpGL.ivec4"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.UInt">
            <summary>
            uint.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.UVec2">
            <summary>
            <see cref="T:CSharpGL.uvec2"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.UVec3">
            <summary>
            <see cref="T:CSharpGL.uvec3"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.UVec4">
            <summary>
            <see cref="T:CSharpGL.uvec4"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Float">
            <summary>
            float.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Vec2">
            <summary>
            <see cref="T:CSharpGL.vec2"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Vec3">
            <summary>
            <see cref="T:CSharpGL.vec3"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Vec4">
            <summary>
            <see cref="T:CSharpGL.vec4"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Double">
            <summary>
            double.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.DVec2">
            <summary>
            d<see cref="T:CSharpGL.vec2"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.DVec3">
            <summary>
            <see cref="T:CSharpGL.dvec3"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.DVec4">
            <summary>
            <see cref="T:CSharpGL.dvec4"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Mat2">
            <summary>
            <see cref="T:CSharpGL.mat2"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Mat3">
            <summary>
            <see cref="T:CSharpGL.mat3"/>.
            </summary>
        </member>
        <member name="F:CSharpGL.VBOConfig.Mat4">
            <summary>
            <see cref="T:CSharpGL.mat4"/>.
            </summary>
        </member>
        <member name="T:CSharpGL.Camera">
            <summary>
            摄像机。Camera.
            </summary>
        </member>
        <member name="T:CSharpGL.ICamera">
            <summary>
            Use this for perspective/ortho view matrix.
            <para>Typical usage: projection * view * model in GLSL.</para>
            </summary>
        </member>
        <member name="T:CSharpGL.IPerspectiveViewCamera">
            <summary>
            Use this for perspective view matrix.
            <para>Typical usage: projection * view * model in GLSL.</para>
            </summary>
        </member>
        <member name="T:CSharpGL.IPerspectiveCamera">
            <summary>
            Use this for perspective projection * view matrix.
            <para>Typical usage: projection * view * model in GLSL.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.IPerspectiveCamera.GetPerspectiveProjectionMatrix">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.IPerspectiveCamera.FieldOfView">
            <summary>
            Gets or sets the field of view.
            <value>
            The field of view in degrees.
            </value>
            </summary>
        </member>
        <member name="P:CSharpGL.IPerspectiveCamera.AspectRatio">
            <summary>
            Gets or sets the aspect(width / height).
            </summary>
            <value>
            The aspect.
            </value>
        </member>
        <member name="P:CSharpGL.IPerspectiveCamera.Near">
            <summary>
            Gets or sets the near.
            </summary>
            <value>
            The near.
            </value>
        </member>
        <member name="P:CSharpGL.IPerspectiveCamera.Far">
            <summary>
            Gets or sets the far.
            </summary>
            <value>
            The far.
            </value>
        </member>
        <member name="T:CSharpGL.IViewCamera">
            <summary>
            Use this for view matrix.
            <para>Typical usage: projection * view * model in GLSL.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.IViewCamera.GetViewMatrix">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.IViewCamera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:CSharpGL.IViewCamera.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:CSharpGL.IViewCamera.UpVector">
            <summary>
            Gets or sets up vector.
            </summary>
            <value>
            Up vector.
            </value>
        </member>
        <member name="T:CSharpGL.IOrthoViewCamera">
            <summary>
            Use this for ortho projection * view matrix.
            <para>Typical usage: projection * view * model in GLSL.</para>
            </summary>
        </member>
        <member name="T:CSharpGL.IOrthoCamera">
            <summary>
            Use this for ortho projection.
            <para>Typical usage: projection * view * model in GLSL.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.IOrthoCamera.GetOrthoProjectionMatrix">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.IOrthoCamera.Left">
            <summary>
            Gets or sets the left relative to camera's position.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:CSharpGL.IOrthoCamera.Right">
            <summary>
            Gets or sets the right relative to camera's position.
            </summary>
            <value>
            The right.
            </value>
        </member>
        <member name="P:CSharpGL.IOrthoCamera.Bottom">
            <summary>
            Gets or sets the bottom relative to camera's position.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="P:CSharpGL.IOrthoCamera.Top">
            <summary>
            Gets or sets the top relative to camera's position.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:CSharpGL.IOrthoCamera.Near">
            <summary>
            Gets or sets the near.
            </summary>
            <value>
            The near.
            </value>
        </member>
        <member name="P:CSharpGL.IOrthoCamera.Far">
            <summary>
            Gets or sets the far.
            </summary>
            <value>
            The far.
            </value>
        </member>
        <member name="M:CSharpGL.ICamera.GetProjectionMatrix">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ICamera.CameraType">
            <summary>
            camera's perspective type.
            </summary>
        </member>
        <member name="M:CSharpGL.Camera.GetProjectionMatrix">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Camera.GetViewMatrix">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Camera.#ctor(CSharpGL.vec3,CSharpGL.vec3,CSharpGL.vec3,CSharpGL.CameraType,System.Double,System.Double)">
            <summary>
            Camera.
            </summary>
            <param name="position">position in world space</param>
            <param name="target">target in world space.</param>
            <param name="up">up in world space.</param>
            <param name="cameraType">perspective or ortho?</param>
            <param name="width">canvas' width.</param>
            <param name="height">canvas' height.</param>
        </member>
        <member name="M:CSharpGL.Camera.ToString">
            <summary>
            Pos:{0}, Target:{1}, Up:{2}
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Camera.CameraType">
            <summary>
            camera's perspective type.
            </summary>
        </member>
        <member name="P:CSharpGL.Camera.Target">
            <summary>
            Gets or sets world coordinate of the camera's target.
            </summary>
        </member>
        <member name="P:CSharpGL.Camera.UpVector">
            <summary>
            Gets or sets world coordinate of the camera's up vector.
            </summary>
            <value>
            Up vector.
            </value>
        </member>
        <member name="P:CSharpGL.Camera.Position">
            <summary>
            Gets or sets world coordinate of the camera 's position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="T:CSharpGL.ICameraHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ICameraHelper.Resize(CSharpGL.ICamera,System.Double,System.Double)">
            <summary>
            opengl控件的大小改变时调整camera.
            Adjust camera when OpenGL canvas's size changed.
            </summary>
            <param name="camera"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CSharpGL.ICameraHelper.LegacyProjection(CSharpGL.ICamera)">
            <summary>
            Run legacy projection and view transform.(from world space to clip space)
            </summary>
            <param name="camera"></param>
        </member>
        <member name="T:CSharpGL.ColorMaskState">
            <summary>
            Toggle of color mask.
            </summary>
        </member>
        <member name="M:CSharpGL.ColorMaskState.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Toggle of color mask.
            </summary>
            <param name="redWritable">red mask when this switch is turned on</param>
            <param name="greenWritable">green mask when this switch is turned on</param>
            <param name="blueWritable">blue mask when this switch is turned on</param>
            <param name="alphaWritable">alpha mask when this switch is turned on</param>
        </member>
        <member name="M:CSharpGL.ColorMaskState.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Toggle of color mask.
            </summary>
            <param name="redWritable">red mask when this switch is turned on.</param>
            <param name="greenWritable">green mask when this switch is turned on.</param>
            <param name="blueWritable">blue mask when this switch is turned on.</param>
            <param name="alphaWritable">alpha mask when this switch is turned on.</param>
            <param name="originalAlphaWritable">red mask when this switch is turned off.</param>
            <param name="originalBlueWritable">green mask when this switch is turned off.</param>
            <param name="originalGreenWritable">blue mask when this switch is turned off.</param>
            <param name="originalRedWritable">alpha mask when this switch is turned off.</param>
        </member>
        <member name="M:CSharpGL.ColorMaskState.#ctor(CSharpGL.ColorMask)">
            <summary>
            Toggle of color mask.
            </summary>
            <param name="mask">mask when this switch is turned on.</param>
        </member>
        <member name="M:CSharpGL.ColorMaskState.#ctor(CSharpGL.ColorMask,CSharpGL.ColorMask)">
            <summary>
            Toggle of color mask.
            </summary>
            <param name="mask">mask when this switch is turned on.</param>
            <param name="originalMask">mask when this switch is turned off.</param>
        </member>
        <member name="M:CSharpGL.ColorMaskState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ColorMaskState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ColorMaskState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ColorMaskState.Mask">
            <summary>
             mask when this switch is turned on.
            </summary>
        </member>
        <member name="P:CSharpGL.ColorMaskState.OriginalMask">
            <summary>
             mask when this switch is turned off.
            </summary>
        </member>
        <member name="T:CSharpGL.ColorMask">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ColorMask.redWritable">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ColorMask.greenWritable">
             <summary>
            
             </summary>;
        </member>
        <member name="F:CSharpGL.ColorMask.blueWritable">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ColorMask.alphaWritable">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ColorMask.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="redWritable"></param>
             <param name="greenWritable"></param>
             <param name="blueWritable"></param>
             <param name="alphaWritable"></param>
        </member>
        <member name="M:CSharpGL.ColorMask.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ColorMask.GetCurrent">
            <summary>
            Get mask of current state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ColorMask.GetDefault">
            <summary>
            Gets default color mask in OpenGL.
            </summary>
        </member>
        <member name="T:CSharpGL.DepthMaskState">
            <summary>
            Toggle of depth mask.
            </summary>
        </member>
        <member name="M:CSharpGL.DepthMaskState.#ctor(System.Boolean)">
            <summary>
            Toggle of depth mask.
            </summary>
            <param name="writable">Writable when this switch is turned on?</param>
        </member>
        <member name="M:CSharpGL.DepthMaskState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DepthMaskState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DepthMaskState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.DepthMaskState.Writable">
            <summary>
             Writable when this switch is turned on?
            </summary>
        </member>
        <member name="T:CSharpGL.LineStippleState">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="M:CSharpGL.LineStippleState.#ctor">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="M:CSharpGL.LineStippleState.#ctor(System.Int32,System.UInt16)">
            <summary>
            Dashed line.
            </summary>
            <param name="factor">factor in 'void glLineStipple(int factor, ushort pattern);'.</param>
            <param name="pattern">pattern in 'void glLineStipple(int factor, ushort pattern);'.</param>
        </member>
        <member name="M:CSharpGL.LineStippleState.#ctor(System.Int32,System.UInt16,System.Boolean)">
            <summary>
            Dashed line.
            </summary>
            <param name="factor"></param>
            <param name="pattern"></param>
            <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.LineStippleState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LineStippleState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.LineStippleState.Factor">
            <summary>
            factor in 'void glLineStipple(int factor, ushort pattern);'.
            </summary>
        </member>
        <member name="P:CSharpGL.LineStippleState.Pattern">
            <summary>
            pattern in 'void glLineStipple(int factor, ushort pattern);'.
            </summary>
        </member>
        <member name="T:CSharpGL.Framebuffer">
            <summary>
            Create, update, use and delete a framebuffer object.
            </summary>
        </member>
        <member name="M:CSharpGL.Framebuffer.MaxColorAttachments">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.MaxFramebufferWidth">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.MaxFramebufferHeight">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.MaxFramebufferLayers">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.MaxFramebufferSamples">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.SetParameter(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the size of an empty framebuffer.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="samples">how many samples?</param>
        </member>
        <member name="M:CSharpGL.Framebuffer.CheckCompleteness">
            <summary>
            check completeness.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.Attach(CSharpGL.Texture)">
            <summary>
            Attach a texture.
            <para>Bind() this framebuffer before invoking this method.</para>
            </summary>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.Attach(CSharpGL.Renderbuffer,CSharpGL.FramebufferTarget)">
            <summary>
            Attach a render buffer.
            <para>Bind() this framebuffer before invoking this method.</para>
            </summary>
            <param name="renderbuffer"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.#ctor">
            <summary>
            Create an empty framebuffer object.
            </summary>
        </member>
        <member name="M:CSharpGL.Framebuffer.Bind(CSharpGL.FramebufferTarget)">
            <summary>
            start to use this framebuffer.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:CSharpGL.Framebuffer.Unbind(CSharpGL.FramebufferTarget)">
            <summary>
            stop to use this framebuffer(and use default framebuffer).
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:CSharpGL.Framebuffer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Framebuffer.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Framebuffer.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Framebuffer.Id">
            <summary>
            Framebuffer Id.
            </summary>
        </member>
        <member name="P:CSharpGL.Framebuffer.Width">
            <summary>
            0 means no renderbuffer attached.
            </summary>
        </member>
        <member name="P:CSharpGL.Framebuffer.Height">
            <summary>
            0 means no renderbuffer attached.
            </summary>
        </member>
        <member name="T:CSharpGL.RenderbufferType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferType.DepthBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferType.ColorBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Renderbuffer">
            <summary>
            Create, update, use and delete a framebuffer object.
            </summary>
             <summary>
            
             </summary>
            <summary>
            Create, update, use and delete a renderbuffer object.
            </summary>
        </member>
        <member name="M:CSharpGL.Renderbuffer.CreateDepthbuffer(System.Int32,System.Int32,CSharpGL.DepthComponentType)">
             <summary>
            
             </summary>
             <param name="width"></param>
             <param name="height"></param>
             <param name="internalFormat"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderbuffer.CreateDepthbuffer(System.Int32,System.Int32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="width"></param>
             <param name="height"></param>
             <param name="internalFormat"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderbuffer.CreateColorbuffer(System.Int32,System.Int32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="width"></param>
             <param name="height"></param>
             <param name="internalFormat"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Renderbuffer.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Renderbuffer.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Renderbuffer.#ctor(System.Int32,System.Int32,System.UInt32,CSharpGL.RenderbufferType)">
            <summary>
            Create, update, use and delete a renderbuffer object.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="internalformat"></param>
            <param name="bufferType"></param>
        </member>
        <member name="M:CSharpGL.Renderbuffer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.Renderbuffer.BufferType">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Renderbuffer.Height">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Renderbuffer.Id">
            <summary>
            Framebuffer Id.
            </summary>
        </member>
        <member name="P:CSharpGL.Renderbuffer.Width">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DepthComponentType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DepthComponentType.DepthComponent">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DepthComponentType.DepthComponent24">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Query">
            <summary>
            A query object.
            <para>Occlusion Querys enable you to determine if a representative set of geometry will be visible after depth testing.</para>
            <para>Conditional rendering is for a single object that takes a lot of rendering resources. That means you only want to render it if it is absolutely necessary.</para>
            </summary>
        </member>
        <member name="F:CSharpGL.Query.ids">
            <summary>
            texture's id/name.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.BeginQuery(CSharpGL.QueryTarget)">
            <summary>
            Begin query.
            <para>delimit the boundaries of a query object.</para>
            </summary>
            <param name="target">Specifies the target type of query object established between glBeginQuery and the subsequent glEndQuery.</param>
        </member>
        <member name="M:CSharpGL.Query.EndQuery(CSharpGL.QueryTarget)">
            <summary>
            Een query.
            </summary>
            <param name="target">Specifies the target type of query object to be concluded.s</param>
        </member>
        <member name="M:CSharpGL.Query.BeginQuery(System.UInt32)">
            <summary>
            Begin query.
            <para>delimit the boundaries of a query object.</para>
            </summary>
            <param name="target">Specifies the target type of query object established between glBeginQuery and the subsequent glEndQuery. The symbolic constant must be one of GL_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED_CONSERVATIVE, GL_PRIMITIVES_GENERATED, GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, or GL_TIME_ELAPSED.</param>
        </member>
        <member name="M:CSharpGL.Query.EndQuery(System.UInt32)">
            <summary>
            Een query.
            </summary>
            <param name="target">Specifies the target type of query object to be concluded. The symbolic constant must be one of GL_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED_CONSERVATIVE, GL_PRIMITIVES_GENERATED, GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, or GL_TIME_ELAPSED.</param>
        </member>
        <member name="M:CSharpGL.Query.BeginConditionalRender(CSharpGL.ConditionalRenderMode)">
            <summary>
            Begin conditional rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.BeginConditionalRender(System.UInt32)">
            <summary>
            Begin conditional rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.EndConditionalRender">
            <summary>
            End conditional rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.SampleRendered">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Query.Initialize">
            <summary>
            resources(bitmap etc.) can be disposed  after this initialization.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Query.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.Query.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.Query.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="P:CSharpGL.Query.Id">
            <summary>
            query object's id/name.
            </summary>
        </member>
        <member name="T:CSharpGL.Shader">
            <summary>
            A GLSL shader(supported extensions: vs, fs, gs, vsh, fsh, gsh, vshader, fshader, gshader, vert, frag, geom, tesc, tese, comp, glsl).
            </summary>
            <summary>
            A GLSL shader(supported extensions: vs, fs, gs, vsh, fsh, gsh, vshader, fshader, gshader, vert, frag, geom, tesc, tese, comp, glsl).
            </summary>
        </member>
        <member name="M:CSharpGL.Shader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.Shader.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.Shader.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.Shader.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.Shader.Create(System.UInt32,System.String)">
            <summary>
            Create and compile this shader.
            </summary>
            <param name="shaderType"></param>
            <param name="source"></param>
        </member>
        <member name="M:CSharpGL.Shader.GetCompileStatus(System.UInt32)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Shader.GetInfoLog(System.UInt32)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.Shader.ShaderId">
            <summary>
            Gets the shader object.
            </summary>
        </member>
        <member name="T:CSharpGL.TexBufferImageFiller">
            <summary>
            fill texture's content with a buffer.
            </summary>
        </member>
        <member name="M:CSharpGL.TexBufferImageFiller.#ctor(System.UInt32,CSharpGL.GLBuffer,System.Boolean)">
             <summary>
            
             </summary>
             <param name="internalformat"></param>
             <param name="buffer"></param>
             <param name="autoDispose">Dispose <paramref name="buffer"/> when this filler is disposed.</param>
        </member>
        <member name="M:CSharpGL.TexBufferImageFiller.Fill">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TexBufferImageFiller.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.TexBufferImageFiller.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.TexBufferImageFiller.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.TexBufferImageFiller.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="T:CSharpGL.NullImageFiller">
            <summary>
            build texture's content with IntPtr.Zero.
            </summary>
        </member>
        <member name="M:CSharpGL.NullImageFiller.#ctor(System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            build texture's content with IntPtr.Zero.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="internalFormat"></param>
            <param name="format"></param>
            <param name="type"></param>
        </member>
        <member name="M:CSharpGL.NullImageFiller.Fill">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.RenderbufferAttachment">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment0">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment5">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment6">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment7">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment8">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment9">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment10">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment11">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment12">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment13">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment14">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.ColorAttachment15">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.DepthAttachment">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.StencilAttachment">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.RenderbufferAttachment.DepthStencilAttachment">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.FramebufferTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.FramebufferTarget.DrawFramebuffer">
            <summary>
            used to draw(write only) something.
            </summary>
        </member>
        <member name="F:CSharpGL.FramebufferTarget.ReadFramebuffer">
            <summary>
            used to read from(read only).
            </summary>
        </member>
        <member name="F:CSharpGL.FramebufferTarget.Framebuffer">
            <summary>
            both read/write.
            </summary>
        </member>
        <member name="T:CSharpGL.IModelSpaceHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.IModelSpaceHelper.GetMaxMinPosition(CSharpGL.IModelSpace,CSharpGL.vec3@,CSharpGL.vec3@)">
            <summary>
            Gets max and min position of the AABB box that wraps specified <paramref name="model"/>.
            </summary>
            <param name="model"></param>
            <param name="maxPosition"></param>
            <param name="minPosition"></param>
        </member>
        <member name="M:CSharpGL.IModelSpaceHelper.CopyModelSpaceStateFrom(CSharpGL.IModelSpace,CSharpGL.IModelSpace)">
            <summary>
            Copy <see cref="T:CSharpGL.IModelSpace"/> state from specified <paramref name="source"/>.
            </summary>
            <param name="dest"></param>
            <param name="source"></param>
        </member>
        <member name="M:CSharpGL.IModelSpaceHelper.GetModelMatrix(CSharpGL.IModelSpace)">
            <summary>
            Get model matrix.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IModelSpaceHelper.Rotate(CSharpGL.IModelSpace,System.Single,CSharpGL.vec3)">
            <summary>
            Rotate this model based on all previous rotation actions.
            Thus all rotations will take part in model's rotation result.
            <para>在目前的旋转状态下继续旋转一次，即所有的旋转操作都会（按照发生顺序）生效。</para>
            </summary>
            <param name="model"></param>
            <param name="angleDegree">Angle in Degree.</param>
            <param name="axis"></param>
        </member>
        <member name="M:CSharpGL.IModelSpaceHelper.GetBoundingBox(CSharpGL.IModelSpace)">
             <summary>
            
             </summary>
             <param name="model"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.IModelSpaceHelper.LegacyTransform(CSharpGL.IModelSpace)">
            <summary>
            Run legacy model transform.(from model space to world space)
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:CSharpGL.TexStorage2DImageFiller">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TexStorage2DImageFiller.#ctor(System.Int32,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="levels"></param>
             <param name="internalFormat"></param>
             <param name="width"></param>
             <param name="height"></param>
        </member>
        <member name="M:CSharpGL.TexStorage2DImageFiller.Fill">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.NullSampler">
            <summary>
            do nothing about sampling in building texture.
            </summary>
        </member>
        <member name="T:CSharpGL.SamplerBase">
            <summary>
            texture's settings.
            </summary>
        </member>
        <member name="M:CSharpGL.SamplerBase.#ctor(CSharpGL.SamplerParameters,CSharpGL.MipmapFilter)">
            <summary>
            texture's settings.
            </summary>
            <param name="parameters"></param>
            <param name="mipmapFilter"></param>
        </member>
        <member name="M:CSharpGL.SamplerBase.Bind(System.UInt32,CSharpGL.TextureTarget)">
             <summary>
            
             </summary>
             <param name="unit">OpenGL.GL_TEXTURE0 etc.</param>
             <param name="target"></param>
        </member>
        <member name="F:CSharpGL.SamplerBase.parameters">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.SamplerBase.mipmapFilter">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.SamplerBase.Parameters">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.NullSampler.#ctor">
            <summary>
            do nothing about sampling in building texture.
            </summary>
        </member>
        <member name="M:CSharpGL.NullSampler.Bind(System.UInt32,CSharpGL.TextureTarget)">
            <summary>
            do nothing.
            </summary>
            <param name="unit">OpenGL.GL_TEXTURE0 etc.</param>
            <param name="target"></param>
        </member>
        <member name="T:CSharpGL.SamplerParameters">
            <summary>
            texture's settings.
            </summary>
        </member>
        <member name="F:CSharpGL.SamplerParameters.wrapS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.SamplerParameters.wrapT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.SamplerParameters.wrapR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.SamplerParameters.minFilter">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.SamplerParameters.magFilter">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SamplerParameters.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SamplerParameters.#ctor(CSharpGL.TextureWrapping,CSharpGL.TextureWrapping,CSharpGL.TextureWrapping,CSharpGL.TextureFilter,CSharpGL.TextureFilter)">
             <summary>
            
             </summary>
             <param name="wrapS"></param>
             <param name="wrapT"></param>
             <param name="wrapR"></param>
             <param name="minFilter"></param>
             <param name="magFilter"></param>
        </member>
        <member name="M:CSharpGL.SamplerParameters.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.Sampler">
            <summary>
            texture's settings.
            </summary>
        </member>
        <member name="M:CSharpGL.Sampler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.Sampler.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.Sampler.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.Sampler.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.Sampler.#ctor(CSharpGL.SamplerParameters,CSharpGL.MipmapFilter)">
            <summary>
            texture's settings.
            </summary>
            <param name="parameters"></param>
            <param name="mipmapFiltering"></param>
        </member>
        <member name="M:CSharpGL.Sampler.Initialize(System.UInt32,CSharpGL.TextureTarget)">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Sampler.Bind(System.UInt32,CSharpGL.TextureTarget)">
            <summary>
            texture's settings.
            </summary>
            <param name="unit">OpenGL.GL_TEXTURE0 etc.</param>
            <param name="target"></param>
        </member>
        <member name="P:CSharpGL.Sampler.Id">
            <summary>
            sampler's Id.
            </summary>
        </member>
        <member name="T:CSharpGL.Texture">
            <summary>
            Texture.
            </summary>
            <summary>
            A texture object.
            </summary>
        </member>
        <member name="M:CSharpGL.Texture.CreateBufferTexture(System.UInt32,CSharpGL.GLBuffer,System.Boolean)">
             <summary>
            
             </summary>
             <param name="internalFormat"></param>
             <param name="buffer"></param>
             <param name="autoDispose">Dispose <paramref name="buffer"/> when disposing returned texture.</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Texture.CreateBufferTexture``1(System.UInt32,System.Int32,CSharpGL.BufferUsage)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="internalFormat"></param>
             <param name="elementCount"></param>
             <param name="usage"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Texture.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.Texture.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.Texture.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.Texture.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.Texture.#ctor(CSharpGL.TextureTarget,CSharpGL.ImageFiller,CSharpGL.SamplerBase)">
            <summary>
            Texture.
            </summary>
            <param name="target"></param>
            <param name="imageBuilder"></param>
            <param name="samplerBuilder"></param>
        </member>
        <member name="M:CSharpGL.Texture.#ctor(CSharpGL.TextureTarget,System.Drawing.Bitmap,CSharpGL.SamplerBase,System.Int32,System.Int32)">
            <summary>
            Texture.
            </summary>
            <param name="target"></param>
            <param name="bitmap"></param>
            <param name="samplerBuilder"></param>
            <param name="maxLevel"></param>
            <param name="border"></param>
        </member>
        <member name="M:CSharpGL.Texture.#ctor(CSharpGL.TextureTarget,CSharpGL.ImageFiller,CSharpGL.SamplerParameters,CSharpGL.MipmapFilter)">
            <summary>
            Texture.
            </summary>
            <param name="target"></param>
            <param name="imageBuilder"></param>
            <param name="parameters"></param>
            <param name="mipmapFiltering"></param>
        </member>
        <member name="M:CSharpGL.Texture.#ctor(CSharpGL.TextureTarget,System.Drawing.Bitmap,CSharpGL.SamplerParameters,CSharpGL.MipmapFilter,System.Int32,System.Int32)">
            <summary>
            Texture.
            </summary>
            <param name="target"></param>
            <param name="bitmap"></param>
            <param name="parameters"></param>
            <param name="mipmapFiltering"></param>
            <param name="maxLevel"></param>
            <param name="border"></param>
        </member>
        <member name="F:CSharpGL.Texture.id">
            <summary>
            texture's id/name.
            </summary>
        </member>
        <member name="M:CSharpGL.Texture.Bind">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Texture.Unbind">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Texture.Initialize">
            <summary>
            resources(bitmap etc.) can be disposed  after this initialization.
            </summary>
        </member>
        <member name="M:CSharpGL.Texture.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.Texture.ActiveTextureIndex">
            OpenGL.GL_TEXTURE0(= 0x84C0 = 33984)
            <summary>
            0 means OpenGL.GL_TEXTURE0, 1 means OpenGL.GL_TEXTURE1, ...
            </summary>
        </member>
        <member name="P:CSharpGL.Texture.Target">
            <summary>
            binding target of this texture.
            </summary>
        </member>
        <member name="P:CSharpGL.Texture.Id">
            <summary>
            texture's id/name from glGenTextures().
            纹理名（用于标识一个纹理，由OpenGL指定）。
            </summary>
        </member>
        <member name="P:CSharpGL.Texture.ImageFiller">
            <summary>
            setup texture's image data.
            </summary>
        </member>
        <member name="P:CSharpGL.Texture.Sampler">
            <summary>
            setup texture's sampler properties.
            </summary>
        </member>
        <member name="T:CSharpGL.BitmapFiller">
            <summary>
            build texture's content with Bitmap.
            </summary>
        </member>
        <member name="M:CSharpGL.BitmapFiller.#ctor(System.Drawing.Bitmap,System.Int32,System.UInt32,System.Int32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            build texture's content with Bitmap.
            </summary>
            <param name="bitmap"></param>
            <param name="maxLevel">0 as default.</param>
            <param name="internalformat">OpenGL.GL_RGBA etc.</param>
            <param name="border">max level.</param>
            <param name="format">OpenGL.GL_BGRA etc.</param>
            <param name="type">OpenGL.GL_UNSIGNED_BYTE etc.</param>
            <param name="target2d">true for 2D; false for 1D.</param>
        </member>
        <member name="M:CSharpGL.BitmapFiller.Fill">
            <summary>
            build texture's content with Bitmap.
            </summary>
        </member>
        <member name="T:CSharpGL.FakeSampler">
            <summary>
            texture's settings.
            </summary>
        </member>
        <member name="M:CSharpGL.FakeSampler.#ctor(CSharpGL.SamplerParameters,CSharpGL.MipmapFilter)">
            <summary>
            texture's settings.
            </summary>
            <param name="parameters"></param>
            <param name="mipmapFiltering"></param>
        </member>
        <member name="M:CSharpGL.FakeSampler.Bind(System.UInt32,CSharpGL.TextureTarget)">
            <summary>
            texture's settings.
            </summary>
            <param name="unit">OpenGL.GL_TEXTURE0 etc.</param>
            <param name="target"></param>
        </member>
        <member name="T:CSharpGL.StructHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.StructHelper.ToBytes``1(``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="structObj"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.ByteArrayHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ByteArrayHelper.GetStruct``1(System.Byte[],``0@,System.Int32)">
            <summary>
            从给定的字节数组解析得到指定的struct对象。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <param name="result"></param>
            <param name="startIndex"></param>
        </member>
        <member name="T:CSharpGL.GLSceneCanvas">
            <summary>
            可执行OpenGL渲染的控件。
            </summary>
        </member>
        <member name="T:CSharpGL.ICanvas">
            <summary>
            OpenGL Canvas.
            </summary>
        </member>
        <member name="M:CSharpGL.ICanvas.Repaint">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.KeyDown">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.KeyPress">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.KeyUp">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.MouseDown">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.MouseMove">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.MouseUp">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.MouseWheel">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ICanvas.Resize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ICanvas.IsDisposed">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ICanvas.RenderTrigger">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ICanvas.TimerTriggerInterval">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ICanvas.Size">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ICanvas.ClientRectangle">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLSceneCanvas.renderContext">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLSceneCanvas.designMode">
            <summary>
            indicates whether the control is in design mode.
            </summary>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.#ctor">
            <summary>
            Creats render context and supports OpenGL rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.CreateRenderContext">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.DoOpenGLDraw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Call this function in derived classes to do the OpenGL Draw event.
            </summary>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.DesignModeRender">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.OnSizeChanged(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.OnHandleDestroyed(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.Repaint">
            <summary>
            repaint this canvas' content.
            </summary>
        </member>
        <member name="F:CSharpGL.GLSceneCanvas.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:CSharpGL.GLSceneCanvas.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:CSharpGL.GLSceneCanvas.FPS">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.GLSceneCanvas.RenderTrigger">
            <summary>
            Gets or sets the render trigger.
            </summary>
            <value>
            The render trigger.
            </value>
        </member>
        <member name="P:CSharpGL.GLSceneCanvas.TimerTriggerInterval">
            <summary>
            Interval between two rendering passes. Must be greater than 0.(in milliseconds)
            </summary>
        </member>
        <member name="P:CSharpGL.GLSceneCanvas.Scene">
            <summary>
            Scene to be rendered.
            </summary>
        </member>
        <member name="P:CSharpGL.GLSceneCanvas.CameraManipulater">
            <summary>
            Controls how camera moves according to mouse/keyboard.
            </summary>
        </member>
        <member name="T:CSharpGL.StructTypeConverter`1">
            <summary>
            Supports editing values in PropertyGrid.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CSharpGL.FormIndexBufferBoard">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FormIndexBufferBoard.#ctor(CSharpGL.IndexBuffer)">
             <summary>
            
             </summary>
             <param name="indexBuffer"></param>
        </member>
        <member name="M:CSharpGL.FormIndexBufferBoard.SetTarget(CSharpGL.IndexBuffer)">
             <summary>
            
             </summary>
             <param name="indexBuffer"></param>
        </member>
        <member name="F:CSharpGL.FormIndexBufferBoard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CSharpGL.FormIndexBufferBoard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CSharpGL.FormIndexBufferBoard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CSharpGL.UpdateScene">
            <summary>
            update and render the scene that contains specified <see cref="T:CSharpGL.SceneObject"/>.
            </summary>
        </member>
        <member name="M:CSharpGL.UpdateScene.UpdateAndRender(CSharpGL.SceneObject)">
            <summary>
            update and render the scene that contains specified <paramref name="sceneObject"/>.
            </summary>
            <param name="sceneObject"></param>
        </member>
        <member name="T:CSharpGL.IndexBufferEditor">
            <summary>
            用在<see cref="T:CSharpGL.IndexBuffer"/>类型的属性上。
            </summary>
        </member>
        <member name="T:CSharpGL.FontBitmap">
            <summary>
            font, bitmap and texture coordiante.
            </summary>
            <summary>
            font, bitmap and texture coordiante.
            </summary>
        </member>
        <member name="M:CSharpGL.FontBitmap.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FontBitmap.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FontBitmap.GlyphFont">
            <summary>
            font of glyphs in <see cref="P:CSharpGL.FontBitmap.GlyphBitmap"/>.
            </summary>
        </member>
        <member name="P:CSharpGL.FontBitmap.GlyphBitmap">
            <summary>
            bitmap in which glyphs is printed.
            </summary>
        </member>
        <member name="P:CSharpGL.FontBitmap.GlyphHeight">
            <summary>
            glyph's height.
            </summary>
        </member>
        <member name="P:CSharpGL.FontBitmap.GlyphInfoDictionary">
            <summary>
            glyph information dictionary.
            </summary>
        </member>
        <member name="T:CSharpGL.FontBitmapHelper">
            <summary>
            helper class.
            </summary>
            <summary>
            helper class.
            </summary>
            <summary>
            helper class.
            </summary>
            <summary>
            helper class.
            </summary>
            <summary>
            helper class.
            </summary>
        </member>
        <member name="F:CSharpGL.FontBitmapHelper.glyphInterval">
            <summary>
            bigger interval means less mix. Maybe 1 is enough for font with size of 64.
            </summary>
        </member>
        <member name="F:CSharpGL.FontBitmapHelper.leftMargin">
            <summary>
            bigger maring means less mix. But 1 is enough.
            </summary>
        </member>
        <member name="M:CSharpGL.FontBitmapHelper.PrintBitmap(CSharpGL.FontBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Print the final bitmap that contains all glyphs.
            And also setup glyph's xoffset, yoffset.
            </summary>
            <param name="fontBitmap"></param>
            <param name="singleCharWidth"></param>
            <param name="singleCharHeight"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CSharpGL.FontBitmapHelper.PrepareFinalBitmapSize(CSharpGL.FontBitmap,System.Int32@,System.Int32@)">
            <summary>
            prepare final bitmap's size.
            </summary>
            <param name="fontBitmap"></param>
            <param name="width">final bitmap's width.</param>
            <param name="height">final bitmap's height.</param>
        </member>
        <member name="M:CSharpGL.FontBitmapHelper.PrepareInitialGlyphDict(CSharpGL.FontBitmap,System.String,System.Int32@,System.Int32@)">
            <summary>
            Get glyph's size by graphics.MeasureString().
            Then shrink glyph's size.
            xoffset now means offset in a single glyph's bitmap.
            </summary>
            <param name="fontBitmap"></param>
            <param name="charSet"></param>
            <param name="singleCharWidth"></param>
            <param name="singleCharHeight"></param>
        </member>
        <member name="M:CSharpGL.FontBitmapHelper.GetFontBitmap(System.Drawing.Font,System.String,System.Boolean)">
            <summary>
            Gets a <see cref="T:CSharpGL.FontBitmap"/>'s intance.
            </summary>
            <param name="font"></param>
            <param name="charSet"></param>
            <param name="drawBoundary"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.FontBitmapHelper.IsEmptyPixel(System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Returns true if the given pixel is empty (i.e. black)
            </summary>
            <param name="bitmapData"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:CSharpGL.FontBitmapHelper.RetargetGlyphRectangleInwards(System.Drawing.Imaging.BitmapData,CSharpGL.GlyphInfo)">
            <summary>
            shrink glyph's width to fit in exactly.
            </summary>
            <param name="bitmapData"></param>
            <param name="glyph"></param>
        </member>
        <member name="T:CSharpGL.FontTexture">
            <summary>
            font, texture and texture coordiante.
            </summary>
            <summary>
            font, texture and texture coordiante.
            </summary>
        </member>
        <member name="T:CSharpGL.IFontTexture">
            <summary>
            font, texture and texture coordiante.
            </summary>
        </member>
        <member name="P:CSharpGL.IFontTexture.TextureObj">
            <summary>
            Texture's id.
            </summary>
        </member>
        <member name="P:CSharpGL.IFontTexture.GlyphHeight">
            <summary>
            glyph's height.
            </summary>
        </member>
        <member name="P:CSharpGL.IFontTexture.TextureSize">
            <summary>
            texture's size.
            </summary>
        </member>
        <member name="P:CSharpGL.IFontTexture.GlyphInfoDictionary">
            <summary>
            glyph information dictionary.
            </summary>
        </member>
        <member name="M:CSharpGL.FontTexture.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FontTexture.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FontTexture.Default">
            <summary>
            Default FontTexture instance for this render context.
            </summary>
        </member>
        <member name="P:CSharpGL.FontTexture.TextureObj">
            <summary>
            Texture that contains all glyphs.
            </summary>
        </member>
        <member name="P:CSharpGL.FontTexture.GlyphFont">
            <summary>
            font of glyphs.
            </summary>
        </member>
        <member name="P:CSharpGL.FontTexture.GlyphHeight">
            <summary>
            glyph's height.
            </summary>
        </member>
        <member name="P:CSharpGL.FontTexture.TextureSize">
            <summary>
            texture's size.
            </summary>
        </member>
        <member name="P:CSharpGL.FontTexture.GlyphInfoDictionary">
            <summary>
            glyph information dictionary.
            </summary>
        </member>
        <member name="T:CSharpGL.FontTextureHelper">
            <summary>
            helper class.
            </summary>
        </member>
        <member name="M:CSharpGL.FontTextureHelper.GetFontTexture(CSharpGL.FontBitmap,CSharpGL.SamplerParameters,CSharpGL.MipmapFilter)">
            <summary>
            Gets an instance of <see cref="T:CSharpGL.FontTexture"/>.
            </summary>
            <param name="fontBitmap"></param>
            <param name="parameters"></param>
            <param name="mipmapFiltering"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.BoundingBoxRendererHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BoundingBoxRendererHelper.GetBoundingBoxRenderer(CSharpGL.IModelSpace)">
            <summary>
            Gets a <see cref="T:CSharpGL.BoundingBoxRenderer"/> that wraps specified <paramref name="model"/>.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.BoundingBoxRendererHelper.GetBoundingBoxRenderer(System.Collections.Generic.IEnumerable{CSharpGL.IModelSpace})">
            <summary>
            Gets a <see cref="T:CSharpGL.BoundingBoxRenderer"/> that wraps specified <paramref name="models"/>.
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.BoundingBoxRendererHelper.GetBoundingBoxRenderer(CSharpGL.IModelSpace[])">
            <summary>
            Gets a <see cref="T:CSharpGL.BoundingBoxRenderer"/> that wraps specified <paramref name="models"/>.
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.HighlightedPickableRenderer">
            <summary>
            高亮显示拾取的图元。
            </summary>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.#ctor(CSharpGL.HighlightRenderer,CSharpGL.PickableRenderer)">
            <summary>
            高亮显示拾取的图元。
            </summary>
            <param name="highlighter"></param>
            <param name="pickableRenderer"></param>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.Render4Picking(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.GetVertexCount">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightedPickableRenderer.GetPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.Highlighter">
            <summary>
            高亮。
            </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.PickableRenderer">
            <summary>
            拾取。
            </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.WorldPosition">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.ModelSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.RotationAngleDegree">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.RotationAxis">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.Scale">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.HighlightedPickableRenderer.PickingBaseId">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.HighlightRenderer">
            <summary>
            高亮显示指定的图元。
            </summary>
        </member>
        <member name="M:CSharpGL.HighlightRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="F:CSharpGL.HighlightRenderer.positionNameInIBufferable">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightRenderer.#ctor(CSharpGL.IBufferable,System.String,CSharpGL.GLState[])">
             <summary>
             高亮显示指定的图元。
             </summary>
             <param name="model">一种渲染方式</param>
             <param name="positionNameInIBufferable">描述顶点位置信息的buffer的名字</param>
            <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.HighlightRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="F:CSharpGL.HighlightRenderer.maxElementCount">
            <summary>
            <see cref="T:CSharpGL.OneIndexBuffer"/>实际存在多少个元素。
            </summary>
        </member>
        <member name="M:CSharpGL.HighlightRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HighlightRenderer.uniformMVP">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightRenderer.ClearHighlightIndexes">
            <summary>
            清空高亮显示。
            </summary>
        </member>
        <member name="M:CSharpGL.HighlightRenderer.SetHighlightIndexes(CSharpGL.DrawMode,System.UInt32[])">
            <summary>
            设置要高亮显示的图元。
            </summary>
            <param name="mode">要高亮显示的图元类型</param>
            <param name="indexes">要高亮显示的图元的索引。</param>
        </member>
        <member name="P:CSharpGL.HighlightRenderer.ElementCount">
            <summary>
            要渲染多少个索引。
            </summary>
        </member>
        <member name="P:CSharpGL.HighlightRenderer.Type">
            <summary>
            type in GL.DrawElements(uint mode, int count, uint type, IntPtr indices);
            只能是OpenGL.UNSIGNED_BYTE, OpenGL.UNSIGNED_SHORT, or OpenGL.UNSIGNED_INT
            </summary>
        </member>
        <member name="T:CSharpGL.Chain">
            <summary>
            链条。若干个点用直线连接起来。
            <para>使用<see cref="T:CSharpGL.ZeroIndexBuffer"/></para>
            </summary>
        </member>
        <member name="T:CSharpGL.IBufferable">
            <summary>
            Data for CPU(model) -&gt; Data for GPU(buffer renderer)
            <para>从模型的数据格式转换为<see cref="T:CSharpGL.GLBuffer"/>，<see cref="T:CSharpGL.GLBuffer"/>转换为<see cref="T:CSharpGL.GLBuffer"/>，
            <see cref="T:CSharpGL.GLBuffer"/>则可用于控制GPU的渲染操作。</para>
            </summary>
        </member>
        <member name="M:CSharpGL.IBufferable.GetVertexAttributeBuffer(System.String,System.String)">
            <summary>
            获取顶点某种属性的<see cref="T:CSharpGL.GLBuffer"/>。
            </summary>
            <param name="bufferName">CPU代码指定的buffer名字，用以区分各个用途的buffer。</param>
            <param name="varNameInShader">此buffer在shader中对应的in变量名。</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IBufferable.GetIndexBuffer">
            <summary>
            获取描述索引的<see cref="T:CSharpGL.GLBuffer"/>。
            应为<see cref="T:CSharpGL.ZeroIndexBuffer"/>或<see cref="T:CSharpGL.OneIndexBuffer"/>。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.IBufferable.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.Chain.position">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Chain.color">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Chain.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            链条。若干个点用直线连接起来。
            </summary>
            <param name="pointCount">有多少个点</param>
            <param name="length">点的范围（长度）</param>
            <param name="width">点的范围（宽度）</param>
            <param name="height">点的范围（高度）</param>
        </member>
        <member name="M:CSharpGL.Chain.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Chain.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Chain.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Chain.Lengths">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ChainModel">
            <summary>
            链条。若干个点用直线连接起来。
            </summary>
        </member>
        <member name="M:CSharpGL.ChainModel.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            链条。若干个点用直线连接起来。
            </summary>
            <param name="pointCount">有多少个点</param>
            <param name="length">点的范围（长度）</param>
            <param name="width">点的范围（宽度）</param>
            <param name="height">点的范围（高度）</param>
        </member>
        <member name="T:CSharpGL.Points">
            <summary>
            Some Points
            </summary>
        </member>
        <member name="F:CSharpGL.Points.strposition">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Points.#ctor(System.Collections.Generic.IList{CSharpGL.vec3})">
            <summary>
            Some Points
            </summary>
            <param name="pointPositions"></param>
        </member>
        <member name="M:CSharpGL.Points.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Points.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Points.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Points.WorldPosition">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Points.Lengths">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Square">
            <summary>
            Square.
            <para>Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/></para>
            </summary>
        </member>
        <member name="F:CSharpGL.Square.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Square.strTexCoord">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Square.#ctor">
            <summary>
            Square.
            </summary>
        </member>
        <member name="M:CSharpGL.Square.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Square.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Square.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.SquareModel">
            <summary>
            一个正方形的模型。
            </summary>
        </member>
        <member name="T:CSharpGL.ZeroAttributeModel">
            <summary>
            Bufferable model with zero vertex attribute.
            </summary>
        </member>
        <member name="M:CSharpGL.ZeroAttributeModel.#ctor(CSharpGL.DrawMode,System.Int32,System.Int32,System.Int32)">
            <summary>
            Bufferable model with zero vertex attribute.
            </summary>
            <param name="mode">渲染模式。</param>
            <param name="firstVertex">要渲染的第一个顶点的位置。<para>Index of first vertex to be rendered.</para></param>
            <param name="vertexCount">要渲染多少个元素？<para>How many vertexes to be rendered?</para></param>
            <param name="primCount">primCount in instanced rendering.</param>
        </member>
        <member name="M:CSharpGL.ZeroAttributeModel.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroAttributeModel.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroAttributeModel.UsesZeroIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ZeroAttributeModel.Mode">
            <summary>
            用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）
            </summary>
        </member>
        <member name="P:CSharpGL.ZeroAttributeModel.FirstVertex">
            <summary>
            要渲染的第一个顶点的位置。<para>Index of first vertex to be rendered.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.ZeroAttributeModel.VertexCount">
            <summary>
            要渲染多少个元素？<para>How many vertexes to be rendered?</para>
            </summary>
        </member>
        <member name="P:CSharpGL.ZeroAttributeModel.PrimCount">
            <summary>
            primCount in instanced rendering.
            </summary>
        </member>
        <member name="T:CSharpGL.LabelRenderer">
            <summary>
            Renders a label that always faces camera in 3D space.
            </summary>
            <summary>
            Renders a label(a single line of text) that always faces camera in 3D space.
            </summary>
        </member>
        <member name="M:CSharpGL.LabelRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LabelRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.LabelRenderer.Create(System.Int32,System.Int32,CSharpGL.IFontTexture)">
            <summary>
            Create a label renderer.
            </summary>
            <param name="maxCharCount">Max char count to display for this label. Careful to set this value because greater <paramref name="maxCharCount"/> means more space ocupied in GPU nemory.</param>
            <param name="labelHeight">Label height(in pixels)</param>
            <param name="fontTexture">Use which font to render text?</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.LabelRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,CSharpGL.GLState[])">
             <summary>
            
             </summary>
             <param name="model"></param>
             <param name="shaderCodes"></param>
             <param name="attributeMap"></param>
             <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.LabelRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.LabelRenderer.Text">
            <summary>
            Displayed text whose maximum length is limited by constructor's maxCharCount parameter.
            </summary>
        </member>
        <member name="P:CSharpGL.LabelRenderer.DiscardTransparency">
            <summary>
            If true, transparent part of glyph will be discarded in shader, which avoids wrrong blend effect and reduce looking effect.
            </summary>
        </member>
        <member name="P:CSharpGL.LabelRenderer.LabelHeight">
            <summary>
            Label's height(in pixels of OpenGL's viewport)
            </summary>
        </member>
        <member name="T:CSharpGL.RecognizedPrimitiveInfo">
            <summary>
            All vertexs' ids of picked geometry and their indexes in <see cref="T:CSharpGL.IndexBuffer"/>.
            </summary>
        </member>
        <member name="M:CSharpGL.RecognizedPrimitiveInfo.#ctor(System.UInt32,System.UInt32[])">
            <summary>
            All vertexs' ids of picked geometry and their indexes in <see cref="T:CSharpGL.IndexBuffer"/>.
            </summary>
            <param name="index">index of LastVertexId in the <see cref="T:CSharpGL.IndexBuffer"/>.</param>
            <param name="vertexIds">All vertexs' ids of picked geometry.</param>
        </member>
        <member name="P:CSharpGL.RecognizedPrimitiveInfo.LastVertexId">
            <summary>
            last vertex' id of picked geometry.
            </summary>
        </member>
        <member name="P:CSharpGL.RecognizedPrimitiveInfo.VertexIds">
            <summary>
            All vertexs' ids of picked geometry.
            </summary>
        </member>
        <member name="T:CSharpGL.SimpleRenderer">
            <summary>
            Renders a model provided by CSharpGL.
            </summary>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.Chain)">
            <summary>
            create an BigDipper's renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.BigDipper)">
            <summary>
            create an BigDipper's renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.Axis)">
            <summary>
            create an Axis' renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.Cube)">
            <summary>
            create an Cube' renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.Tetrahedron)">
            <summary>
            create an Tetrahedron' renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.Sphere)">
            <summary>
            create an Sphere' renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.Create(CSharpGL.Teapot)">
            <summary>
            create an Teapot' renderer.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
             <summary>
            
             </summary>
             <param name="model"></param>
             <param name="shaderCodes"></param>
             <param name="attributeMap"></param>
             <param name="positionNameInIBufferable"></param>
             <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.SimpleRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="T:CSharpGL.BoundingBoxModel">
            <summary>
            bounding box's model.
            </summary>
        </member>
        <member name="F:CSharpGL.BoundingBoxModel.strPosition">
            <summary>
            position
            </summary>
        </member>
        <member name="F:CSharpGL.BoundingBoxModel.positions">
            <summary>
            eight vertexes.
            </summary>
        </member>
        <member name="F:CSharpGL.BoundingBoxModel.indexes">
            <summary>
            render in GL_QUADS.
            </summary>
        </member>
        <member name="M:CSharpGL.BoundingBoxModel.#ctor(CSharpGL.vec3)">
            <summary>
            bounding box.
            </summary>
            <param name="lengths">bounding box's length at x, y, z axis.</param>
        </member>
        <member name="M:CSharpGL.BoundingBoxModel.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.BoundingBoxModel.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.BoundingBoxModel.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.TextModel">
             <summary>
            
             </summary>
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.strUV">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TextModel.SetText(System.String,CSharpGL.IFontTexture)">
             <summary>
            
             </summary>
             <param name="content"></param>
             <param name="fontTextureService"></param>
        </member>
        <member name="M:CSharpGL.TextModel.#ctor(System.Int32)">
             <summary>
            
             </summary>
             <param name="maxCharCount"></param>
        </member>
        <member name="M:CSharpGL.TextModel.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.TextModel.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.TextModel.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.TextModel.Text">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TextModel.GlyphPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphPosition.leftUp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphPosition.leftDown">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphPosition.rightUp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphPosition.rightDown">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TextModel.GlyphPosition.#ctor(CSharpGL.vec2,CSharpGL.vec2,CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="leftUp"></param>
             <param name="leftDown"></param>
             <param name="rightUp"></param>
             <param name="rightDown"></param>
        </member>
        <member name="T:CSharpGL.TextModel.GlyphTexCoord">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphTexCoord.leftUp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphTexCoord.leftDown">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphTexCoord.rightUp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TextModel.GlyphTexCoord.rightDown">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TextModel.GlyphTexCoord.#ctor(CSharpGL.vec2,CSharpGL.vec2,CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="leftUp"></param>
             <param name="leftDown"></param>
             <param name="rightUp"></param>
             <param name="rightDown"></param>
        </member>
        <member name="T:CSharpGL.ArcBallManipulater">
            <summary>
            Rotate model using arc-ball method.
            </summary>
        </member>
        <member name="M:CSharpGL.ArcBallManipulater.#ctor(System.Windows.Forms.MouseButtons)">
            <summary>
            Rotate model using arc-ball method.
            </summary>
            <param name="bindingMouseButtons"></param>
        </member>
        <member name="M:CSharpGL.ArcBallManipulater.Bind(CSharpGL.ICamera,CSharpGL.ICanvas)">
            <summary>
            Bind this manipulater to specified <paramref name="camera"/> and <paramref name="canvas"/>.
            </summary>
            <param name="camera"></param>
            <param name="canvas"></param>
        </member>
        <member name="M:CSharpGL.ArcBallManipulater.GetRotationMatrix">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ArcBallManipulater.Unbind">
            <summary>
            Unbind this manipulater to camera and canvas.
            </summary>
        </member>
        <member name="P:CSharpGL.ArcBallManipulater.IsBinded">
            <summary>
            Indicates whether this this manipulater is binded to camera and canvas.
            </summary>
        </member>
        <member name="P:CSharpGL.ArcBallManipulater.BindingMouseButtons">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ArcBallManipulater.MouseSensitivity">
            <summary>
            </summary>
        </member>
        <member name="T:CSharpGL.bvec2">
            <summary>
            Represents a two dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.bvec2.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.bvec2.y">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.bvec2.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.bvec2.#ctor(System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:CSharpGL.bvec2.#ctor(CSharpGL.bvec2)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.bvec2.#ctor(CSharpGL.bvec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.bvec2.#ctor(CSharpGL.bvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.bvec2.op_Inequality(CSharpGL.bvec2,CSharpGL.bvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec2.op_Equality(CSharpGL.bvec2,CSharpGL.bvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec2.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec2.Equals(CSharpGL.bvec2)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec2.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec2.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec2.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.bvec2.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.bvec3">
            <summary>
            Represents a three dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.bvec3.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.bvec3.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.bvec3.z">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.bvec3.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.bvec3.#ctor(System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.bvec3.#ctor(CSharpGL.bvec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.bvec3.#ctor(CSharpGL.bvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.bvec3.#ctor(CSharpGL.bvec2,System.Boolean)">
             <summary>
            
             </summary>
             <param name="xy"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.bvec3.op_Inequality(CSharpGL.bvec3,CSharpGL.bvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec3.op_Equality(CSharpGL.bvec3,CSharpGL.bvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec3.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec3.Equals(CSharpGL.bvec3)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec3.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec3.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec3.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.bvec3.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.uvec2">
            <summary>
            Represents a two dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.uvec2.x">
            <summary>
            Don't change the order of x, y appears!
            </summary>
        </member>
        <member name="F:CSharpGL.uvec2.y">
            <summary>
            Don't change the order of x, y appears!
            </summary>
        </member>
        <member name="M:CSharpGL.uvec2.#ctor(System.UInt32)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.uvec2.#ctor(System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:CSharpGL.uvec2.#ctor(CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.uvec2.#ctor(CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.uvec2.#ctor(CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.uvec2.op_Subtraction(CSharpGL.uvec2,CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Subtraction(CSharpGL.uvec2,System.UInt32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Inequality(CSharpGL.uvec2,CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Multiply(CSharpGL.uvec2,System.UInt32)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Multiply(System.UInt32,CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Multiply(CSharpGL.uvec2,CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Division(CSharpGL.uvec2,System.UInt32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Addition(CSharpGL.uvec2,CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Addition(CSharpGL.uvec2,System.UInt32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.op_Equality(CSharpGL.uvec2,CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.dot(CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.Equals(CSharpGL.uvec2)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec2.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.uvec2.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.ivec2">
            <summary>
            Represents a two dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.ivec2.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.ivec2.y">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.ivec2.#ctor(System.Int32)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.ivec2.#ctor(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:CSharpGL.ivec2.#ctor(CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.ivec2.#ctor(CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.ivec2.#ctor(CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.ivec2.op_UnaryNegation(CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Subtraction(CSharpGL.ivec2,CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Subtraction(CSharpGL.ivec2,System.Int32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Inequality(CSharpGL.ivec2,CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Multiply(CSharpGL.ivec2,System.Int32)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Multiply(System.Int32,CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Multiply(CSharpGL.ivec2,CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Division(CSharpGL.ivec2,System.Int32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Addition(CSharpGL.ivec2,CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Addition(CSharpGL.ivec2,System.Int32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.op_Equality(CSharpGL.ivec2,CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.dot(CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.Equals(CSharpGL.ivec2)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec2.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ivec2.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.uvec3">
            <summary>
            Represents a three dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.uvec3.x">
            <summary>
            Don't change the order of x, y, z, w appears!
            </summary>
        </member>
        <member name="F:CSharpGL.uvec3.y">
            <summary>
            Don't change the order of x, y, z, w appears!
            </summary>
        </member>
        <member name="F:CSharpGL.uvec3.z">
            <summary>
            Don't change the order of x, y, z, w appears!
            </summary>
        </member>
        <member name="M:CSharpGL.uvec3.#ctor(System.UInt32)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.uvec3.#ctor(System.UInt32,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.uvec3.#ctor(CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.uvec3.#ctor(CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.uvec3.#ctor(CSharpGL.uvec2,System.UInt32)">
             <summary>
            
             </summary>
             <param name="xy"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.uvec3.op_Subtraction(CSharpGL.uvec3,CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Inequality(CSharpGL.uvec3,CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Multiply(CSharpGL.uvec3,System.UInt32)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Multiply(System.UInt32,CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Multiply(CSharpGL.uvec3,CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Division(CSharpGL.uvec3,System.UInt32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Addition(CSharpGL.uvec3,CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.op_Equality(CSharpGL.uvec3,CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.cross(CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.dot(CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.Equals(CSharpGL.uvec3)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec3.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.uvec3.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.ivec3">
            <summary>
            Represents a three dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.ivec3.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.ivec3.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.ivec3.z">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.ivec3.#ctor(System.Int32)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.ivec3.#ctor(System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.ivec3.#ctor(CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.ivec3.#ctor(CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.ivec3.#ctor(CSharpGL.ivec2,System.Int32)">
             <summary>
            
             </summary>
             <param name="xy"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.ivec3.op_UnaryNegation(CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Subtraction(CSharpGL.ivec3,CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Inequality(CSharpGL.ivec3,CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Multiply(CSharpGL.ivec3,System.Int32)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Multiply(System.Int32,CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Multiply(CSharpGL.ivec3,CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Division(CSharpGL.ivec3,System.Int32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Addition(CSharpGL.ivec3,CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.op_Equality(CSharpGL.ivec3,CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.cross(CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.dot(CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.Equals(CSharpGL.ivec3)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec3.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ivec3.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.bvec4">
            <summary>
            Represents a four dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.bvec4.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.bvec4.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.bvec4.z">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.bvec4.w">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.bvec4.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.bvec4.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.bvec4.#ctor(CSharpGL.bvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.bvec4.#ctor(CSharpGL.bvec3,System.Boolean)">
             <summary>
            
             </summary>
             <param name="xyz"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.bvec4.op_Inequality(CSharpGL.bvec4,CSharpGL.bvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec4.op_Equality(CSharpGL.bvec4,CSharpGL.bvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec4.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec4.Equals(CSharpGL.bvec4)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec4.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec4.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.bvec4.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.bvec4.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.uvec4">
            <summary>
            Represents a four dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.uvec4.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.uvec4.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.uvec4.z">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.uvec4.w">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.uvec4.#ctor(System.UInt32)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.uvec4.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.uvec4.#ctor(CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.uvec4.#ctor(CSharpGL.uvec3,System.UInt32)">
             <summary>
            
             </summary>
             <param name="xyz"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.uvec4.op_Subtraction(CSharpGL.uvec4,CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Inequality(CSharpGL.uvec4,CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Multiply(CSharpGL.uvec4,System.UInt32)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Multiply(System.UInt32,CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Multiply(CSharpGL.uvec4,CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Division(CSharpGL.uvec4,System.UInt32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Addition(CSharpGL.uvec4,CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.op_Equality(CSharpGL.uvec4,CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.dot(CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.Equals(CSharpGL.uvec4)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.uvec4.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.uvec4.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.ivec4">
            <summary>
            Represents a four dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.ivec4.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.ivec4.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.ivec4.z">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.ivec4.w">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.ivec4.#ctor(System.Int32)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.ivec4.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.ivec4.#ctor(CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.ivec4.#ctor(CSharpGL.ivec3,System.Int32)">
             <summary>
            
             </summary>
             <param name="xyz"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.ivec4.op_UnaryNegation(CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Subtraction(CSharpGL.ivec4,CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Inequality(CSharpGL.ivec4,CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Multiply(CSharpGL.ivec4,System.Int32)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Multiply(System.Int32,CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Multiply(CSharpGL.ivec4,CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Division(CSharpGL.ivec4,System.Int32)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Addition(CSharpGL.ivec4,CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.op_Equality(CSharpGL.ivec4,CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.dot(CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.Equals(CSharpGL.ivec4)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ivec4.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ivec4.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.VectorHelper">
            <summary>
            vector's helper.
            </summary>
        </member>
        <member name="F:CSharpGL.VectorHelper.separator">
            <summary>
            separator
            </summary>
        </member>
        <member name="M:CSharpGL.VectorHelper.Abs(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.VectorHelper.UpdateMax(CSharpGL.vec3,CSharpGL.vec3@)">
            <summary>
            update maximum values.
            </summary>
            <param name="item"></param>
            <param name="currentMax"></param>
        </member>
        <member name="M:CSharpGL.VectorHelper.UpdateMax(CSharpGL.ivec3,CSharpGL.ivec3@)">
            <summary>
            update minimum values.
            </summary>
            <param name="item"></param>
            <param name="currentMax"></param>
        </member>
        <member name="M:CSharpGL.VectorHelper.UpdateMax(CSharpGL.uvec3,CSharpGL.uvec3@)">
            <summary>
            update minimum values.
            </summary>
            <param name="item"></param>
            <param name="currentMax"></param>
        </member>
        <member name="M:CSharpGL.VectorHelper.UpdateMin(CSharpGL.vec3,CSharpGL.vec3@)">
            <summary>
            update minimum values.
            </summary>
            <param name="item"></param>
            <param name="currentMin"></param>
        </member>
        <member name="M:CSharpGL.VectorHelper.UpdateMin(CSharpGL.ivec3,CSharpGL.ivec3@)">
            <summary>
            update minimum values.
            </summary>
            <param name="item"></param>
            <param name="currentMin"></param>
        </member>
        <member name="M:CSharpGL.VectorHelper.UpdateMin(CSharpGL.uvec3,CSharpGL.uvec3@)">
            <summary>
            update minimum values.
            </summary>
            <param name="item"></param>
            <param name="currentMin"></param>
        </member>
        <member name="T:CSharpGL.OctreeHelper">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ClearBufferMask">
            <summary>
            Used in GL.BlitFramebuffer, GL.Clear and 1 other function
            </summary>
        </member>
        <member name="F:CSharpGL.ClearBufferMask.None">
            <summary>
            Original was GL_NONE = 0
            </summary>
        </member>
        <member name="F:CSharpGL.ClearBufferMask.DepthBufferBit">
            <summary>
            Original was GL_DEPTH_BUFFER_BIT = 0x00000100
            </summary>
        </member>
        <member name="F:CSharpGL.ClearBufferMask.AccumBufferBit">
            <summary>
            Original was GL_ACCUM_BUFFER_BIT = 0x00000200
            </summary>
        </member>
        <member name="F:CSharpGL.ClearBufferMask.StencilBufferBit">
            <summary>
            Original was GL_STENCIL_BUFFER_BIT = 0x00000400
            </summary>
        </member>
        <member name="F:CSharpGL.ClearBufferMask.ColorBufferBit">
            <summary>
            Original was GL_COLOR_BUFFER_BIT = 0x00004000
            </summary>
        </member>
        <member name="F:CSharpGL.ClearBufferMask.CoverageBufferBitNv">
            <summary>
            Original was GL_COVERAGE_BUFFER_BIT_NV = 0x00008000
            </summary>
        </member>
        <member name="T:CSharpGL.StringName">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.StringName.Vendor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.StringName.Renderer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.StringName.Version">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.StringName.Extensions">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.CameraHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.CameraHelper.GetFront(CSharpGL.IViewCamera)">
            <summary>
            Get front vector in world space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.CameraHelper.GetBack(CSharpGL.IViewCamera)">
            <summary>
            Get back vector in world space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.CameraHelper.GetLeft(CSharpGL.IViewCamera)">
            <summary>
            Get left vector in world space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.CameraHelper.GetRight(CSharpGL.IViewCamera)">
            <summary>
            Get right vector in world space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.CameraHelper.GetUp(CSharpGL.IViewCamera)">
            <summary>
            Gets standard up.
            </summary>
            <param name="camera"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.CameraHelper.GetDown(CSharpGL.IViewCamera)">
            <summary>
            Gets standard down.
            </summary>
            <param name="camera"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.CameraHelper.ZoomCamera(CSharpGL.ICamera,CSharpGL.IBoundingBox)">
            TODO:摄像机的perspective和ortho视角，是否应该同时变化？
            <summary>
            Zoom camera to fit in specified <paramref name="boundingBox"/>.
            </summary>
            <param name="camera"></param>
            <param name="boundingBox"></param>
        </member>
        <member name="M:CSharpGL.CameraHelper.ZoomCamera(CSharpGL.IPerspectiveViewCamera,CSharpGL.IBoundingBox)">
            <summary>
            Adjusts camera's settings according to bounding box.
            <para>Use this when bounding box's size or positon is changed.</para>
            </summary>
            <param name="camera"></param>
            <param name="boundingBox"></param>
        </member>
        <member name="M:CSharpGL.CameraHelper.ZoomCamera(CSharpGL.IOrthoViewCamera,CSharpGL.IBoundingBox)">
            <summary>
            Adjusts camera's settings according to bounding box.
            <para>Use this when bounding box's size or positon is changed.</para>
            </summary>
            <param name="camera"></param>
            <param name="boundingBox"></param>
        </member>
        <member name="M:CSharpGL.CameraHelper.MouseWheel(CSharpGL.ICamera,System.Int32)">
            <summary>
            对摄像机执行一次缩放操作
            </summary>
            <param name="camera"></param>
            <param name="delta"></param>
        </member>
        <member name="T:CSharpGL.IKeyboardHandler">
            <summary>
            Handle keyboard events.
            </summary>
        </member>
        <member name="M:CSharpGL.IKeyboardHandler.canvas_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="T:CSharpGL.TextRenderer">
            <summary>
            Renders a label(a single line of text).
            </summary>
        </member>
        <member name="M:CSharpGL.TextRenderer.Create(System.Int32,System.Int32,CSharpGL.IFontTexture)">
            <summary>
            Create a text renderer.
            </summary>
            <param name="maxCharCount">Max char count to display for this label. Careful to set this value because greater <paramref name="maxCharCount"/> means more space ocupied in GPU nemory.</param>
            <param name="labelHeight">Label height(in pixels)</param>
            <param name="fontTexture">Use which font to render text?</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.TextRenderer.#ctor(CSharpGL.TextModel,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,CSharpGL.GLState[])">
            <summary>
            Renders a label(a single line of text).
            </summary>
            <param name="model"></param>
            <param name="shaderCodes"></param>
            <param name="attributeMap"></param>
            <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.TextRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.TextRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TextRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="P:CSharpGL.TextRenderer.Text">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.TextRenderer.BlendState">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.TextRenderer.TextColor">
            <summary>
            Text's color.
            </summary>
        </member>
        <member name="T:CSharpGL.TextureRenderer">
            <summary>
            Renders a bitmap in a square.
            </summary>
        </member>
        <member name="M:CSharpGL.TextureRenderer.Create(System.String)">
            <summary>
            Gets a renderer that renders a bitmap in a square.
            </summary>
            <param name="bitmapFilename"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.TextureRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.Scene">
            <summary>
            Manages a scene to be rendered and updated.
            </summary>
        </member>
        <member name="M:CSharpGL.Scene.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.Scene.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.Scene.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.Scene.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.Scene.Pick(System.Drawing.Point,CSharpGL.PickingGeometryType)">
            <summary>
            Get geometry at specified <paramref name="mousePosition"/> with specified <paramref name="pickingGeometryType"/>.
            <para>Returns null when <paramref name="mousePosition"/> is out of this scene's area or there's no active(visible and enabled) viewport.</para>
            </summary>
            <param name="mousePosition">mouse position in Windows coordinate system.(Left Up is (0, 0))</param>
            <param name="pickingGeometryType">target's geometry type.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Scene.ColorCodedPicking(CSharpGL.ViewPort,System.Drawing.Rectangle,System.Drawing.Rectangle,CSharpGL.PickingGeometryType)">
            <summary>
            Pick primitives in specified <paramref name="viewPort"/>.
            </summary>
            <param name="viewPort"></param>
            <param name="pickingRect">rect in OpenGL's window coordinate system.(Left Down is (0, 0)), size).</param>
            <param name="clientRectangle">whole canvas' rectangle.</param>
            <param name="pickingGeometryType"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Scene.Render4Picking(CSharpGL.RenderEventArgs)">
            <summary>
            Render all <see cref="T:CSharpGL.PickableRenderer"/>s for color-coded picking.
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Scene.GetPickGeometry(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,System.Collections.Generic.List{CSharpGL.IPickable})">
            <summary>
            get picked geometry.
            </summary>
            <param name="arg"></param>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <param name="stageVertexId"></param>
            <param name="pickableRendererList"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Scene.ReadPixels(System.Drawing.Rectangle)">
            <summary>
            Read pixels in specified rect and get the VertexIds they represent.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Scene.Render(CSharpGL.PickingGeometryType)">
            <summary>
            Render this scene.
            </summary>
            <param name="pickingGeometryType">Specify type of primitive you want to pick or nothing to pick.</param>
        </member>
        <member name="M:CSharpGL.Scene.RenderViewPort(CSharpGL.ViewPort,System.Drawing.Rectangle,CSharpGL.PickingGeometryType)">
            <summary>
            render scene in every view port.
            </summary>
            <param name="viewPort"></param>
            <param name="clientRectangle"></param>
            <param name="pickingGeometryType"></param>
        </member>
        <member name="F:CSharpGL.Scene.maxCycle">
            <summary>
            how many times should this engine run?
            <para>0 means endless.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.Scene.Start(System.Int32)">
            <summary>
            start running scripts.
            </summary>
            <param name="maxCycle">
            how many times should this engine run?
            <para>0 means endless.</para></param>
        </member>
        <member name="M:CSharpGL.Scene.Stop">
            <summary>
            stop running scripts.
            </summary>
        </member>
        <member name="M:CSharpGL.Scene.UpdateOnce">
            <summary>
            update once.
            </summary>
        </member>
        <member name="M:CSharpGL.Scene.#ctor(CSharpGL.ICamera,CSharpGL.ICanvas,CSharpGL.SceneObject[])">
            <summary>
            Manages a scene to be rendered and updated.
            </summary>
            <param name="camera">Camera of the scene</param>
            <param name="canvas">Canvas that this scene binds to.</param>
            <param name="objects">Objects to be rendered</param>
        </member>
        <member name="M:CSharpGL.Scene.Resize(System.Object,System.EventArgs)">
            <summary>
            Please bind this method to Control.Resize event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CSharpGL.Scene.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.Scene.Running">
            <summary>
            whether this scene's objects' scripts are being updated now.
            </summary>
        </member>
        <member name="P:CSharpGL.Scene.FirstCamera">
            <summary>
            camera of the scene.
            </summary>
        </member>
        <member name="P:CSharpGL.Scene.Canvas">
            <summary>
            Canvas that this scene binds to.
            </summary>
        </member>
        <member name="P:CSharpGL.Scene.RootObject">
            <summary>
            Root object of all objects to be rendered in the scene.
            </summary>
        </member>
        <member name="P:CSharpGL.Scene.RootViewPort">
            <summary>
            Root object of all viewports to be rendered in the scene.
            </summary>
        </member>
        <member name="P:CSharpGL.Scene.RootUI">
            <summary>
            hosts all UI renderers.
            </summary>
        </member>
        <member name="T:CSharpGL.SceneObject">
            <summary>
            an object to be rendered in a scene.
            </summary>
        </member>
        <member name="T:CSharpGL.ITreeNode`1">
            <summary>
            通用的树结点。
            <para>General tree node.</para>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:CSharpGL.ITreeNode`1.Parent">
            <summary>
            parent node.
            </summary>
        </member>
        <member name="P:CSharpGL.ITreeNode`1.Content">
            <summary>
            Content of this node.
            </summary>
        </member>
        <member name="P:CSharpGL.ITreeNode`1.Children">
            <summary>
            children nodes.
            </summary>
        </member>
        <member name="F:CSharpGL.SceneObject.strModelSpace">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.SceneObject.strSceneObject">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SceneObject.Render(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.SceneObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CSharpGL.SceneObject.Finalize">
            <summary>
            Destruct instance of the class.
            </summary>
        </member>
        <member name="F:CSharpGL.SceneObject.disposedValue">
            <summary>
            Backing field to track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:CSharpGL.SceneObject.Dispose(System.Boolean)">
            <summary>
            Dispose managed and unmanaged resources of this instance.
            </summary>
            <param name="disposing">If disposing equals true, managed and unmanaged resources can be disposed. If disposing equals false, only unmanaged resources can be disposed. </param>
        </member>
        <member name="M:CSharpGL.SceneObject.#ctor">
            <summary>
            an object to be rendered in a scene.
            </summary>
        </member>
        <member name="M:CSharpGL.SceneObject.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObject.Update">
            <summary>
            Update scene object's state.
            </summary>
        </member>
        <member name="M:CSharpGL.SceneObject.GetScript``1">
            <summary>
            Gets first script with specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObject.GetScript(System.String)">
            <summary>
            Gets script by specified <paramref name="name"/>.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObject.FindChild(System.String)">
            <summary>
            find child by name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObject.GetEnumerator">
            <summary>
            enumerates self and all children objects recursively.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.SceneObject.WorldPosition">
            <summary>
            Position in world space.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.RotationAngleDegree">
            <summary>
            Rotation angle in degree.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.RotationAxis">
            <summary>
            Rotation axis.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Scale">
            <summary>
            Scale factor.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.ModelSize">
            <summary>
            Length in X/Y/Z axis.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.GroupStateList">
            <summary>
            Turn on before rendering something and turn off after rendering.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Renderer">
            <summary>
            renders something.
            Note: I wanted to use <see cref="T:CSharpGL.IRenderable"/> but it fails to display in <see cref="T:CSharpGL.PropertyGridEditor"/>. So I have to upgrade it to <see cref="T:CSharpGL.RendererBase"/>.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Scripts">
            <summary>
            update state of this object.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Enabled">
            <summary>
            Enabled or not.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Tag">
            <summary>
            binded object.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Content">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Parent">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.SceneObject.Children">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Time">
            <summary>
            Get information about timing.
            </summary>
        </member>
        <member name="P:CSharpGL.Time.DeltaTime">
            <summary>
            Time interval betwwen two contiguous <see cref="T:CSharpGL.SceneObject"/>
            </summary>
        </member>
        <member name="T:CSharpGL.SceneRootViewPort">
            <summary>
            Root view port that should never take part in rendering.
            </summary>
        </member>
        <member name="T:CSharpGL.ViewPort">
            <summary>
            Render scene to an area of canvas.
            </summary>
        </member>
        <member name="T:CSharpGL.ILayout`1">
            <summary>
            Supports layout UI element in an OpenGL canvas.
            实现在OpenGL画布上的UI布局
            </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.Anchor">
            <summary>
            the edges of the <see cref="T:CSharpGL.GLCanvas"/> to which a UI’s rect is bound and determines how it is resized with its parent.
            <para>something like AnchorStyles.Left | AnchorStyles.Bottom.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.Margin">
            <summary>
            Gets or sets the space between viewport and SimpleRect.
            </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.Location">
            <summary>
            相对于Parent左下角的位置(Left Down location)
            </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.Size">
            <summary>
            Stores width when <see cref="P:CSharpGL.ILayout`1.Anchor"/>.Left &amp; <see cref="P:CSharpGL.ILayout`1.Anchor"/>.Right is <see cref="P:CSharpGL.ILayout`1.Anchor"/>.None.
            <para> and height when <see cref="P:CSharpGL.ILayout`1.Anchor"/>.Top &amp; <see cref="P:CSharpGL.ILayout`1.Anchor"/>.Bottom is <see cref="P:CSharpGL.ILayout`1.Anchor"/>.None.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.ParentLastSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.zNear">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ILayout`1.zFar">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ILayoutEvent">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ILayoutEvent.DoBeforeLayout">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ILayoutEvent.DoAfterLayout">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ViewPort.strILayout">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ViewPort.Contains(System.Drawing.Point)">
            <summary>
            Indicates whether speicifed <paramref name="point"/>(Left Down is (0, 0)) is in this view port's area.
            </summary>
            <param name="point">point's position in OpenGL coordinate(Left Down is (0, 0)).</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ViewPort.#ctor(CSharpGL.ICamera,System.Windows.Forms.AnchorStyles,System.Windows.Forms.Padding,System.Drawing.Size)">
            <summary>
            Render scene to an area of canvas.
            </summary>
            <param name="camera"></param>
            <param name="anchor"></param>
            <param name="margin"></param>
            <param name="size"></param>
        </member>
        <member name="M:CSharpGL.ViewPort.Initialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ViewPort.On">
            <summary>
            limit rendering area.
            </summary>
        </member>
        <member name="M:CSharpGL.ViewPort.Off">
            <summary>
            cancel limitation.
            </summary>
        </member>
        <member name="M:CSharpGL.ViewPort.Render(CSharpGL.Scene,System.Drawing.Rectangle,CSharpGL.PickingGeometryType)">
            <summary>
            render scene in this view port.
            </summary>
            <param name="scene"></param>
            <param name="clientRectangle"></param>
            <param name="pickingGeometryType"></param>
        </member>
        <member name="M:CSharpGL.ViewPort.RenderObject(CSharpGL.ITreeNode{CSharpGL.SceneObject},CSharpGL.RenderEventArgs)">
            <summary>
            render object recursively.
            </summary>
            <param name="sceneObject"></param>
            <param name="arg"></param>
        </member>
        <member name="P:CSharpGL.ViewPort.Enabled">
            <summary>
            Does this viewport and all its children take part in rendering?
            </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Visiable">
            <summary>
            Does this viewport take part in rendering?
            </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Camera">
            <summary>
            Camera used to look at scene when rendering in this view port.
            </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.ClearColor">
            <summary>
            background color in this view port's area.
            </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Rect">
            <summary>
            Rectangle area of this view port.
            </summary>
        </member>
        <member name="E:CSharpGL.ViewPort.BeforeLayout">
            <summary>
            triggered before layout in <see cref="T:CSharpGL.ILayout`1"/>.Layout().
            </summary>
        </member>
        <member name="E:CSharpGL.ViewPort.AfterLayout">
            <summary>
            triggered after layout in <see cref="T:CSharpGL.ILayout`1"/>.Layout().
            </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Anchor">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Margin">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Location">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Size">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.ParentLastSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.zNear">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.zFar">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Content">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Parent">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewPort.Children">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SceneRootViewPort.#ctor(System.Windows.Forms.AnchorStyles,System.Windows.Forms.Padding,System.Drawing.Size)">
            <summary>
            Root view port that should never take part in rendering.
            </summary>
            <param name="anchor"></param>
            <param name="margin"></param>
            <param name="size"></param>
        </member>
        <member name="M:CSharpGL.SceneRootViewPort.Render(CSharpGL.Scene,System.Drawing.Rectangle,CSharpGL.PickingGeometryType)">
            <summary>
            render scene in this view port.
            </summary>
            <param name="scene"></param>
            <param name="clientRectangle"></param>
            <param name="pickingGeometryType"></param>
        </member>
        <member name="T:CSharpGL.UIRenderer">
            <summary>
            Renderer  that supports UI layout.
            支持2D UI布局的渲染器
            </summary>
            <summary>
            Renderer  that supports UI layout.
            支持2D UI布局的渲染器
            </summary>
        </member>
        <member name="F:CSharpGL.UIRenderer.strILayout">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.UIRenderer.#ctor(System.Windows.Forms.AnchorStyles,System.Windows.Forms.Padding,System.Drawing.Size,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="anchor"></param>
             <param name="margin"></param>
             <param name="size"></param>
             <param name="zNear"></param>
             <param name="zFar"></param>
        </member>
        <member name="M:CSharpGL.UIRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.UIRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.UIRenderer.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.UIRenderer.BeforeLayout">
            <summary>
            triggered before layout in <see cref="T:CSharpGL.ILayout`1"/>.Layout().
            </summary>
        </member>
        <member name="E:CSharpGL.UIRenderer.AfterLayout">
            <summary>
            triggered after layout in <see cref="T:CSharpGL.ILayout`1"/>.Layout().
            </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Anchor">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Margin">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Location">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Size">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.ParentLastSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.zNear">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.zFar">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Content">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Parent">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Children">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.StateList">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIRenderer.Renderer">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.UICursor">
            <summary>
            opengl UI for Cursor
            </summary>
        </member>
        <member name="M:CSharpGL.UICursor.CreateDefault">
            <summary>
            crates default cursor.
            Note: put this as the last one of <see cref="T:CSharpGL.SceneRootUI"/>'s children.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.UICursor.#ctor(System.Drawing.PointF,System.Drawing.Size,System.String)">
            <summary>
            opengl UI for Cursor.
            Note: put this as the last one of <see cref="T:CSharpGL.SceneRootUI"/>'s children.
            </summary>
            <param name="focalPoint">in percentage(0.00 ~ 1.00).<paramref name="focalPoint"/>.X ranges from 0(left) to 1(right). <paramref name="focalPoint"/>.Y ranges from 0(bottom) to 1(top).</param>
            <param name="size"></param>
            <param name="cursorBitmap"></param>
        </member>
        <member name="M:CSharpGL.UICursor.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.UICursor.UpdatePosition(System.Drawing.Point)">
            <summary>
            update cursor's position before every rendering.
            </summary>
            <param name="mousePosition"></param>
        </member>
        <member name="P:CSharpGL.UICursor.FocalPoint">
            <summary>
            in percentage(0.00 ~ 1.00). FocalPoint.X ranges from 0(left) to 1(right). FocalPoint.Y ranges from 0(bottom) to 1(top)
            </summary>
        </member>
        <member name="T:CSharpGL.SceneRootObject">
            <summary>
            Root object to be rendered in a scene.
            </summary>
        </member>
        <member name="M:CSharpGL.SceneRootObject.#ctor(CSharpGL.Scene)">
            <summary>
            an object to be rendered in a scene.
            </summary>
        </member>
        <member name="P:CSharpGL.SceneRootObject.BindingScene">
            <summary>
            Which scene is this object in?
            </summary>
        </member>
        <member name="T:CSharpGL.SceneObjectHelper">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.SceneObjectHelper.WrapToSceneObject(CSharpGL.RendererBase,CSharpGL.Script[])">
            <summary>
            Gets a <see cref="T:CSharpGL.SceneObject"/> that contains this renderer.
            </summary>
            <param name="renderer"></param>
            <param name="scripts"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObjectHelper.WrapToSceneObject(CSharpGL.RendererBase,System.Boolean,CSharpGL.Script[])">
            <summary>
            Gets a <see cref="T:CSharpGL.SceneObject"/> that contains this renderer.
            </summary>
            <param name="renderer"></param>
            <param name="generateBoundingBox"></param>
            <param name="scripts"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObjectHelper.WrapToSceneObject(CSharpGL.RendererBase,System.String,CSharpGL.Script[])">
            <summary>
            Gets a <see cref="T:CSharpGL.SceneObject"/> that contains this renderer.
            </summary>
            <param name="renderer"></param>
            <param name="name"></param>
            <param name="scripts"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.SceneObjectHelper.WrapToSceneObject(CSharpGL.RendererBase,System.String,System.Boolean,CSharpGL.Script[])">
            <summary>
            Gets a <see cref="T:CSharpGL.SceneObject"/> that contains this renderer.
            </summary>
            <param name="renderer"></param>
            <param name="name"></param>
            <param name="generateBoundingBox"></param>
            <param name="scripts"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.BoundedClockRenderer">
            <summary>
            </summary>
        </member>
        <member name="T:CSharpGL.LegacyBoundingBoxRenderer">
            <summary>
            Specify a cuboid that marks a model's edges.
            </summary>
        </member>
        <member name="M:CSharpGL.LegacyBoundingBoxRenderer.#ctor">
            <summary>
            Specify a cuboid that marks a model's edges.
            </summary>
        </member>
        <member name="M:CSharpGL.LegacyBoundingBoxRenderer.#ctor(CSharpGL.vec3,CSharpGL.vec3)">
            <summary>
            Specify a cuboid that marks a model's edges.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="M:CSharpGL.LegacyBoundingBoxRenderer.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LegacyBoundingBoxRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="P:CSharpGL.LegacyBoundingBoxRenderer.MaxPosition">
            <summary>
            Maximum position of this cuboid.
            </summary>
        </member>
        <member name="P:CSharpGL.LegacyBoundingBoxRenderer.MinPosition">
            <summary>
            Minimum position of this cuboid.
            </summary>
        </member>
        <member name="T:CSharpGL.BlendState">
            <summary>
            specify pixel arithmetic.
            </summary>
        </member>
        <member name="M:CSharpGL.BlendState.#ctor">
            <summary>
            specify pixel arithmetic.
            </summary>
        </member>
        <member name="M:CSharpGL.BlendState.#ctor(CSharpGL.BlendingSourceFactor,CSharpGL.BlendingDestinationFactor)">
            <summary>
            specify pixel arithmetic.
            </summary>
            <param name="sourceFactor">Specifies how the red, green, blue, and alpha source blending factors are computedThe initial value is GL_ONE.</param>
            <param name="destFactor">Specifies how the red, green, blue, and alpha destination blending factors are computed. The initial value is GL_ZERO.</param>
        </member>
        <member name="M:CSharpGL.BlendState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BlendState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.BlendState.SourceFactor">
            <summary>
            Specifies how the red, green, blue, and alpha source blending factors are computed. The initial value is GL_ONE.
            </summary>
        </member>
        <member name="P:CSharpGL.BlendState.DestFactor">
            <summary>
            Specifies how the red, green, blue, and alpha destination blending factors are computed. The initial value is GL_ZERO.
            </summary>
        </member>
        <member name="T:CSharpGL.CullFaceState">
            <summary>
            https://www.khronos.org/opengles/sdk/docs/man/xhtml/glCullFace.xml
            </summary>
        </member>
        <member name="M:CSharpGL.CullFaceState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.CullFaceState.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.CullFaceState.#ctor(CSharpGL.CullFaceMode)">
             <summary>
            
             </summary>
             <param name="mode"></param>
        </member>
        <member name="M:CSharpGL.CullFaceState.#ctor(CSharpGL.CullFaceMode,System.Boolean)">
             <summary>
            
             </summary>
             <param name="mode"></param>
             <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.CullFaceState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.CullFaceState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.CullFaceState.mode">
            <summary>
            Specifies whether front- or back-facing polygons are candidates for culling. Symbolic constants GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK are accepted. The initial value is GL_BACK.
            </summary>
        </member>
        <member name="P:CSharpGL.CullFaceState.Mode">
            <summary>
            https://www.khronos.org/opengles/sdk/docs/man/xhtml/glCullFace.xml
            </summary>
        </member>
        <member name="T:CSharpGL.CullFaceMode">
            <summary>
            Display front/back faces?
            </summary>
        </member>
        <member name="F:CSharpGL.CullFaceMode.Front">
            <summary>
            Display front faces only.
            </summary>
        </member>
        <member name="F:CSharpGL.CullFaceMode.Back">
            <summary>
            Display back faces only.
            </summary>
        </member>
        <member name="F:CSharpGL.CullFaceMode.FrontAndBack">
            <summary>
            Display both front and back faces.
            </summary>
        </member>
        <member name="T:CSharpGL.DepthTestState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DepthTestState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DepthTestState.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="enableCapacity">true for enable, false for disable</param>
        </member>
        <member name="M:CSharpGL.DepthTestState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PointSmoothState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSmoothState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSmoothState.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="enableCapacity">true for enable, false for disable</param>
        </member>
        <member name="M:CSharpGL.PointSmoothState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.PolygonOffsetFillState">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="T:CSharpGL.PolygonOffsetState">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetState.#ctor">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetState.#ctor(CSharpGL.PolygonOffset,System.Boolean)">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
            <param name="mode"></param>
            <param name="pullNear"></param>
        </member>
        <member name="M:CSharpGL.PolygonOffsetState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PolygonOffsetState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PolygonOffsetState.PullNear">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetFillState.#ctor">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetFillState.#ctor(System.Boolean)">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
            <param name="pullNear"></param>
        </member>
        <member name="T:CSharpGL.PolygonOffsetLineState">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetLineState.#ctor">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetLineState.#ctor(System.Boolean)">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
            <param name="pullNear"></param>
        </member>
        <member name="T:CSharpGL.PolygonOffsetPointState">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetPointState.#ctor">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
        </member>
        <member name="M:CSharpGL.PolygonOffsetPointState.#ctor(System.Boolean)">
            <summary>
            http://www.cnblogs.com/bitzhuwei/p/polygon-offset-for-stitching-andz-fighting.html
            </summary>
            <param name="pullNear"></param>
        </member>
        <member name="T:CSharpGL.PrimitiveRestartState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PrimitiveRestartState.#ctor(CSharpGL.IndexBufferElementType)">
             <summary>
            
             </summary>
             <param name="indexElementType"></param>
        </member>
        <member name="M:CSharpGL.PrimitiveRestartState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PrimitiveRestartState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PrimitiveRestartState.RestartIndex">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ScissorTestState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ScissorTestState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ScissorTestState.#ctor(System.Boolean)">
             <summary>
            
             </summary>
             <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.ScissorTestState.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="width"></param>
             <param name="height"></param>
        </member>
        <member name="M:CSharpGL.ScissorTestState.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="width"></param>
             <param name="height"></param>
             <param name="enableCapacity">Enable() or Disable() this capacity?</param>
        </member>
        <member name="M:CSharpGL.ScissorTestState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ScissorTestState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ScissorTestState.X">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ScissorTestState.Y">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ScissorTestState.Width">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ScissorTestState.Height">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TextureHelper">
            <summary>
            update texture's content.
            </summary>
        </member>
        <member name="M:CSharpGL.TextureHelper.UpdateContent(CSharpGL.Texture,System.Drawing.Bitmap)">
            <summary>
            upadte texture's content.
            </summary>
            <param name="texture"></param>
            <param name="bitmap"></param>
        </member>
        <member name="M:CSharpGL.TextureHelper.ToSamplerValue(CSharpGL.Texture)">
            <summary>
            get <see cref="T:CSharpGL.samplerValue"/> from this texture.
            </summary>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.UniformArrayVariableBase">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.UniformArrayVariableBase.#ctor(System.String)">
             <summary>
            
             </summary>
             <param name="varName"></param>
        </member>
        <member name="T:CSharpGL.UniformInt32Array">
            <summary>
            uniform int variable[10];
            </summary>
        </member>
        <member name="T:CSharpGL.UniformArrayVariable`1">
            <summary>
            shader中的一个数组类型的uniform变量。
            例如：uniform vec3 positions[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformArrayVariable`1.#ctor(System.String,System.Int32)">
            <summary>
            shader中的一个数组类型的uniform变量。
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformArrayVariable`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.UniformArrayVariable`1.Value">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.UniformInt32Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform int variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformInt32Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformBVec2Array">
            <summary>
            uniform bvec2 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBVec2Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform bvec2 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec2Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformBVec3Array">
            <summary>
            uniform bvec3 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBVec3Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform bvec3 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec3Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformBVec4Array">
            <summary>
            uniform bvec4 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBVec4Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform bvec4 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec4Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformUVec4Array">
            <summary>
            uniform uvec4 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformUVec4Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform uvec4 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec4Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformUVec3Array">
            <summary>
            uniform uvec3 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformUVec3Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec3 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec3Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformUVec2Array">
            <summary>
            uniform uvec2 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformUVec2Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec2 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec2Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformIVec2Array">
            <summary>
            uniform ivec2 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformIVec2Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec2 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec2Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformIVec3Array">
            <summary>
            uniform ivec3 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformIVec3Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec3 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec3Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformIVec4Array">
            <summary>
            uniform ivec4 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformIVec4Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec4 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec4Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformInt32">
            <summary>
            uniform int variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformInt32.#ctor(System.String)">
            <summary>
            uniform int variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformInt32.#ctor(System.String,System.Int32)">
            <summary>
            uniform int variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformInt32.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformBVec2">
            <summary>
            uniform bvec2 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBVec2.#ctor(System.String)">
            <summary>
            uniform bvec2 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec2.#ctor(System.String,CSharpGL.bvec2)">
            <summary>
            uniform bvec2 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec2.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformUVec2">
            <summary>
            uniform uvec2 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformUVec2.#ctor(System.String)">
            <summary>
            uniform uvec2 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec2.#ctor(System.String,CSharpGL.uvec2)">
            <summary>
            uniform uvec2 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec2.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformBVec3">
            <summary>
            uniform bvec3 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBVec3.#ctor(System.String)">
            <summary>
            uniform bvec3 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec3.#ctor(System.String,CSharpGL.bvec3)">
            <summary>
            uniform bvec3 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec3.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformUVec3">
            <summary>
            uniform uvec3 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformUVec3.#ctor(System.String)">
            <summary>
            uniform uvec3 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec3.#ctor(System.String,CSharpGL.uvec3)">
            <summary>
            uniform uvec3 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec3.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformBVec4">
            <summary>
            uniform bvec4 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBVec4.#ctor(System.String)">
            <summary>
            uniform bvec4 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec4.#ctor(System.String,CSharpGL.bvec4)">
            <summary>
            uniform bvec4 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformBVec4.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformUVec4">
            <summary>
            uniform uvec4 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformUVec4.#ctor(System.String)">
            <summary>
            uniform uvec4 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec4.#ctor(System.String,CSharpGL.uvec4)">
            <summary>
            uniform uvec4 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformUVec4.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformIVec4">
            <summary>
            uniform ivec4 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformIVec4.#ctor(System.String)">
            <summary>
            uniform ivec4 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec4.#ctor(System.String,CSharpGL.ivec4)">
            <summary>
            uniform ivec4 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec4.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformIVec3">
            <summary>
            uniform ivec3 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformIVec3.#ctor(System.String)">
            <summary>
            uniform ivec3 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec3.#ctor(System.String,CSharpGL.ivec3)">
            <summary>
            uniform ivec3 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec3.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformIVec2">
            <summary>
            uniform ivec2 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformIVec2.#ctor(System.String)">
            <summary>
            uniform ivec2 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec2.#ctor(System.String,CSharpGL.ivec2)">
            <summary>
            uniform ivec2 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformIVec2.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.BoundingBoxRenderer">
            <summary>
            Renders a bounding box.
            </summary>
        </member>
        <member name="M:CSharpGL.BoundingBoxRenderer.Create(CSharpGL.vec3)">
            <summary>
            get a bounding box renderer.
            </summary>
            <param name="lengths">bounding box's length at x, y, z direction.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.BoundingBoxRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,CSharpGL.GLState[])">
             <summary>
             Rendering something using GLSL shader and VBO(VAO).
             </summary>
             <param name="model">model data that can be transfermed into OpenGL Buffer's pointer.</param>
             <param name="shaderCodes">All shader codes needed for this renderer.</param>
             <param name="attributeMap">Mapping relations between 'in' variables in vertex shader in <paramref name="shaderCodes"/> and buffers in <paramref name="model"/>.</param>
            <param name="switches">OpenGL switches.</param>
        </member>
        <member name="M:CSharpGL.BoundingBoxRenderer.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.BoundingBoxRenderer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.BoundingBoxRenderer.BoundingBoxColor">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.BoundingBoxRenderer.MaxPosition">
            <summary>
            max position in world space.
            </summary>
        </member>
        <member name="P:CSharpGL.BoundingBoxRenderer.MinPosition">
            <summary>
            min position in world space.
            </summary>
        </member>
        <member name="T:CSharpGL.SatelliteManipulater">
            <summary>
            Rotates a camera on a sphere, whose center is camera's Target.
            <para>Just like a satellite moves around a fixed star.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.SatelliteManipulater.#ctor(System.Windows.Forms.MouseButtons)">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SatelliteManipulater.Bind(CSharpGL.ICamera,CSharpGL.ICanvas)">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SatelliteManipulater.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.SatelliteManipulater.Unbind">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.SatelliteManipulater.BindingMouseButtons">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.SatelliteManipulater.HorizontalRotationFactor">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.SatelliteManipulater.VerticalRotationFactor">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.FirstPerspectiveManipulater">
            <summary>
            Manipulate a camera in first-persppective's view.
            </summary>
        </member>
        <member name="M:CSharpGL.FirstPerspectiveManipulater.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FirstPerspectiveManipulater.#ctor(System.Single,System.Single,System.Single,System.Windows.Forms.MouseButtons)">
             <summary>
            
             </summary>
             <param name="stepLength"></param>
             <param name="horizontalRotationSpeed"></param>
             <param name="verticalRotationSpeed"></param>
             <param name="bindingMouseButtons"></param>
        </member>
        <member name="M:CSharpGL.FirstPerspectiveManipulater.Bind(CSharpGL.ICamera,CSharpGL.ICanvas)">
             <summary>
            
             </summary>
             <param name="camera"></param>
             <param name="canvas"></param>
        </member>
        <member name="M:CSharpGL.FirstPerspectiveManipulater.Unbind">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.BackKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.BindingMouseButtons">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.DownKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.FrontKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.HorizontalRotationSpeed">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.LeftKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.RightKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.StepLength">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.UpKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FirstPerspectiveManipulater.VerticalRotationSpeed">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.CameraType">
            <summary>
            摄像机透视类型
            </summary>
        </member>
        <member name="F:CSharpGL.CameraType.Perspecitive">
            <summary>
            透视
            </summary>
        </member>
        <member name="F:CSharpGL.CameraType.Ortho">
            <summary>
            正交
            </summary>
        </member>
        <member name="T:CSharpGL.ClearColorState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ClearColorState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ClearColorState.#ctor(System.Drawing.Color,System.Single)">
             <summary>
            
             </summary>
             <param name="clearColor"></param>
             <param name="alpha">Ranges between [0, 1.0].</param>
        </member>
        <member name="M:CSharpGL.ClearColorState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ClearColorState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ClearColorState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ClearColorState.ClearColor">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ClearColorState.Alpha">
            <summary>
            Alpha value.
            </summary>
        </member>
        <member name="T:CSharpGL.GLStateList">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ViewportState">
            <summary>
            set and reset viewport using glViewport();
            </summary>
        </member>
        <member name="M:CSharpGL.ViewportState.#ctor">
            <summary>
            set and reset viewport using glViewport();
            </summary>
        </member>
        <member name="M:CSharpGL.ViewportState.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            set and reset viewport using glViewport();
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:CSharpGL.ViewportState.#ctor(System.Int32[])">
            <summary>
            set and reset viewport using glViewport();
            </summary>
            <param name="viewport"></param>
        </member>
        <member name="M:CSharpGL.ViewportState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ViewportState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ViewportState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewportState.X">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewportState.Y">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewportState.Width">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ViewportState.Height">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.UIText">
            <summary>
            使用Default字体在一块区域渲染文字。
            UIText is a simple label similar to System.Windows.Forms.Label.
            </summary>
        </member>
        <member name="M:CSharpGL.UIText.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.UIText.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.UIText.#ctor(System.Windows.Forms.AnchorStyles,System.Windows.Forms.Padding,System.Drawing.Size,System.Int32,System.Int32,CSharpGL.IFontTexture,System.Int32)">
             <summary>
            
             </summary>
             <param name="anchor"></param>
             <param name="margin"></param>
             <param name="size"></param>
             <param name="zNear"></param>
             <param name="zFar"></param>
             <param name="fontTexture"></param>
             <param name="maxCharCount"></param>
        </member>
        <member name="M:CSharpGL.UIText.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.UIText.Text">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIText.BlendState">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.UIText.TextColor">
            <summary>
            Text's color.
            </summary>
        </member>
        <member name="T:CSharpGL.SceneRootUI">
            <summary>
            root UI for opengl.
            </summary>
        </member>
        <member name="M:CSharpGL.SceneRootUI.#ctor(System.Int32,System.Int32)">
            <summary>
            root UI for opengl.
            </summary>
            <param name="zNear"></param>
            <param name="zFar"></param>
        </member>
        <member name="M:CSharpGL.SceneRootUI.DoInitialize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.SceneRootUI.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="T:CSharpGL.ILayoutHelper">
            <summary>
            layout controls in OpenGL canvas.
            </summary>
        </member>
        <member name="F:CSharpGL.ILayoutHelper.leftRightAnchor">
            <summary>
            leftRightAnchor = (AnchorStyles.Left | AnchorStyles.Right);
            </summary>
        </member>
        <member name="F:CSharpGL.ILayoutHelper.topBottomAnchor">
            <summary>
            topBottomAnchor = (AnchorStyles.Top | AnchorStyles.Bottom);
            </summary>
        </member>
        <member name="M:CSharpGL.ILayoutHelper.GetOrthoProjection(CSharpGL.UIRenderer)">
            <summary>
            Gets projection matrix for <see cref="T:CSharpGL.ILayout`1"/> to layout controls in OpenGL canvas.
            </summary>
            <param name="uiRenderer"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ILayoutHelper.Layout``1(CSharpGL.ILayout{``0})">
            <summary>
            layout controls in OpenGL canvas.
            <para>This coordinate system is as below.</para>
            <para>   /\ y</para>
            <para>   |</para>
            <para>   |</para>
            <para>   |</para>
            <para>   |</para>
            <para>   |</para>
            <para>   |-----------------&gt;x</para>
            <para>(0, 0)</para>
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:CSharpGL.ILayoutHelper.NonRootNodeLayout``1(CSharpGL.ILayout{``0},CSharpGL.ILayout{``0})">
            <summary>
            Gets <paramref name="currentNode"/>'s location and size according to its state and parent's information.
            </summary>
            <param name="currentNode"></param>
            <param name="parent"></param>
        </member>
        <member name="T:CSharpGL.UIAxis">
            <summary>
            opengl UI for Axis
            </summary>
        </member>
        <member name="M:CSharpGL.UIAxis.#ctor(System.Windows.Forms.AnchorStyles,System.Windows.Forms.Padding,System.Drawing.Size,System.Int32)">
            <summary>
            opengl UI for Axis
            </summary>
            <param name="anchor"></param>
            <param name="margin"></param>
            <param name="size"></param>
            <param name="partCount">24 as default.</param>
        </member>
        <member name="M:CSharpGL.UIAxis.DoRender(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="T:CSharpGL.UniformBoolArray">
            <summary>
            uniform bool variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBoolArray.#ctor(System.String,System.Int32)">
            <summary>
            uniform bool variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformBoolArray.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformFloatArray">
            <summary>
            uniform float variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformFloatArray.#ctor(System.String,System.Int32)">
            <summary>
            uniform float variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformFloatArray.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformMat2Array">
            <summary>
            uniform mat2 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformMat2Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform mat2 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformMat2Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformMat3Array">
            <summary>
            uniform mat3 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformMat3Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform mat3 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformMat3Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformMat4Array">
            <summary>
            uniform mat4 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformMat4Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform mat4 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformMat4Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformSamplerArray">
            <summary>
            uniform samplerXD variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformSamplerArray.#ctor(System.String,System.Int32)">
            <summary>
            uniform samplerXD variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformSamplerArray.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformVec2Array">
            <summary>
            uniform vec2 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVec2Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec2 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformVec2Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformVec3Array">
            <summary>
            uniform vec3 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVec3Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec3 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformVec3Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformVec4Array">
            <summary>
            uniform vec4 variable[10];
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVec4Array.#ctor(System.String,System.Int32)">
            <summary>
            uniform vec4 variable[10];
            </summary>
            <param name="varName"></param>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.UniformVec4Array.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.InnerPickableRenderer">
            <summary>
            Renderer that supports color-coded rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
             <summary>
             Renderer that supports color-coded rendering.
             </summary>
             <param name="model">model data that can be transfermed into OpenGL Buffer's pointer.</param>
             <param name="shaderCodes">All shader codes needed for this renderer.</param>
             <param name="attributeMap">Mapping relations between 'in' variables in vertex shader in <paramref name="shaderCodes"/> and buffers in <paramref name="model"/>.</param>
             <param name="positionNameInIBufferable">Name of buffer that describes model's position.</param>
            <param name="switches">OpenGL switches.</param>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.Render4Picking(CSharpGL.RenderEventArgs,CSharpGL.IndexBuffer)">
            <summary>
            render with specified index buffer.
            </summary>
            <param name="arg"></param>
            <param name="temporaryIndexBuffer"></param>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.MovePositions(System.Drawing.Point,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4,System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            Move vertexes' position accroding to difference on screen.
            <para>根据<paramref name="differenceOnScreen"/>来修改指定索引处的顶点位置。</para>
            </summary>
            <param name="differenceOnScreen"></param>
            <param name="viewMatrix"></param>
            <param name="projectionMatrix"></param>
            <param name="viewport"></param>
            <param name="positionIndexes"></param>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.MovePositions(System.Drawing.Point,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4,System.UInt32[])">
            <summary>
            Move vertexes' position accroding to difference on screen.
            <para>根据<paramref name="differenceOnScreen"/>来修改指定索引处的顶点位置。</para>
            </summary>
            <param name="differenceOnScreen"></param>
            <param name="viewMatrix"></param>
            <param name="projectionMatrix"></param>
            <param name="viewport"></param>
            <param name="positionIndexes"></param>
        </member>
        <member name="F:CSharpGL.InnerPickableRenderer.uniformmMVP4Picking">
            <summary>
            uniform mat4 VMP; (in shader)
            </summary>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.Render4Picking(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.GetVertexCount">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.GetPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.InnerPickableRenderer.Render4InnerPicking(CSharpGL.RenderEventArgs,CSharpGL.IndexBuffer)">
            <summary>
            在此Buffer中的图元进行N选1
            select a primitive geometry(point, line, triangle, quad, polygon) from points/lines/triangles/quads/polygons in this renderer.
            </summary>
            <param name="arg"></param>
            <param name="indexBuffer">indicates the primitive to pick a line from.</param>
        </member>
        <member name="P:CSharpGL.InnerPickableRenderer.PositionNameInIBufferable">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.InnerPickableRenderer.PositionBuffer">
            <summary>
            Position buffer pointer.
            </summary>
        </member>
        <member name="P:CSharpGL.InnerPickableRenderer.PickingBaseId">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.InnerPickableRendererFactory">
            <summary>
            根据<see cref="T:CSharpGL.IndexBuffer"/>的具体类型获取一个<see cref="T:CSharpGL.PickableRenderer"/>
            </summary>
        </member>
        <member name="M:CSharpGL.InnerPickableRendererFactory.GetRenderer(CSharpGL.IBufferable,CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
            <summary>
            根据<see cref="T:CSharpGL.IndexBuffer"/>的具体类型获取一个<see cref="T:CSharpGL.PickableRenderer"/>
            </summary>
            <param name="model"></param>
            <param name="attributeMap"></param>
            <param name="positionNameInIBufferable"></param>
            <param name="switches"></param>
            <returns></returns>
        </member>
        <member name="F:CSharpGL.FormPropertyGridEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CSharpGL.FormPropertyGridEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CSharpGL.FormPropertyGridEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CSharpGL.PropertyGridEditor">
            <summary>
            For any single object.
            </summary>
        </member>
        <member name="T:CSharpGL.ScriptList">
            <summary>
            A list of script.
            </summary>
        </member>
        <member name="T:CSharpGL.ComponentList`2">
            <summary>
            a list of components who bind to the specified binding object.
            </summary>
            <typeparam name="TBinding"></typeparam>
            <typeparam name="TComponent"></typeparam>
        </member>
        <member name="M:CSharpGL.ComponentList`2.#ctor(`0)">
            <summary>
            a list of components who bind to the specified binding object.
            </summary>
            <param name="bindingObject"></param>
        </member>
        <member name="M:CSharpGL.ComponentList`2.IndexOf(`1)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ComponentList`2.Insert(System.Int32,`1)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="item"></param>
        </member>
        <member name="M:CSharpGL.ComponentList`2.RemoveAt(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
        </member>
        <member name="M:CSharpGL.ComponentList`2.Add(`1)">
             <summary>
            
             </summary>
             <param name="item"></param>
        </member>
        <member name="M:CSharpGL.ComponentList`2.AddRange(System.Collections.Generic.IEnumerable{`1})">
             <summary>
            
             </summary>
             <param name="items"></param>
        </member>
        <member name="M:CSharpGL.ComponentList`2.Clear">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ComponentList`2.Contains(`1)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ComponentList`2.CopyTo(`1[],System.Int32)">
             <summary>
            
             </summary>
             <param name="array"></param>
             <param name="arrayIndex"></param>
        </member>
        <member name="M:CSharpGL.ComponentList`2.Remove(`1)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ComponentList`2.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="E:CSharpGL.ComponentList`2.ItemAdded">
             <summary>
            
             </summary>
        </member>
        <member name="E:CSharpGL.ComponentList`2.ItemRemoved">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ComponentList`2.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ComponentList`2.Count">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ComponentList`2.IsReadOnly">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ScriptList.#ctor(CSharpGL.SceneObject)">
            <summary>
            A list of script.
            </summary>
            <param name="bindingObject"></param>
        </member>
        <member name="T:CSharpGL.Script">
            <summary>
            Base type of all scripts.
            </summary>
        </member>
        <member name="T:CSharpGL.IBindingObject`1">
             <summary>
            
             </summary>
             <typeparam name="TBinding"></typeparam>
        </member>
        <member name="P:CSharpGL.IBindingObject`1.BindingObject">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Script.#ctor(CSharpGL.SceneObject)">
            <summary>
            Base type of all scripts.
            </summary>
            <param name="bindingObject"></param>
        </member>
        <member name="M:CSharpGL.Script.DoUpdate">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Script.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.Script.Name">
            <summary>
            name.
            </summary>
        </member>
        <member name="P:CSharpGL.Script.Id">
            <summary>
            为便于调试而设置的ID值，没有应用意义。
            <para>Only for debugging.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.Script.BindingObject">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.NoisyArray`1">
            <summary>
            Invoke ItemUpdated event when item is updated.
            </summary>
        </member>
        <member name="M:CSharpGL.NoisyArray`1.#ctor(System.Int32)">
            <summary>
            Invoke ItemUpdated event when item is updated.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:CSharpGL.NoisyArray`1.#ctor(`0[])">
            <summary>
            Invoke ItemUpdated event when item is updated.
            </summary>
            <param name="array"></param>
        </member>
        <member name="P:CSharpGL.NoisyArray`1.Array">
            <summary>
            Array.
            </summary>
        </member>
        <member name="E:CSharpGL.NoisyArray`1.ItemUpdated">
            <summary>
            Invoked when a new value is set for an item.
            </summary>
        </member>
        <member name="P:CSharpGL.NoisyArray`1.Item(System.Int32)">
            <summary>
            Gets or sets item's value.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.NoisyArray`1.Length">
            <summary>
            This array's length.
            </summary>
        </member>
        <member name="T:CSharpGL.NoisyArrayEventArgs`1">
            <summary>
            <see cref="T:CSharpGL.NoisyArray`1"/>'s event args.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CSharpGL.NoisyArrayEventArgs`1.#ctor(`0,System.Int32)">
            <summary>
            <see cref="T:CSharpGL.NoisyArray`1"/>'s event args.
            </summary>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="P:CSharpGL.NoisyArrayEventArgs`1.Value">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.NoisyArrayEventArgs`1.Index">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TypeHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.TypeHelper.CreateInstance(System.Type)">
            <summary>
            Create an instance of specified <paramref name="type"/>.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.AddComponentEventArgs`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:CSharpGL.AddComponentEventArgs`1.#ctor(`0)">
             <summary>
            
             </summary>
             <param name="newItem"></param>
        </member>
        <member name="M:CSharpGL.AddComponentEventArgs`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.AddComponentEventArgs`1.NewItem">
            <summary>
            newly added item.
            </summary>
        </member>
        <member name="T:CSharpGL.RemoveComponentEventArgs`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:CSharpGL.RemoveComponentEventArgs`1.#ctor(`0)">
             <summary>
            
             </summary>
             <param name="removedItem"></param>
        </member>
        <member name="M:CSharpGL.RemoveComponentEventArgs`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.RemoveComponentEventArgs`1.RemovedItem">
            <summary>
            removed item.
            </summary>
        </member>
        <member name="T:CSharpGL.Pixel">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Pixel.r">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Pixel.g">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Pixel.b">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Pixel.a">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Pixel.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
             <summary>
            
             </summary>
             <param name="r"></param>
             <param name="g"></param>
             <param name="b"></param>
             <param name="a"></param>
        </member>
        <member name="M:CSharpGL.Pixel.ToColor">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Pixel.ToStageVertexId">
            <summary>
            Gets stageVertexID from coded color.
            The stageVertexID is the last vertex that constructs the primitive.
            see http://www.cnblogs.com/bitzhuwei/p/modern-opengl-picking-primitive-in-VBO-2.html
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.Pixel.IsWhite">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Pixel.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.Tuple`2">
             <summary>
            
             </summary>
             <typeparam name="T1"></typeparam>
             <typeparam name="T2"></typeparam>
        </member>
        <member name="M:CSharpGL.Tuple`2.#ctor(`0,`1)">
             <summary>
            
             </summary>
             <param name="item1"></param>
             <param name="item2"></param>
        </member>
        <member name="P:CSharpGL.Tuple`2.Item1">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`2.Item2">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Tuple`3">
             <summary>
            
             </summary>
             <typeparam name="T1"></typeparam>
             <typeparam name="T2"></typeparam>
             <typeparam name="T3"></typeparam>
        </member>
        <member name="M:CSharpGL.Tuple`3.#ctor(`0,`1,`2)">
             <summary>
            
             </summary>
             <param name="item1"></param>
             <param name="item2"></param>
             <param name="item3"></param>
        </member>
        <member name="P:CSharpGL.Tuple`3.Item1">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`3.Item2">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`3.Item3">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Tuple`4">
             <summary>
            
             </summary>
             <typeparam name="T1"></typeparam>
             <typeparam name="T2"></typeparam>
             <typeparam name="T3"></typeparam>
             <typeparam name="T4"></typeparam>
        </member>
        <member name="M:CSharpGL.Tuple`4.#ctor(`0,`1,`2,`3)">
             <summary>
            
             </summary>
             <param name="item1"></param>
             <param name="item2"></param>
             <param name="item3"></param>
             <param name="item4"></param>
        </member>
        <member name="P:CSharpGL.Tuple`4.Item1">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`4.Item2">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`4.Item3">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`4.Item4">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Tuple`5">
             <summary>
            
             </summary>
             <typeparam name="T1"></typeparam>
             <typeparam name="T2"></typeparam>
             <typeparam name="T3"></typeparam>
             <typeparam name="T4"></typeparam>
             <typeparam name="T5"></typeparam>
        </member>
        <member name="M:CSharpGL.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
             <summary>
            
             </summary>
             <param name="item1"></param>
             <param name="item2"></param>
             <param name="item3"></param>
             <param name="item4"></param>
             <param name="item5"></param>
        </member>
        <member name="P:CSharpGL.Tuple`5.Item1">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`5.Item2">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`5.Item3">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`5.Item4">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`5.Item5">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Tuple`6">
             <summary>
            
             </summary>
             <typeparam name="T1"></typeparam>
             <typeparam name="T2"></typeparam>
             <typeparam name="T3"></typeparam>
             <typeparam name="T4"></typeparam>
             <typeparam name="T5"></typeparam>
             <typeparam name="T6"></typeparam>
        </member>
        <member name="M:CSharpGL.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
             <summary>
            
             </summary>
             <param name="item1"></param>
             <param name="item2"></param>
             <param name="item3"></param>
             <param name="item4"></param>
             <param name="item5"></param>
             <param name="item6"></param>
        </member>
        <member name="P:CSharpGL.Tuple`6.Item1">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`6.Item2">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`6.Item3">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`6.Item4">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`6.Item5">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`6.Item6">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Tuple`7">
             <summary>
            
             </summary>
             <typeparam name="T1"></typeparam>
             <typeparam name="T2"></typeparam>
             <typeparam name="T3"></typeparam>
             <typeparam name="T4"></typeparam>
             <typeparam name="T5"></typeparam>
             <typeparam name="T6"></typeparam>
             <typeparam name="T7"></typeparam>
        </member>
        <member name="M:CSharpGL.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
             <summary>
            
             </summary>
             <param name="item1"></param>
             <param name="item2"></param>
             <param name="item3"></param>
             <param name="item4"></param>
             <param name="item5"></param>
             <param name="item6"></param>
             <param name="item7"></param>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item1">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item2">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item3">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item4">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item5">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item6">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.Tuple`7.Item7">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.AssemblyHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.AssemblyHelper.GetAllDerivedTypes(System.Type,System.Func{System.Type,System.Boolean})">
            <summary>
            Get all derived non-abstract types of specified base type from all loaded assemblies.
            </summary>
            <param name="baseType"></param>
            <param name="addtionalFilter">addtional filter.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.AssemblyHelper.GetAssemblies(System.String)">
            <summary>
            Get all assemblies referenced by specified <paramref name="asmFilename"/>(self included) recursively.
            </summary>
            <param name="asmFilename"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.ColorHelper">
            <summary>
            Helper class for array.
            </summary>
        </member>
        <member name="M:CSharpGL.ColorHelper.ToColor(CSharpGL.vec3)">
            <summary>
            (x, y, z) equals Color.FromArgb(255, x * 255, y * 255, z * 255);
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ColorHelper.ToColor(CSharpGL.vec4)">
            <summary>
            (x, y, z, w) equals Color.FromArgb(w * 255, x * 255, y * 255, z * 255);
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ColorHelper.ToVec3(System.Drawing.Color)">
            <summary>
            (x, y, z) equals Color.FromArgb(255, x * 255, y * 255, z * 255);
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ColorHelper.ToVec4(System.Drawing.Color)">
            <summary>
            (x, y, z, w) equals Color.FromArgb(w * 255, x * 255, y * 255, z * 255);
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.DoubleHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DoubleHelper.ToShortString(System.Double)">
            <summary>
            获取float类型的简短描述。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.DumpTreeToText">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DumpTreeToText.DumpToText``1(CSharpGL.ITreeNode{``0})">
            <summary>
            像DOS的树状展示文件夹结构一样展示树结构。
            Display tree similar to 'tree' command in DOS.
            </summary>
            <param name="chunk"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.ITreeNodeHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ITreeNodeHelper.Traverse``1(CSharpGL.ITreeNode{``0},CSharpGL.TraverseOrder)">
            <summary>
            traverse every item in the tree node recursively.
            <para>Use this when <paramref name="treeNode"/>'s structure is flat.</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="treeNode"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ITreeNodeHelper.PostorderTraverse``1(CSharpGL.ITreeNode{``0})">
            <summary>
            traverse every item in the tree node in post-order.
            <para>Use this when <paramref name="treeNode"/>'s structure is flat.</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="treeNode"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ITreeNodeHelper.PreorderTraverse``1(CSharpGL.ITreeNode{``0})">
            <summary>
            traverse every item in the tree node in pre-order.
            <para>Use this when <paramref name="treeNode"/>'s structure is flat.</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="treeNode"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.TraverseOrder">
            <summary>
            traverse order.
            </summary>
        </member>
        <member name="F:CSharpGL.TraverseOrder.Pre">
            <summary>
            pre-order traverse.
            </summary>
        </member>
        <member name="F:CSharpGL.TraverseOrder.Post">
            <summary>
            post-order traverse.
            </summary>
        </member>
        <member name="T:CSharpGL.UpdatingRecord">
            <summary>
            Records time when is a property is updated and uploaded.
            </summary>
        </member>
        <member name="F:CSharpGL.UpdatingRecord.updateTicks">
            <summary>
            The last time that a property is updated in client application.
            </summary>
        </member>
        <member name="F:CSharpGL.UpdatingRecord.uploadTicks">
            <summary>
            The first time that a property is uploaded to OpenGL.
            </summary>
        </member>
        <member name="M:CSharpGL.UpdatingRecord.#ctor(System.Boolean)">
            <summary>
            Records time when is a property is updated and uploaded.
            </summary>
            <param name="marking">mark as initial state.</param>
        </member>
        <member name="M:CSharpGL.UpdatingRecord.Mark">
            <summary>
            Mark a property as updated(thus needs to be uploaded to OpenGL).
            </summary>
        </member>
        <member name="M:CSharpGL.UpdatingRecord.CancelMark">
            <summary>
            Mark a property as uploaded(thus not need to upload it to OpenGL again).
            </summary>
        </member>
        <member name="M:CSharpGL.UpdatingRecord.IsMarked">
            <summary>
            Indicates whether a property is needed to be uploaded to OpenGL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.UpdatingRecord.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.GLCanvas">
            <summary>
            可执行OpenGL渲染的控件。
            </summary>
        </member>
        <member name="F:CSharpGL.GLCanvas.renderContext">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GLCanvas.designMode">
            <summary>
            indicates whether the control is in design mode.
            </summary>
        </member>
        <member name="M:CSharpGL.GLCanvas.#ctor">
            <summary>
            Creats render context and supports OpenGL rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.GLCanvas.CreateRenderContext">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLCanvas.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLCanvas.DesignModeRendering">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GLCanvas.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLCanvas.OnSizeChanged(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLCanvas.OnHandleDestroyed(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:CSharpGL.GLCanvas.DoOpenGLDraw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Call this function in derived classes to do the OpenGL Draw event.
            </summary>
        </member>
        <member name="M:CSharpGL.GLCanvas.Repaint">
            <summary>
            repaint this canvas' content.
            </summary>
        </member>
        <member name="F:CSharpGL.GLCanvas.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:CSharpGL.GLCanvas.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:CSharpGL.GLCanvas.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:CSharpGL.GLCanvas.FPS">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.GLCanvas.RenderTrigger">
            <summary>
            Gets or sets the render trigger.
            </summary>
            <value>
            The render trigger.
            </value>
        </member>
        <member name="P:CSharpGL.GLCanvas.TimerTriggerInterval">
            <summary>
            Interval between two rendering passes. Must be greater than 0.(in milliseconds)
            </summary>
        </member>
        <member name="E:CSharpGL.GLCanvas.OpenGLDraw">
            <summary>
            Occurs when OpenGL drawing should be performed.
            </summary>
        </member>
        <member name="T:CSharpGL.DIBSection">
            <summary>
            device-independent bitmap
            </summary>
        </member>
        <member name="M:CSharpGL.DIBSection.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DIBSection.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.DIBSection.Create(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the specified width.
            </summary>
            <param name="deviceContext"></param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitCount">The bit count.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.DIBSection.Resize(System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes the section.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitCount">The bit count.</param>
        </member>
        <member name="M:CSharpGL.DIBSection.SetPixelFormat(System.IntPtr,System.Int32)">
            <summary>
            This function sets the pixel format of the underlying bitmap.
            </summary>
            <param name="hDC"></param>
            <param name="bitCount">The bitcount.</param>
        </member>
        <member name="M:CSharpGL.DIBSection.DestroyBitmap">
            <summary>
            Destroys this instance.
            </summary>
        </member>
        <member name="F:CSharpGL.DIBSection.bits">
            <summary>
            The bits.
            </summary>
        </member>
        <member name="P:CSharpGL.DIBSection.MemoryDeviceContext">
            <summary>
            parentDC
            </summary>
        </member>
        <member name="P:CSharpGL.DIBSection.HBitmap">
            <summary>
            Gets the handle to the bitmap.
            </summary>
            <value>The handle to the bitmap.</value>
        </member>
        <member name="P:CSharpGL.DIBSection.Bits">
            <summary>
            Gets the bits.
            </summary>
        </member>
        <member name="P:CSharpGL.DIBSection.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:CSharpGL.DIBSection.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:CSharpGL.RenderContext">
             <summary>
            
             </summary>
            <summary>
            All information for creating render context and device context.
            </summary>
        </member>
        <member name="M:CSharpGL.RenderContext.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.RenderContext.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.RenderContext.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.RenderContext.Create(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Creates the render context provider. Must also create the OpenGL extensions.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitDepth">The bit depth.</param>
            <param name="parameter">The extra parameter.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.RenderContext.SetDimensions(System.Int32,System.Int32)">
            <summary>
            Sets the dimensions of the render context provider.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:CSharpGL.RenderContext.MakeCurrent">
            <summary>
            Makes the render context current.
            </summary>
        </member>
        <member name="M:CSharpGL.RenderContext.Blit(System.IntPtr)">
            <summary>
            Blit the rendered data to the supplied device context.
            </summary>
            <param name="deviceContext">The HDC.</param>
        </member>
        <member name="P:CSharpGL.RenderContext.RenderContextHandle">
            <summary>
            Gets the render context handle.
            </summary>
        </member>
        <member name="P:CSharpGL.RenderContext.DeviceContextHandle">
            <summary>
            Gets the device context handle.
            </summary>
        </member>
        <member name="P:CSharpGL.RenderContext.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:CSharpGL.RenderContext.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:CSharpGL.RenderContext.BitDepth">
            <summary>
            Gets or sets the bit depth.
            </summary>
            <value>The bit depth.</value>
        </member>
        <member name="T:CSharpGL.RenderTrigger">
            <summary>
            The RenderingMode - specifies how and when rendering
            will occur in an OpenGL control.
            </summary>
        </member>
        <member name="F:CSharpGL.RenderTrigger.TimerBased">
            <summary>
            The Default RenderingMode, TimerBased. This mode means that
            a timer will be set up based on the FPS property of the control.
            </summary>
        </member>
        <member name="F:CSharpGL.RenderTrigger.Manual">
            <summary>
            Rendering must be performed manually by using the DoRender function.
            </summary>
        </member>
        <member name="T:CSharpGL.GlyphInfo">
            <summary>
            绘制一个字符所需要的所有信息
            </summary>
        </member>
        <member name="F:CSharpGL.GlyphInfo.Default">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GlyphInfo.xoffset">
            <summary>
            此字符的字形在纹理的横向偏移量（左上角）
            </summary>
        </member>
        <member name="F:CSharpGL.GlyphInfo.yoffset">
            <summary>
            此字符的字形在纹理的纵向偏移量（左上角）
            </summary>
        </member>
        <member name="F:CSharpGL.GlyphInfo.width">
            <summary>
            此字符的字形宽度
            </summary>
        </member>
        <member name="F:CSharpGL.GlyphInfo.height">
            <summary>
            此字符的字形高度
            </summary>
        </member>
        <member name="M:CSharpGL.GlyphInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制一个字符所需要的所有信息
            </summary>
            <param name="xoffset">此字符的字形在纹理的横向偏移量（左上角）</param>
            <param name="yoffset">此字符的字形在纹理的纵向偏移量（左上角）</param>
            <param name="width">此字符的字形宽度</param>
            <param name="height">此字符的字形高度</param>
        </member>
        <member name="M:CSharpGL.GlyphInfo.ToRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.GlyphInfo.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GlyphInfo.Clone">
            <summary>
            clone this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexLineSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexLineInQuadSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexLineInTriangleSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexLineInPolygonSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.OneIndexRenderer">
            <summary>
            用glDrawElements进行渲染。
            </summary>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
             <summary>
             用glDrawElements进行渲染。
             </summary>
             <param name="model">一种渲染方式</param>
             <param name="shaderCodes">各种类型的shader代码</param>
             <param name="attributeMap">关联<paramref name="shaderCodes"/>和<paramref name="shaderCodes"/>中的属性</param>
             <param name="positionNameInIBufferable">描述顶点位置信息的buffer的名字</param>
            <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.GetLastIndexId(CSharpGL.RenderEventArgs,System.Collections.Generic.List{CSharpGL.RecognizedPrimitiveInfo},System.Int32,System.Int32)">
            <summary>
            在所有可能的图元（lastVertexId匹配）中，
            逐个测试，找到最接近摄像机的那个图元，
            返回此图元的最后一个索引在<see cref="P:CSharpGL.OneIndexRenderer.IndexBuffer"/>中的索引（位置）。
            </summary>
            <param name="arg"></param>
            <param name="primitiveInfoList"></param>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.AssembleIndexBuffer(CSharpGL.RecognizedPrimitiveInfo,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.DrawMode,CSharpGL.OneIndexBuffer@,System.UInt32@,System.UInt32@)">
            <summary>
            将共享点前移，然后重新渲染、拾取
            </summary>
            <param name="recognizedPrimitiveIndex0"></param>
            <param name="recognizedPrimitiveIndex1"></param>
            <param name="drawMode"></param>
            <param name="oneIndexBuffer"></param>
            <param name="lastIndex0"></param>
            <param name="lastIndex1"></param>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.ArrangeIndexes(CSharpGL.RecognizedPrimitiveInfo,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.DrawMode,System.UInt32@,System.UInt32@)">
            <summary>
            将共享点前移，构成2个图元组成的新的小小的索引。
            </summary>
            <param name="recognizedPrimitiveIndex0"></param>
            <param name="recognizedPrimitiveIndex1"></param>
            <param name="drawMode"></param>
            <param name="lastIndex0"></param>
            <param name="lastIndex1"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.GetPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.SearchPoint(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32,System.UInt32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexPointSearcher)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="primitiveInfo"></param>
             <param name="searcher"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.SearchLine(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32,System.UInt32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexLineSearcher)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="primitiveInfo"></param>
             <param name="searcher"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.PickWhateverItIs(CSharpGL.RenderEventArgs,System.UInt32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.PickingGeometryType)">
            <summary>
            是三角形，就pick一个三角形；是四边形，就pick一个四边形，是多边形，就pick一个多边形。
            </summary>
            <param name="arg"></param>
            <param name="stageVertexId"></param>
            <param name="primitiveInfo"></param>
            <param name="typeOfMode"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.OnPrimitiveTest(System.UInt32,CSharpGL.DrawMode)">
            <summary>
            I don't know how to implement this method in a high effitiency way.
            So keep it like this.
            Also, why would someone use glDrawElements() when rendering GL_POINTS?
            </summary>
            <param name="lastVertexId"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.GetLastIndexIdOfPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="lastVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.Pick(CSharpGL.RenderEventArgs,CSharpGL.OneIndexBuffer,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="twoPrimitivesIndexBuffer"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexRenderer.GetLastIndexIdList(CSharpGL.RenderEventArgs,System.UInt32)">
            <summary>
            遍历以<paramref name="lastVertexId"/>为最后一个顶点的图元，
            瞄准每个图元的索引（例如1个三角形有3个索引）中的最后一个索引，
            将此索引在<see cref="P:CSharpGL.OneIndexRenderer.IndexBuffer"/>中的索引（位置）收集起来。
            </summary>
            <param name="arg"></param>
            <param name="lastVertexId"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.OneIndexRenderer.IndexBuffer">
            <summary>
            此渲染器的索引Buffer。
            </summary>
        </member>
        <member name="M:CSharpGL.OneIndexPointSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexPointInPolygonSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexPointInQuadSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.OneIndexPointInTriangleSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,CSharpGL.RecognizedPrimitiveInfo,CSharpGL.OneIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="primitiveInfo"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInPolygonSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInQuadSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInQuadStripSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInTriangleFanSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInTrianglesAdjacencySearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInTriangleSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
            <summary>
            在三角形图元中拾取指定位置的Point
            </summary>
            <param name="arg">渲染参数</param>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <param name="lastVertexId">三角形图元的最后一个顶点</param>
            <param name="modernRenderer">目标Renderer</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInTriangleStripAdjacencySearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexPointInTriangleStripSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.ZeroIndexRenderer">
            <summary>
            用glDrarArrays进行渲染。
            </summary>
        </member>
        <member name="M:CSharpGL.ZeroIndexRenderer.#ctor(CSharpGL.IBufferable,CSharpGL.ShaderCode[],CSharpGL.AttributeMap,System.String,CSharpGL.GLState[])">
             <summary>
             用glDrarArrays进行渲染。
             </summary>
             <param name="model">一种渲染方式</param>
             <param name="shaderCodes">各种类型的shader代码</param>
             <param name="attributeMap">关联<paramref name="model"/>和<paramref name="shaderCodes"/>中的属性</param>
             <param name="positionNameInIBufferable">描述顶点位置信息的buffer的名字</param>
            <param name="switches"></param>
        </member>
        <member name="M:CSharpGL.ZeroIndexRenderer.GetPickedGeometry(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexRenderer.SearchPoint(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexPointSearcher)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="stageVertexId"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="searcher"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexRenderer.SearchLine(CSharpGL.RenderEventArgs,System.UInt32,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexLineSearcher)">
            <summary>
            Search line in triangles/triangle_strip/triangle_fan/
            triangles_adjacency/triangle_strip_adjacency/
            quads/quad_strip/polygon
            </summary>
            <param name="arg"></param>
            <param name="stageVertexId"></param>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <param name="lastVertexId"></param>
            <param name="searcher"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexRenderer.OnPrimitiveTest(System.UInt32,CSharpGL.DrawMode)">
            <summary>
            现在，已经判定了鼠标在某个点上。
            我需要判定此点是否出现在图元上。
            now that I know the mouse is picking on some point,
            I need to make sure that point should appear.
            </summary>
            <param name="lastVertexId"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.ZeroIndexRenderer.IndexBuffer">
            <summary>
            此渲染器的索引Buffer。
            </summary>
        </member>
        <member name="T:CSharpGL.ErrorCode">
            <summary>
            Error Code
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.NoError">
            <summary>
            自上次调用glGetError以来没有错误。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.InvalidEnum">
            <summary>
            枚举参数不合法。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.InvalidValue">
            <summary>
            值参数不合法。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.InvalidOperation">
            <summary>
            一个指令的状态对指令的参数不合法。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.StackOverflow">
            <summary>
            压栈操作造成栈上溢(Overflow)。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.StackUnderflow">
            <summary>
            弹栈操作时栈在最低点（译注：即栈下溢(Underflow)）。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.OutOfMemory">
            <summary>
            内存调用操作无法调用（足够的）内存。
            </summary>
        </member>
        <member name="F:CSharpGL.ErrorCode.InvalidFramebufferOperation">
            <summary>
            读取或写入一个不完整的帧缓冲。
            </summary>
        </member>
        <member name="T:CSharpGL.MapBufferRangeAccess">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferRangeAccess.MapReadBit">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferRangeAccess.MapWriteBit">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferRangeAccess.MapInvalidateRangeBit">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferRangeAccess.MapInvalidateBufferBit">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferRangeAccess.MapFlushExplicitBit">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferRangeAccess.MapUnsynchronizedBit">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PolygonOffset">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PolygonOffset.Factor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PolygonOffset.Units">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PolygonOffset.Point">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PolygonOffset.Line">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PolygonOffset.Fill">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.FontBitmapEntry">
            <summary>
            A FontBitmap entry contains the details of a font face.
            </summary>
        </member>
        <member name="T:CSharpGL.FontBitmaps">
            <summary>
            This class wraps the functionality of the wglUseFontBitmaps function to
            allow straightforward rendering of text.
            </summary>
        </member>
        <member name="F:CSharpGL.FontBitmaps.fontBitmapEntries">
            <summary>
            Cache of font bitmap enties.
            </summary>
        </member>
        <member name="M:CSharpGL.FontBitmaps.DrawText(System.Int32,System.Int32,System.Drawing.Color,System.String,System.Single,System.String)">
            <summary>
            Draws the text.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
            <param name="faceName"></param>
            <param name="fontSize"></param>
            <param name="text"></param>
        </member>
        <member name="T:CSharpGL.ColorCodedPicking">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ColorCodedPicking.ReadStageVertexId(System.Int32,System.Int32)">
            <summary>
            Gets stage vertex id by color coded picking machanism.
            Note: left bottom is(0, 0). This is different from Winform's left top being (0, 0).
            </summary>
            <param name="x">target pixel position(Left Down is (0, 0)).</param>
            <param name="y">target pixel position(Left Down is (0, 0)).</param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.HighlightShaderHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightShaderHelper.GetHighlightShaderCode">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.HighlightShaderHelper.GetHighlightShaderProgram">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HighlightShaderHelper.vertexShader">
            <summary>
            vertex shader's cache.
            </summary>
        </member>
        <member name="F:CSharpGL.HighlightShaderHelper.fragmentShader">
            <summary>
            fragmente shader's cache.
            </summary>
        </member>
        <member name="M:CSharpGL.HighlightShaderHelper.GetShaderSource(CSharpGL.ShaderType)">
            <summary>
            Gets shader's source code for color coded picking.
            </summary>
            <param name="shaderType"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.PrimitiveRecognizer.Recognize(System.UInt32,System.IntPtr,CSharpGL.OneIndexBuffer)">
            <summary>
            识别出以<paramref name="lastVertexId"/>结尾的图元。
            </summary>
            <param name="lastVertexId"></param>
            <param name="pointer"></param>
            <param name="oneIndexBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.PrimitiveRecognizer.Recognize(System.UInt32,System.IntPtr,CSharpGL.OneIndexBuffer,System.UInt32)">
            <summary>
            识别出以<paramref name="lastVertexId"/>结尾的图元。
            <para>识别过程中要考虑排除PrimitiveRestartIndex</para>
            </summary>
            <param name="lastVertexId"></param>
            <param name="pointer"></param>
            <param name="oneIndexBuffer"></param>
            <param name="primitiveRestartIndex"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.Axis">
            <summary>
            an 3D axis
            </summary>
        </member>
        <member name="F:CSharpGL.Axis.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Axis.strColor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Axis.#ctor(System.Int32,System.Single)">
            <summary>
            an 3D axis
            </summary>
            <param name="partCount"></param>
            <param name="radius"></param>
        </member>
        <member name="M:CSharpGL.Axis.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Axis.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Axis.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Axis.ModelSize">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.AxisModel">
            <summary>
            3D坐标系
            </summary>
        </member>
        <member name="T:CSharpGL.BigDipper">
            <summary>
            北斗七星
            <para>使用<see cref="T:CSharpGL.ZeroIndexBuffer"/></para>
            </summary>
        </member>
        <member name="F:CSharpGL.BigDipper.position">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BigDipper.color">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BigDipper.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.BigDipper.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.BigDipper.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.BigDipper.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.BigDipper.Lengths">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Cube">
            <summary>
            Cube.
            http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_CubeModel.jpg
            <para>Uses <see cref="T:CSharpGL.OneIndexBuffer"/></para>
            </summary>
        </member>
        <member name="F:CSharpGL.Cube.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Cube.strColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Cube.strNormal">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Cube.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Cube.#ctor(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lengths"></param>
        </member>
        <member name="M:CSharpGL.Cube.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Cube.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Cube.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Cube.Lengths">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Sphere">
            <summary>
            Sphere.
            http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_sphere.jpg
            <para>Uses <see cref="T:CSharpGL.OneIndexBuffer"/></para>
            </summary>
        </member>
        <member name="F:CSharpGL.Sphere.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Sphere.strNormal">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Sphere.strColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Sphere.strUV">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Sphere.#ctor(System.Single,System.Int32,System.Int32)">
            <summary>
            一个球体的模型。
            </summary>
            <param name="radius"></param>
            <param name="latitudeParts">用纬线把地球切割为几块。</param>
            <param name="longitudeParts">用经线把地球切割为几块。</param>
        </member>
        <member name="M:CSharpGL.Sphere.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Sphere.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Sphere.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Sphere.Lengths">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Teapot">
            <summary>
            Teapot.
            <para>Uses <see cref="T:CSharpGL.OneIndexBuffer"/></para>
            </summary>
        </member>
        <member name="F:CSharpGL.Teapot.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Teapot.strColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Teapot.strNormal">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Teapot.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Teapot.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Teapot.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Teapot.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Teapot.Size">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.Tetrahedron">
            <summary>
            Tetrahedron.
            http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_tetrahedron.jpg
            <para>Uses <see cref="T:CSharpGL.OneIndexBuffer"/></para>
            </summary>
        </member>
        <member name="F:CSharpGL.Tetrahedron.strPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Tetrahedron.strColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.Tetrahedron.strNormal">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.Tetrahedron.GetVertexAttributeBuffer(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="bufferName"></param>
             <param name="varNameInShader"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Tetrahedron.GetIndexBuffer">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.Tetrahedron.UsesZeroIndexBuffer">
            <summary>
            Uses <see cref="T:CSharpGL.ZeroIndexBuffer"/> or <see cref="T:CSharpGL.OneIndexBuffer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.Tetrahedron.Lengths">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.BigDipperModel">
            <summary>
            北斗七星+北极星
            <para>Big Dipper and North Star</para>
            </summary>
        </member>
        <member name="T:CSharpGL.CubeModel">
            <summary>
            一个立方体的模型。
            http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_CubeModel.jpg
            </summary>
        </member>
        <member name="T:CSharpGL.SphereModel">
            <summary>
            一个球体的模型。
            http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_sphere.jpg
            </summary>
        </member>
        <member name="M:CSharpGL.SphereModel.#ctor(System.Single,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="radius"></param>
             <param name="latitudeParts">用纬线把地球切割为几块。</param>
             <param name="longitudeParts">用经线把地球切割为几块。</param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.TetrahedronModel">
            <summary>
            一个四面体的模型。
            http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_tetrahedron.jpg
            </summary>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInPolygonSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInQuadStripSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInQuadSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInTriangleFanSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInTrianglesAdjacencySearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInTriangleStripAdjacencySearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInTriangleStripSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
             <summary>
            
             </summary>
             <param name="arg"></param>
             <param name="x">mouse position(Left Down is (0, 0)).</param>
             <param name="y">mouse position(Left Down is (0, 0)).</param>
             <param name="lastVertexId"></param>
             <param name="modernRenderer"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexLineInTriangleSearcher.Search(CSharpGL.RenderEventArgs,System.Int32,System.Int32,System.UInt32,CSharpGL.ZeroIndexRenderer)">
            <summary>
            在三角形图元中拾取指定位置的Line
            </summary>
            <param name="arg">渲染参数</param>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <param name="lastVertexId">三角形图元的最后一个顶点</param>
            <param name="modernRenderer">目标Renderer</param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.LineWidthState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LineWidthState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LineWidthState.#ctor(System.Single)">
             <summary>
            
             </summary>
             <param name="lineWidth"></param>
        </member>
        <member name="M:CSharpGL.LineWidthState.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LineWidthState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.LineWidthState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.LineWidthState.MinLineWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.LineWidthState.MaxLineWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.LineWidthState.LineWidth">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PointSizeState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSizeState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSizeState.#ctor(System.Single)">
             <summary>
            
             </summary>
             <param name="pointSize"></param>
        </member>
        <member name="M:CSharpGL.PointSizeState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PointSizeState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSizeState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PointSizeState.MinPointSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PointSizeState.MaxPointSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PointSizeState.PointSize">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.UniformBool">
            <summary>
            uniform bool variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformBool.#ctor(System.String)">
            <summary>
            uniform bool variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformBool.#ctor(System.String,System.Boolean)">
            <summary>
            uniform bool variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformBool.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformSampler">
            <summary>
            uniform samplerXD variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformSampler.#ctor(System.String)">
            <summary>
            uniform samplerXD variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformSampler.#ctor(System.String,CSharpGL.samplerValue)">
            <summary>
            uniform samplerXD variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformSampler.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.samplerValue">
            <summary>
            value for setting/resetting uniform samplerXD variable.
            </summary>
        </member>
        <member name="M:CSharpGL.samplerValue.#ctor(CSharpGL.TextureTarget,System.UInt32,System.UInt32)">
            <summary>
            value for setting/resetting uniform samplerXD variable.
            </summary>
            <param name="target"></param>
            <param name="textureId"></param>
            <param name="activeTextureIndex">0 means OpenGL.GL_TEXTURE0, 1 means OpenGL.GL_TEXTURE1 etc</param>
        </member>
        <member name="M:CSharpGL.samplerValue.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.samplerValue.op_Equality(CSharpGL.samplerValue,CSharpGL.samplerValue)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.samplerValue.op_Inequality(CSharpGL.samplerValue,CSharpGL.samplerValue)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.samplerValue.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.samplerValue.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.samplerValue.Equals(CSharpGL.samplerValue)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.samplerValue.Target">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.samplerValue.TextureId">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.samplerValue.ActiveTextureIndex">
            <summary>
            0 means OpenGL.GL_TEXTURE0, 1 means OpenGL.GL_TEXTURE1, ...
            </summary>
        </member>
        <member name="T:CSharpGL.UniformFloat">
            <summary>
            uniform float variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformFloat.#ctor(System.String)">
            <summary>
            uniform float variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformFloat.#ctor(System.String,System.Single)">
            <summary>
            uniform float variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformFloat.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformMat2">
            <summary>
            uniform mat2 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformMat2.#ctor(System.String)">
            <summary>
            uniform mat2 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformMat2.#ctor(System.String,CSharpGL.mat2)">
            <summary>
            uniform mat2 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformMat2.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformMat3">
            <summary>
            uniform mat3 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformMat3.#ctor(System.String)">
            <summary>
            uniform mat3 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformMat3.#ctor(System.String,CSharpGL.mat3)">
            <summary>
            uniform mat3 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformMat3.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformMat4">
            <summary>
            uniform mat4 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformMat4.#ctor(System.String)">
            <summary>
            uniform mat4 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformMat4.#ctor(System.String,CSharpGL.mat4)">
            <summary>
            uniform mat4 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformMat4.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformVec4">
            <summary>
            uniform vec4 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVec4.#ctor(System.String)">
            <summary>
            uniform vec4 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformVec4.#ctor(System.String,CSharpGL.vec4)">
            <summary>
            uniform vec4 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformVec4.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformVec3">
            <summary>
            uniform vec3 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVec3.#ctor(System.String)">
            <summary>
            uniform vec3 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformVec3.#ctor(System.String,CSharpGL.vec3)">
            <summary>
            uniform vec3 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformVec3.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="T:CSharpGL.UniformVec2">
            <summary>
            uniform vec2 variable;
            </summary>
        </member>
        <member name="M:CSharpGL.UniformVec2.#ctor(System.String)">
            <summary>
            uniform vec2 variable;
            </summary>
            <param name="varName"></param>
        </member>
        <member name="M:CSharpGL.UniformVec2.#ctor(System.String,CSharpGL.vec2)">
            <summary>
            uniform vec2 variable;
            </summary>
            <param name="varName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CSharpGL.UniformVec2.DoSetUniform(CSharpGL.ShaderProgram)">
             <summary>
            
             </summary>
             <param name="program"></param>
        </member>
        <member name="F:CSharpGL.FormUniformVariableListEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CSharpGL.FormUniformVariableListEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CSharpGL.FormUniformVariableListEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CSharpGL.FormIListEditor`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CSharpGL.FormIListEditor`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CSharpGL.FormIListEditor`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:CSharpGL.FormUniformVariableType.#ctor(System.Boolean)">
            <summary>
            Select a type from all types that derived from specified base type.
            </summary>
            <param name="forceReload">reload types that derived from specified base type.</param>
        </member>
        <member name="F:CSharpGL.FormUniformVariableType.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CSharpGL.FormUniformVariableType.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CSharpGL.FormUniformVariableType.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CSharpGL.FormSelectType">
            <summary>
            Select a type from all types that derived from specified base type.
            </summary>
        </member>
        <member name="M:CSharpGL.FormSelectType.#ctor(System.Type,System.Boolean,System.Func{System.Type,System.Boolean})">
            <summary>
            Select a type from all types that derived from specified base type.
            </summary>
            <param name="baseType">base type.</param>
            <param name="forceReload">reload types that derived from specified base type.
            <para>Set this to true if new assemblies loaded or old assemblies removed.</para></param>
            <param name="addtionalFilter">addtional filter.</param>
        </member>
        <member name="F:CSharpGL.FormSelectType.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CSharpGL.FormSelectType.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CSharpGL.FormSelectType.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:CSharpGL.FormSelectType.SelectedType">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PickingGeometryType">
            <summary>
            Target geometry type(point, line, triangle, quad or polygon) for color-coded-picking or none(nothing to pick).
            </summary>
        </member>
        <member name="F:CSharpGL.PickingGeometryType.None">
            <summary>
            Not picking.
            </summary>
        </member>
        <member name="F:CSharpGL.PickingGeometryType.Point">
            <summary>
            Picking a point.
            </summary>
        </member>
        <member name="F:CSharpGL.PickingGeometryType.Line">
            <summary>
            Picking a line.
            </summary>
        </member>
        <member name="F:CSharpGL.PickingGeometryType.Triangle">
            <summary>
            Picking a triangle.
            </summary>
        </member>
        <member name="F:CSharpGL.PickingGeometryType.Quad">
            <summary>
            Picking a quad.
            </summary>
        </member>
        <member name="F:CSharpGL.PickingGeometryType.Polygon">
            <summary>
            Picking a polygon.
            </summary>
        </member>
        <member name="T:CSharpGL.GeometryTypesHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.GeometryTypesHelper.GetVertexCount(CSharpGL.PickingGeometryType)">
            <summary>
            Get vertex count of specified geometry's type.
            <para>returns -1 if type is <see cref="F:CSharpGL.PickingGeometryType.Polygon"/>.</para>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.GeometryTypesHelper.ToDrawMode(CSharpGL.PickingGeometryType)">
             <summary>
            
             </summary>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.IPickableHelper">
            <summary>
            This helps to get last vertex's id of picked primitive.
            </summary>
        </member>
        <member name="M:CSharpGL.IPickableHelper.GetLastVertexIdOfPickedGeometry(CSharpGL.IPickable,System.UInt32,System.UInt32@)">
            <summary>
            Returns last vertex's id of picked geometry if the geometry represented by <paramref name="stageVertexId"/> belongs to this <paramref name="element"/> instance.
            <para>Returns false if <paramref name="stageVertexId"/> the primitive is in some other element.</para>
            </summary>
            <param name="element"></param>
            <param name="stageVertexId"></param>
            <param name="lastVertexId"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.IPickedGeometry">
            <summary>
            The picked geometry of color-coded picking.
            <para>Representing a basic geometry.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.IPickedGeometry.GeometryType">
            <summary>
            Gets or sets primitive's geometry type.
            </summary>
        </member>
        <member name="P:CSharpGL.IPickedGeometry.Positions">
            <summary>
            Gets or sets positions of this primitive's vertices.
            </summary>
        </member>
        <member name="P:CSharpGL.IPickedGeometry.VertexIds">
            <summary>
            Gets or sets indexes of this primitive's vertexes' index in the VBO.
            </summary>
        </member>
        <member name="P:CSharpGL.IPickedGeometry.FromRenderer">
            <summary>
            The scene's element from which this <see cref="T:CSharpGL.IPickedGeometry"/>'s instance is picked.
            </summary>
        </member>
        <member name="P:CSharpGL.IPickedGeometry.StageVertexId">
            <summary>
            The last vertex's id that constructs the picked primitive.
            <para>This id is in scene's all <see cref="T:CSharpGL.IPickable"/>s' order.</para>
            </summary>
        </member>
        <member name="T:CSharpGL.PickedGeometry">
            <summary>
            The color-coded picking result.
            <para>Representing a primitive.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.PickedGeometry.#ctor(CSharpGL.ViewPort,CSharpGL.PickingGeometryType,CSharpGL.vec3[],System.UInt32[],System.UInt32,CSharpGL.IPickable)">
            <summary>
            The color-coded picking result.
            <para>Representing a primitive(point, line, triangle, quad, polygon).</para>
            </summary>
            <param name="fromViewPort"></param>
            <param name="geometryType"></param>
            <param name="positions"></param>
            <param name="vertexIds"></param>
            <param name="stageVertexId"></param>
            <param name="fromRenderer"></param>
        </member>
        <member name="M:CSharpGL.PickedGeometry.ToString(CSharpGL.mat4,CSharpGL.mat4,CSharpGL.mat4)">
             <summary>
            
             </summary>
             <param name="projection"></param>
             <param name="view"></param>
             <param name="model"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PickedGeometry.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.PickedGeometry.FromViewPort">
            <summary>
            This geometry is picked from which view port?
            </summary>
        </member>
        <member name="P:CSharpGL.PickedGeometry.ErrorInfo">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PickedGeometry.GeometryType">
            <summary>
            Gets or sets primitive's geometry type.
            </summary>
        </member>
        <member name="P:CSharpGL.PickedGeometry.Positions">
            <summary>
            Gets or sets positions of this primitive's vertices.
            </summary>
        </member>
        <member name="P:CSharpGL.PickedGeometry.VertexIds">
            <summary>
            Gets or sets indexes of this primitive's vertexes' index in the VBO.
            </summary>
        </member>
        <member name="P:CSharpGL.PickedGeometry.StageVertexId">
            <summary>
            The last vertex's id that constructs the picked primitive.
            <para>This id is in scene's all <see cref="T:CSharpGL.IPickable"/>s' order.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.PickedGeometry.FromRenderer">
            <summary>
            The renderer that this picked primitive belongs to.
            </summary>
        </member>
        <member name="T:CSharpGL.PickingShaderHelper">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PickingShaderHelper.vertexShader">
            <summary>
            vertex shader's cache.
            </summary>
        </member>
        <member name="F:CSharpGL.PickingShaderHelper.fragmentShader">
            <summary>
            fragmente shader's cache.
            </summary>
        </member>
        <member name="M:CSharpGL.PickingShaderHelper.GetShaderCodes">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PickingShaderHelper.GetShaderSource(CSharpGL.ShaderType)">
            <summary>
            Gets shader's source code for color coded picking.
            </summary>
            <param name="shaderType"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.PrimitiveModesHelper.ToGeometryType(CSharpGL.DrawMode)">
            <summary>
            Convert <see cref="T:CSharpGL.DrawMode"/> to <see cref="T:CSharpGL.PickingGeometryType"/>.
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.PointSpriteState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSpriteState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSpriteState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSpriteState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PointSpriteState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.PointSpriteState.StateList">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PolygonModeState">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PolygonModeState.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PolygonModeState.#ctor(CSharpGL.PolygonMode)">
             <summary>
            
             </summary>
             <param name="mode"></param>
        </member>
        <member name="M:CSharpGL.PolygonModeState.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.PolygonModeState.StateOn">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PolygonModeState.StateOff">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.PolygonModeState.Mode">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.UniformVariableListEditor">
            <summary>
            用在IList&lt;<see cref="T:CSharpGL.UniformVariable"/>&gt;类型的属性上。
            </summary>
        </member>
        <member name="T:CSharpGL.IListEditor`1">
            <summary>
            用在IList&lt;GLState&gt;类型的属性上。
            </summary>
        </member>
        <member name="T:CSharpGL.AttributeMap">
            <summary>
            持有从<see cref="T:CSharpGL.IBufferable"/>到GLSL中in变量名的对应关系。
            每个<see cref="T:CSharpGL.IBufferable"/>和每个<see cref="T:CSharpGL.Renderer"/>都有一个Map关系。
            <para>Relations between vertex attribute buffers and 'in' variables in GLSL vertex shader.</para>
            <para>This relation map connects <see cref="T:CSharpGL.IBufferable"/> to <see cref="T:CSharpGL.Renderer"/>.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.AttributeMap.#ctor">
            <summary>
            持有从<see cref="T:CSharpGL.IBufferable"/>到GLSL中in变量名的对应关系。
            每个<see cref="T:CSharpGL.IBufferable"/>和每个<see cref="T:CSharpGL.Renderer"/>都有一个Map关系。
            <para>Relations between vertex attribute buffers and 'in' variables in GLSL vertex shader.</para>
            <para>This relation map connects <see cref="T:CSharpGL.IBufferable"/> to <see cref="T:CSharpGL.Renderer"/>.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.AttributeMap.#ctor(System.String,System.String)">
            <summary>
            持有从<see cref="T:CSharpGL.IBufferable"/>到GLSL中in变量名的对应关系。
            每个<see cref="T:CSharpGL.IBufferable"/>和每个<see cref="T:CSharpGL.Renderer"/>都有一个Map关系。
            <para>Relations between vertex attribute buffers and 'in' variables in GLSL vertex shader.</para>
            <para>This relation map connects <see cref="T:CSharpGL.IBufferable"/> to <see cref="T:CSharpGL.Renderer"/>.</para>
            </summary>
            <param name="nameInShader">'vPos' in vertex shader(in vec3 vPos;)</param>
            <param name="nameInIBufferable">user defined identifier for a buffer.</param>
        </member>
        <member name="M:CSharpGL.AttributeMap.#ctor(System.String[],System.String[])">
            <summary>
            持有从<see cref="T:CSharpGL.IBufferable"/>到GLSL中in变量名的对应关系。
            每个<see cref="T:CSharpGL.IBufferable"/>和每个<see cref="T:CSharpGL.Renderer"/>都有一个Map关系。
            <para>Relations between vertex attribute buffers and 'in' variables in GLSL vertex shader.</para>
            <para>This relation map connects <see cref="T:CSharpGL.IBufferable"/> to <see cref="T:CSharpGL.Renderer"/>.</para>
            </summary>
            <param name="nameInShader">'vPos' in vertex shader(in vec3 vPos;)</param>
            <param name="nameInIBufferable">user defined identifier for a buffer.</param>
        </member>
        <member name="M:CSharpGL.AttributeMap.Add(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="nameInShader">'vPos' in vertex shader(in vec3 vPos;)</param>
             <param name="nameInIBufferable">user defined identifier for a buffer.</param>
        </member>
        <member name="M:CSharpGL.AttributeMap.ToXElement">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.AttributeMap.Parse(System.Xml.Linq.XElement)">
             <summary>
            
             </summary>
             <param name="xElement"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.AttributeMap.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.AttributeMap.NamePair">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.AttributeMap.NamePair.#ctor(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="nameInShader"></param>
             <param name="nameInIBufferable"></param>
        </member>
        <member name="M:CSharpGL.AttributeMap.NamePair.ToXElement">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.AttributeMap.NamePair.Parse(System.Xml.Linq.XElement)">
             <summary>
            
             </summary>
             <param name="xElement"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.AttributeMap.NamePair.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.AttributeMap.NamePair.VarNameInShader">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.AttributeMap.NamePair.NameInIBufferable">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ShaderCode">
            <summary>
            某种类型的shader代码。
            <para>Some type of shader code.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.ShaderCode.#ctor(System.String,CSharpGL.ShaderType)">
            <summary>
            某种类型的shader代码。
            <para>Some type of shader code.</para>
            </summary>
            <param name="sourceCode"></param>
            <param name="shaderType"></param>
        </member>
        <member name="M:CSharpGL.ShaderCode.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderCode.CreateShader">
            <summary>
            Create OpenGL shader object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.ShaderCode.SourceCode">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.ShaderCode.ShaderType">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ShaderCodesHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.ShaderCodesHelper.CreateProgram(CSharpGL.ShaderCode)">
            <summary>
            Creates a shader program object by a single shader.
            </summary>
            <param name="shaderCode"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ShaderCodesHelper.CreateProgram(CSharpGL.ShaderCode[])">
            <summary>
            Creates a shader program by multiple shaders.
            </summary>
            <param name="shaderCodes"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.glm">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.glm.frustum(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a frustrum projection matrix.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <param name="top">The top.</param>
            <param name="nearVal">The near val.</param>
            <param name="farVal">The far val.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.infinitePerspective(System.Single,System.Single,System.Single)">
            <summary>
            Creates a matrix for a symmetric perspective-view frustum with far plane at infinite.
            </summary>
            <param name="fovy">The fovy.</param>
            <param name="aspect">The aspect.</param>
            <param name="zNear">The z near.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.lookAt(CSharpGL.vec3,CSharpGL.vec3,CSharpGL.vec3)">
            <summary>
            Build a look at view matrix.
            transform object's coordinate from world's space to camera's space.
            </summary>
            <param name="eye">The eye.</param>
            <param name="center">The center.</param>
            <param name="up">Up.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.ortho(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a matrix for an orthographic parallel viewing volume.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <param name="top">The top.</param>
            <param name="zNear">The z near.</param>
            <param name="zFar">The z far.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.ortho(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a matrix for projecting two-dimensional coordinates onto the screen.
            <para>this equals ortho(left, right, bottom, top, -1, 1)</para>
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <param name="top">The top.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.perspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a perspective transformation matrix.
            </summary>
            <param name="fovy">The field of view angle, in radians.</param>
            <param name="aspect">The aspect ratio.</param>
            <param name="zNear">The near depth clipping plane.</param>
            <param name="zFar">The far depth clipping plane.</param>
            <returns>A <see cref="T:CSharpGL.mat4"/> that contains the projection matrix for the perspective transformation.</returns>
        </member>
        <member name="M:CSharpGL.glm.perspectiveFov(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a perspective projection matrix based on a field of view.
            </summary>
            <param name="fov">The fov (in radians).</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="zNear">The z near.</param>
            <param name="zFar">The z far.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:CSharpGL.glm.pickMatrix(CSharpGL.vec2,CSharpGL.vec2,CSharpGL.vec4)">
            <summary>
            Define a picking region.
            </summary>
            <param name="center">The center.</param>
            <param name="delta">The delta.</param>
            <param name="viewport">The viewport.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:CSharpGL.glm.project(CSharpGL.vec3,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4)">
            <summary>
            Map the specified object coordinates (obj.x, obj.y, obj.z) into window coordinates.
            </summary>
            <param name="modelPosition">The object.</param>
            <param name="view">The view.</param>
            <param name="proj">The proj.</param>
            <param name="viewport">The viewport.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.rotate(CSharpGL.mat4,System.Single,CSharpGL.vec3)">
            <summary>
            Builds a rotation 4 * 4 matrix created from an axis vector and an angle.
            </summary>
            <param name="m">The m.</param>
            <param name="angleDegree">ANgle in Degree.</param>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.rotate(System.Single,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="angleDegree">ANgle in Degree.</param>
             <param name="v"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.scale(CSharpGL.mat4,CSharpGL.vec3)">
            <summary>
            Applies a scale transformation to matrix <paramref name="m"/> by vector <paramref name="v"/>.
            </summary>
            <param name="m">The matrix to transform.</param>
            <param name="v">The vector to scale by.</param>
            <returns><paramref name="m"/> scaled by <paramref name="v"/>.</returns>
        </member>
        <member name="M:CSharpGL.glm.translate(CSharpGL.mat4,CSharpGL.vec3)">
            <summary>
            Applies a translation transformation to matrix <paramref name="m"/> by vector <paramref name="v"/>.
            </summary>
            <param name="m">The matrix to transform.</param>
            <param name="v">The vector to translate by.</param>
            <returns><paramref name="m"/> translated by <paramref name="v"/>.</returns>
        </member>
        <member name="M:CSharpGL.glm.tweakedInfinitePerspective(System.Single,System.Single,System.Single)">
            <summary>
            Creates a matrix for a symmetric perspective-view frustum with far plane
            at infinite for graphics hardware that doesn't support depth clamping.
            </summary>
            <param name="fovy">The fovy.</param>
            <param name="aspect">The aspect.</param>
            <param name="zNear">The z near.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.unProject(CSharpGL.vec3,CSharpGL.mat4,CSharpGL.mat4,CSharpGL.vec4)">
            <summary>
            Map the specified window coordinates (win.x, win.y, win.z) into object coordinates.
            </summary>
            <param name="windowPos">The win.</param>
            <param name="view">The view.</param>
            <param name="proj">The proj.</param>
            <param name="viewport">The viewport.</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.transpose(CSharpGL.mat2)">
            <summary>
            Gets the transposed matrix.
            <para>获取转置矩阵。</para>
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.inverse(CSharpGL.mat2)">
            <summary>
            Gets the inversed matrix.
            <para>获取逆矩阵。</para>
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.transpose(CSharpGL.mat3)">
            <summary>
            Gets the transposed matrix.
            <para>获取转置矩阵。</para>
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.inverse(CSharpGL.mat3)">
            <summary>
            Gets the inversed matrix.
            <para>获取逆矩阵。</para>
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.transpose(CSharpGL.mat4)">
            <summary>
            Gets the transposed matrix.
            <para>获取转置矩阵。</para>
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.inverse(CSharpGL.mat4)">
            <summary>
            Gets the inversed matrix.
            <para>获取逆矩阵。</para>
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.acos(System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.acosh(System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.asin(System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.asinh(System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.atan(System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="y"></param>
             <param name="x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.atan(System.Single)">
             <summary>
            
             </summary>
             <param name="y_over_x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.atanh(System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.cos(System.Single)">
             <summary>
            
             </summary>
             <param name="angle"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.cosh(System.Single)">
             <summary>
            
             </summary>
             <param name="angle"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.degrees(System.Single)">
             <summary>
            
             </summary>
             <param name="radians"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.radians(System.Single)">
             <summary>
            
             </summary>
             <param name="degrees"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.sin(System.Single)">
             <summary>
            
             </summary>
             <param name="angle"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.sinh(System.Single)">
             <summary>
            
             </summary>
             <param name="angle"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.tan(System.Single)">
             <summary>
            
             </summary>
             <param name="angle"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.glm.tanh(System.Single)">
             <summary>
            
             </summary>
             <param name="angle"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.mat2">
            <summary>
            Represents a 2x2 matrix.
            </summary>
        </member>
        <member name="F:CSharpGL.mat2.col0">
            <summary>
            Don't change the order of col0, col1 appears!
            </summary>
        </member>
        <member name="F:CSharpGL.mat2.col1">
            <summary>
            Don't change the order of col0, col1 appears!
            </summary>
        </member>
        <member name="M:CSharpGL.mat2.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.mat2"/> struct.
            This matrix is the identity matrix scaled by <paramref name="scale"/>.
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:CSharpGL.mat2.#ctor(CSharpGL.vec2[])">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.mat2"/> struct.
            The matrix is initialised with the <paramref name="cols"/>.
            </summary>
            <param name="cols">The colums of the matrix.</param>
        </member>
        <member name="M:CSharpGL.mat2.#ctor(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="col0"></param>
             <param name="col1"></param>
        </member>
        <member name="M:CSharpGL.mat2.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="a"></param>
             <param name="b"></param>
             <param name="c"></param>
             <param name="d"></param>
        </member>
        <member name="M:CSharpGL.mat2.identity">
            <summary>
            Creates an identity matrix.
            </summary>
            <returns>A new identity matrix.</returns>
        </member>
        <member name="M:CSharpGL.mat2.op_Inequality(CSharpGL.mat2,CSharpGL.mat2)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.op_Multiply(CSharpGL.mat2,CSharpGL.vec2)">
            <summary>
            Multiplies the <paramref name="lhs"/> matrix by the <paramref name="rhs"/> vector.
            </summary>
            <param name="lhs">The LHS matrix.</param>
            <param name="rhs">The RHS vector.</param>
            <returns>The product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:CSharpGL.mat2.op_Multiply(CSharpGL.mat2,CSharpGL.mat2)">
            <summary>
            Multiplies the <paramref name="lhs"/> matrix by the <paramref name="rhs"/> matrix.
            </summary>
            <param name="lhs">The LHS matrix.</param>
            <param name="rhs">The RHS matrix.</param>
            <returns>The product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:CSharpGL.mat2.op_Multiply(CSharpGL.mat2,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.op_Equality(CSharpGL.mat2,CSharpGL.mat2)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.Equals(CSharpGL.mat2)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.ToArray">
            <summary>
            Returns the matrix as a flat array of elements, column major.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.mat2.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.mat2.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CSharpGL.vec2"/> column at the specified index.
            </summary>
            <value>
            The <see cref="T:CSharpGL.vec2"/> column.
            </value>
            <param name="column">The column index.</param>
            <returns>The column at index <paramref name="column"/>.</returns>
        </member>
        <member name="P:CSharpGL.mat2.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the element at <paramref name="column"/> and <paramref name="row"/>.
            </summary>
            <value>
            The element at <paramref name="column"/> and <paramref name="row"/>.
            </value>
            <param name="column">The column index.</param>
            <param name="row">The row index.</param>
            <returns>
            The element at <paramref name="column"/> and <paramref name="row"/>.
            </returns>
        </member>
        <member name="T:CSharpGL.mat3">
            <summary>
            Represents a 3x3 matrix.
            </summary>
        </member>
        <member name="F:CSharpGL.mat3.col0">
            <summary>
            Don't change the order of col0, col1, col2 appears!
            </summary>
        </member>
        <member name="F:CSharpGL.mat3.col1">
            <summary>
            Don't change the order of col0, col1, col2 appears!
            </summary>
        </member>
        <member name="F:CSharpGL.mat3.col2">
            <summary>
            Don't change the order of col0, col1, col2 appears!
            </summary>
        </member>
        <member name="M:CSharpGL.mat3.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.mat3"/> struct.
            This matrix is the identity matrix scaled by <paramref name="scale"/>.
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:CSharpGL.mat3.#ctor(CSharpGL.vec3[])">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.mat3"/> struct.
            The matrix is initialised with the <paramref name="cols"/>.
            </summary>
            <param name="cols">The colums of the matrix.</param>
        </member>
        <member name="M:CSharpGL.mat3.#ctor(CSharpGL.vec3,CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="col0"></param>
             <param name="col1"></param>
             <param name="col2"></param>
        </member>
        <member name="M:CSharpGL.mat3.identity">
            <summary>
            Creates an identity matrix.
            </summary>
            <returns>A new identity matrix.</returns>
        </member>
        <member name="M:CSharpGL.mat3.op_Inequality(CSharpGL.mat3,CSharpGL.mat3)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.op_Multiply(CSharpGL.mat3,CSharpGL.vec3)">
            <summary>
            Multiplies the <paramref name="lhs"/> matrix by the <paramref name="rhs"/> vector.
            </summary>
            <param name="lhs">The LHS matrix.</param>
            <param name="rhs">The RHS vector.</param>
            <returns>The product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:CSharpGL.mat3.op_Multiply(CSharpGL.mat3,CSharpGL.mat3)">
            <summary>
            Multiplies the <paramref name="lhs"/> matrix by the <paramref name="rhs"/> matrix.
            </summary>
            <param name="lhs">The LHS matrix.</param>
            <param name="rhs">The RHS matrix.</param>
            <returns>The product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:CSharpGL.mat3.op_Multiply(CSharpGL.mat3,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.op_Equality(CSharpGL.mat3,CSharpGL.mat3)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.Equals(CSharpGL.mat3)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.to_mat2">
            <summary>
            Returns the <see cref="T:CSharpGL.mat3"/> portion of this matrix.
            </summary>
            <returns>The <see cref="T:CSharpGL.mat3"/> portion of this matrix.</returns>
        </member>
        <member name="M:CSharpGL.mat3.ToArray">
            <summary>
            Returns the matrix as a flat array of elements, column major.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.mat3.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.mat3.ToQuaternion">
            <summary>
            Transform this matrix to a <see cref="T:CSharpGL.Quaternion"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.mat3.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CSharpGL.vec3"/> column at the specified index.
            </summary>
            <value>
            The <see cref="T:CSharpGL.vec3"/> column.
            </value>
            <param name="column">The column index.</param>
            <returns>The column at index <paramref name="column"/>.</returns>
        </member>
        <member name="P:CSharpGL.mat3.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the element at <paramref name="column"/> and <paramref name="row"/>.
            </summary>
            <value>
            The element at <paramref name="column"/> and <paramref name="row"/>.
            </value>
            <param name="column">The column index.</param>
            <param name="row">The row index.</param>
            <returns>
            The element at <paramref name="column"/> and <paramref name="row"/>.
            </returns>
        </member>
        <member name="T:CSharpGL.mat4">
            <summary>
            Represents a 4x4 matrix.
            </summary>
        </member>
        <member name="F:CSharpGL.mat4.col0">
            <summary>
            Don't change the order of col0, col1, col2, col3 appears!
            </summary>
        </member>
        <member name="F:CSharpGL.mat4.col1">
            <summary>
            Don't change the order of col0, col1, col2, col3 appears!
            </summary>
        </member>
        <member name="F:CSharpGL.mat4.col2">
            <summary>
            Don't change the order of col0, col1, col2, col3 appears!
            </summary>
        </member>
        <member name="F:CSharpGL.mat4.col3">
            <summary>
            Don't change the order of col0, col1, col2, col3 appears!
            </summary>
        </member>
        <member name="M:CSharpGL.mat4.op_Inequality(CSharpGL.mat4,CSharpGL.mat4)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat4.op_Equality(CSharpGL.mat4,CSharpGL.mat4)">
             <summary>
            
             </summary>
             <param name="left"></param>
             <param name="right"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat4.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat4.Equals(CSharpGL.mat4)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat4.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.mat4.to_mat3">
            <summary>
            Returns the <see cref="T:CSharpGL.mat3"/> portion of this matrix.
            </summary>
            <returns>The <see cref="T:CSharpGL.mat3"/> portion of this matrix.</returns>
        </member>
        <member name="M:CSharpGL.mat4.ToArray">
            <summary>
            Returns the matrix as a flat array of elements, column major.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.mat4.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.mat4.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.mat4"/> struct.
            This matrix is the identity matrix scaled by <paramref name="scale"/>.
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:CSharpGL.mat4.#ctor(CSharpGL.vec4[])">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.mat4"/> struct.
            The matrix is initialised with the <paramref name="cols"/>.
            </summary>
            <param name="cols">The colums of the matrix.</param>
        </member>
        <member name="M:CSharpGL.mat4.#ctor(CSharpGL.vec4,CSharpGL.vec4,CSharpGL.vec4,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="col0"></param>
             <param name="col1"></param>
             <param name="col2"></param>
             <param name="col3"></param>
        </member>
        <member name="M:CSharpGL.mat4.identity">
            <summary>
            Creates an identity matrix.
            </summary>
            <returns>A new identity matrix.</returns>
        </member>
        <member name="M:CSharpGL.mat4.op_Multiply(CSharpGL.mat4,CSharpGL.vec4)">
            <summary>
            Multiplies the <paramref name="lhs"/> matrix by the <paramref name="rhs"/> vector.
            </summary>
            <param name="lhs">The LHS matrix.</param>
            <param name="rhs">The RHS vector.</param>
            <returns>The product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:CSharpGL.mat4.op_Multiply(CSharpGL.mat4,CSharpGL.mat4)">
            <summary>
            Multiplies the <paramref name="lhs"/> matrix by the <paramref name="rhs"/> matrix.
            </summary>
            <param name="lhs">The LHS matrix.</param>
            <param name="rhs">The RHS matrix.</param>
            <returns>The product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:CSharpGL.mat4.op_Multiply(CSharpGL.mat4,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.mat4.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CSharpGL.vec4"/> column at the specified index.
            </summary>
            <value>
            The <see cref="T:CSharpGL.vec4"/> column.
            </value>
            <param name="column">The column index.</param>
            <returns>The column at index <paramref name="column"/>.</returns>
        </member>
        <member name="P:CSharpGL.mat4.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the element at <paramref name="column"/> and <paramref name="row"/>.
            </summary>
            <value>
            The element at <paramref name="column"/> and <paramref name="row"/>.
            </value>
            <param name="column">The column index.</param>
            <param name="row">The row index.</param>
            <returns>
            The element at <paramref name="column"/> and <paramref name="row"/>.
            </returns>
        </member>
        <member name="T:CSharpGL.vec2">
            <summary>
            Represents a two dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.vec2.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.vec2.y">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.vec2.#ctor(System.Single)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.vec2.#ctor(System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:CSharpGL.vec2.#ctor(CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.vec2.#ctor(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.vec2.#ctor(CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.vec2.op_UnaryNegation(CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Subtraction(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Subtraction(CSharpGL.vec2,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Inequality(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Multiply(CSharpGL.vec2,System.Single)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Multiply(System.Single,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Multiply(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Division(CSharpGL.vec2,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Addition(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Addition(CSharpGL.vec2,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.op_Equality(CSharpGL.vec2,CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.dot(CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.Equals(CSharpGL.vec2)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec2.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.vec2.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.vec3">
            <summary>
            Represents a three dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.vec3.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.vec3.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.vec3.z">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.vec3.#ctor(System.Single)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.vec3.#ctor(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.vec3.#ctor(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.vec3.#ctor(CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.vec3.#ctor(CSharpGL.vec2,System.Single)">
             <summary>
            
             </summary>
             <param name="xy"></param>
             <param name="z"></param>
        </member>
        <member name="M:CSharpGL.vec3.op_UnaryNegation(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Subtraction(CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Inequality(CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Multiply(CSharpGL.vec3,System.Single)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Multiply(System.Single,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Multiply(CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Division(CSharpGL.vec3,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Addition(CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.op_Equality(CSharpGL.vec3,CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.cross(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.dot(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.Equals(CSharpGL.vec3)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec3.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.vec3.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.vec4">
            <summary>
            Represents a four dimensional vector.
            </summary>
        </member>
        <member name="F:CSharpGL.vec4.x">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.vec4.y">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.vec4.z">
            <summary>
            </summary>
        </member>
        <member name="F:CSharpGL.vec4.w">
            <summary>
            </summary>
        </member>
        <member name="M:CSharpGL.vec4.#ctor(System.Single)">
             <summary>
            
             </summary>
             <param name="s"></param>
        </member>
        <member name="M:CSharpGL.vec4.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="x"></param>
             <param name="y"></param>
             <param name="z"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.vec4.#ctor(CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="v"></param>
        </member>
        <member name="M:CSharpGL.vec4.#ctor(CSharpGL.vec3,System.Single)">
             <summary>
            
             </summary>
             <param name="xyz"></param>
             <param name="w"></param>
        </member>
        <member name="M:CSharpGL.vec4.op_UnaryNegation(CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Subtraction(CSharpGL.vec4,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Inequality(CSharpGL.vec4,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Multiply(CSharpGL.vec4,System.Single)">
             <summary>
            
             </summary>
             <param name="self"></param>
             <param name="s"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Multiply(System.Single,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Multiply(CSharpGL.vec4,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Division(CSharpGL.vec4,System.Single)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Addition(CSharpGL.vec4,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.op_Equality(CSharpGL.vec4,CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="lhs"></param>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.dot(CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="rhs"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.Equals(CSharpGL.vec4)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.length">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.normalize">
            <summary>
            归一化向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.vec4.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.vec4.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.RenderEventArgs">
            <summary>
            Render event argument.
            </summary>
        </member>
        <member name="M:CSharpGL.RenderEventArgs.#ctor(System.Drawing.Rectangle,CSharpGL.ViewPort,CSharpGL.PickingGeometryType)">
            <summary>
            Initializes a new instance of the <see cref="T:CSharpGL.RenderEventArgs"/> class.
            </summary>
            <param name="canvasRect"></param>
            <param name="viewPort">camera used during rendering.</param>
            <param name="pickingGeometryType">Target geometry type(point, line, triangle, quad or polygon) for color-coded-picking; otherwise useless.</param>
        </member>
        <member name="P:CSharpGL.RenderEventArgs.Camera">
            <summary>
            Gets camera used during rendering.
            </summary>
        </member>
        <member name="P:CSharpGL.RenderEventArgs.CanvasRect">
            <summary>
            Gets canvas's rectangle.
            </summary>
        </member>
        <member name="P:CSharpGL.RenderEventArgs.PickingGeometryType">
            <summary>
            Target geometry type(point, line, triangle, quad or polygon) for color-coded-picking or none(nothing to pick).
            </summary>
        </member>
        <member name="P:CSharpGL.RenderEventArgs.UsingViewPort">
            <summary>
            Gets view port used during rendering.
            </summary>
        </member>
        <member name="T:CSharpGL.FBORenderContext">
            <summary>
            A render context.
            </summary>
        </member>
        <member name="T:CSharpGL.HiddenWindowRenderContext">
            <summary>
            creates render device and render context.
            </summary>
        </member>
        <member name="M:CSharpGL.HiddenWindowRenderContext.Create(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Creates the render context provider. Must also create the OpenGL extensions.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitDepth">The bit depth.</param>
            <param name="parameter">The parameter</param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.HiddenWindowRenderContext.CreateBasicRenderContext(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new window class, as basic as possible.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="bitDepth"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.HiddenWindowRenderContext.UpdateContextVersion">
            <summary>
            Only valid to be called after the render context is created, this function attempts to
            move the render context to the OpenGL version originally requested. If this is &gt; 2.1, this
            means building a new context. If this fails, we'll have to make do with 2.1.
            </summary>
        </member>
        <member name="M:CSharpGL.HiddenWindowRenderContext.DisposeUnmanagedResources">
            <summary>
            Destroys the render context provider instance.
            </summary>
        </member>
        <member name="M:CSharpGL.HiddenWindowRenderContext.Blit(System.IntPtr)">
            <summary>
            Blit the rendered data to the supplied device context.
            </summary>
            <param name="deviceContext">The HDC.</param>
        </member>
        <member name="M:CSharpGL.HiddenWindowRenderContext.MakeCurrent">
            <summary>
            Makes the render context current.
            </summary>
        </member>
        <member name="F:CSharpGL.HiddenWindowRenderContext.windowHandle">
            <summary>
            The window handle.
            </summary>
        </member>
        <member name="M:CSharpGL.FBORenderContext.Create(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Creates the render context provider. Must also create the OpenGL extensions.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="bitDepth"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.FBORenderContext.DisposeUnmanagedResources">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FBORenderContext.SetDimensions(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="width"></param>
             <param name="height"></param>
        </member>
        <member name="M:CSharpGL.FBORenderContext.Blit(System.IntPtr)">
             <summary>
            
             </summary>
             <param name="deviceContext"></param>
        </member>
        <member name="F:CSharpGL.FBORenderContext.framebuffer">
            <summary>
            somehing wrong if this field is removed. I don't know why.
            </summary>
        </member>
        <member name="F:CSharpGL.FBORenderContext.dibSection">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.OneIndexBuffer">
            <summary>
            Wraps glDrawElements(uint mode, int count, uint type, IntPtr indices).
            </summary>
        </member>
        <member name="T:CSharpGL.IndexBuffer">
            <summary>
            索引buffer渲染器的基类。
            <para>Base type for Vertex Buffer Object' pointer storing vertex' index.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.IndexBuffer.#ctor(CSharpGL.DrawMode,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            索引buffer渲染器的基类。
            <para>Base type for Vertex Buffer Object' pointer storing vertex' index.</para>
            </summary>
            <param name="mode"></param>
            <param name="bufferId"></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
            <param name="primCount">primCount in instanced rendering.</param>
        </member>
        <member name="M:CSharpGL.IndexBuffer.Render(CSharpGL.RenderEventArgs)">
            <summary>
            执行此VBO的渲染操作。
            <para>Render using this VBO.</para>
            </summary>
            <param name="arg"></param>
        </member>
        <member name="P:CSharpGL.IndexBuffer.Mode">
            <summary>
            用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）
            </summary>
        </member>
        <member name="P:CSharpGL.IndexBuffer.PrimCount">
            <summary>
            primCount in instanced rendering.
            </summary>
        </member>
        <member name="M:CSharpGL.OneIndexBuffer.#ctor(System.UInt32,CSharpGL.DrawMode,CSharpGL.IndexBufferElementType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Wraps glDrawElements(uint mode, int count, uint type, IntPtr indices).
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="mode">用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）</param>
            <param name="elementType">type in glDrawElements(uint mode, int count, uint type, IntPtr indices);
            <para>表示第3个参数，表示索引元素的类型。</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
            <param name="primCount">primCount in instanced rendering.</param>
        </member>
        <member name="M:CSharpGL.OneIndexBuffer.Render(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.OneIndexBuffer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.OneIndexBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="P:CSharpGL.OneIndexBuffer.FirstIndex">
            <summary>
            要渲染的第一个索引的位置。
            <para>First index to be rendered.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.OneIndexBuffer.ElementCount">
            <summary>
            要渲染多少个索引。
            <para>How many indexes to be rendered?</para>
            </summary>
        </member>
        <member name="P:CSharpGL.OneIndexBuffer.ElementType">
            <summary>
            type in GL.DrawElements(uint mode, int count, uint type, IntPtr indices);
            </summary>
        </member>
        <member name="T:CSharpGL.VertexBuffer">
            <summary>
            type of Vertex Buffer Object, which represents one of vertex's attribute(position, color, uv coordinate, normal, etc).
            <para>In CSharpGL, one <see cref="T:CSharpGL.VertexBuffer"/> contains only one kind of attribute.</para>
            </summary>
        </member>
        <member name="F:CSharpGL.VertexBuffer.glVertexAttribPointer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.VertexBuffer.glVertexAttribIPointer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.VertexBuffer.glVertexAttribLPointer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.VertexBuffer.glEnableVertexAttribArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.VertexBuffer.glVertexAttribDivisor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.VertexBuffer.glPatchParameteri">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.VertexBuffer.#ctor(System.UInt32,CSharpGL.VBOConfig,System.String,System.Int32,System.Int32,System.UInt32,System.Int32)">
            <summary>
            Vertex' attribute buffer's pointer.
            </summary>
            <param name="bufferId">用glGenBuffers()得到的VBO的Id。<para>Id got from glGenBuffers();</para></param>
            <param name="config">This <paramref name="config"/> decides parameters' values in glVertexAttribPointer(attributeLocation, size, type, false, 0, IntPtr.Zero);
            </param>
            <param name="varNameInVertexShader">此顶点属性VBO对应于vertex shader中的哪个in变量？<para>Mapping variable's name in vertex shader.</para></param>
            <param name="length">此VBO含有多个个元素？<para>How many elements?</para></param>
            <param name="byteLength">此VBO中的数据在内存中占用多少个字节？<para>How many bytes in this buffer?</para></param>
            <param name="instancedDivisor">0: not instanced. 1: instanced divisor is 1.</param>
            <param name="patchVertexes">How many vertexes makes a patch? No patch if <paramref name="patchVertexes"/> is 0.</param>
        </member>
        <member name="M:CSharpGL.VertexBuffer.Standby(CSharpGL.ShaderProgram)">
            <summary>
            在使用<see cref="T:CSharpGL.VertexArrayObject"/>后，此方法只会执行一次。
            This method will only be invoked once when using <see cref="T:CSharpGL.VertexArrayObject"/>.
            </summary>
            <param name="shaderProgram"></param>
        </member>
        <member name="M:CSharpGL.VertexBuffer.Clone">
            <summary>
            Shallow copy of this <see cref="T:CSharpGL.VertexBuffer"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CSharpGL.VertexBuffer.Target">
            <summary>
            Target that this buffer should bind to.
            </summary>
        </member>
        <member name="P:CSharpGL.VertexBuffer.VarNameInVertexShader">
            <summary>
            此顶点属性VBO对应于vertex shader中的哪个in变量？
            <para>Mapping variable's name in vertex shader.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.VertexBuffer.Config">
            <summary>
            third parameter in glVertexAttribPointer(uint index, int size, uint type, bool normalized, int stride, IntPtr pointer);
            </summary>
        </member>
        <member name="P:CSharpGL.VertexBuffer.InstancedDivisor">
            <summary>
            0: not instanced. 1: instanced divisor is 1.
            </summary>
        </member>
        <member name="P:CSharpGL.VertexBuffer.PatchVertexes">
            <summary>
            How many vertexes makes a patch? No patch if PatchVertexes is 0.
            </summary>
        </member>
        <member name="F:CSharpGL.VertexAttribPointerType.Default">
            <summary>
            float
            </summary>
        </member>
        <member name="F:CSharpGL.VertexAttribPointerType.Integer">
            <summary>
            byte, short, int, uint,
            </summary>
        </member>
        <member name="F:CSharpGL.VertexAttribPointerType.Long">
            <summary>
            GL_DOUBLE
            </summary>
        </member>
        <member name="T:CSharpGL.VertexArrayObject">
            <summary>
            VAO是用来管理VBO的。可以进一步减少DrawCall。
            <para>VAO is used to reduce draw-call.</para>
            </summary>
        </member>
        <member name="M:CSharpGL.VertexArrayObject.#ctor(CSharpGL.IndexBuffer,CSharpGL.VertexBuffer[])">
            <summary>
            VAO是用来管理VBO的。可以进一步减少DrawCall。
            <para>VAO is used to reduce draw-call.</para>
            </summary>
            <param name="indexBuffer">index buffer pointer that used to invoke draw command.</param>
            <param name="vertexAttributeBuffers">给出此VAO要管理的所有VBO。<para>All VBOs that are managed by this VAO.</para></param>
        </member>
        <member name="M:CSharpGL.VertexArrayObject.Initialize(CSharpGL.ShaderProgram)">
            <summary>
            在OpenGL中创建VAO。
            创建的过程就是执行一次渲染的过程。
            <para>Creates VAO and bind it to specified VBOs.</para>
            <para>The whole process of binding is also the process of rendering.</para>
            </summary>
            <param name="shaderProgram"></param>
        </member>
        <member name="M:CSharpGL.VertexArrayObject.Render(CSharpGL.RenderEventArgs,CSharpGL.ShaderProgram,CSharpGL.IndexBuffer)">
            <summary>
            执行一次渲染的过程。
            <para>Execute rendering command.</para>
            </summary>
            <param name="arg"></param>
            <param name="shaderProgram"></param>
            <param name="temporaryIndexBuffer">render by a temporary index buffer</param>
        </member>
        <member name="M:CSharpGL.VertexArrayObject.ToString">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.VertexArrayObject.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.VertexArrayObject.Finalize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.VertexArrayObject.VertexAttributeBuffers">
            <summary>
            vertex attribute buffers('in vec3 position;' in shader etc.)
            </summary>
        </member>
        <member name="P:CSharpGL.VertexArrayObject.IndexBuffer">
            <summary>
            The one and only one index buffer used to indexing vertex attribute buffers.
            </summary>
        </member>
        <member name="P:CSharpGL.VertexArrayObject.Id">
            <summary>
            此VAO的ID，由OpenGL给出。
            <para>Id generated by glGenVertexArrays().</para>
            </summary>
        </member>
        <member name="T:CSharpGL.ZeroIndexBuffer">
            <summary>
            Wraps glDrawArrays(uint mode, int first, int count).
            </summary>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.#ctor(CSharpGL.DrawMode,System.Int32,System.Int32,System.Int32)">
            <summary>
            Wraps glDrawArrays(uint mode, int first, int count).
            </summary>
            <param name="mode">用哪种方式渲染各个顶点？（OpenGL.GL_TRIANGLES etc.）</param>
            <param name="firstVertex">要渲染的第一个顶点的位置。<para>Index of first vertex to be rendered.</para></param>
            <param name="vertexCount">要渲染多少个元素？<para>How many vertexes to be rendered?</para></param>
            <param name="primCount">primCount in instanced rendering.</param>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.Bind">
            <summary>
            need to do nothing.
            </summary>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.Unbind">
            <summary>
            need to do nothing.
            </summary>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.MapBufferRange(System.Int32,System.Int32,CSharpGL.MapBufferRangeAccess,System.Boolean)">
            <summary>
            Start to read/write buffer.
            <para>This will returns IntPtr.Zero as this buffer allocates no data in memory.</para>
            </summary>
            <param name="offset"></param>
            <param name="length"></param>
            <param name="access"></param>
            <param name="bind"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.MapBuffer(CSharpGL.MapBufferAccess,System.Boolean)">
            <summary>
            Start to read/write buffer.
            <para>This will returns IntPtr.Zero as this buffer allocates no data in memory.</para>
            </summary>
            <param name="access"></param>
            <param name="bind"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.UnmapBuffer(System.Boolean)">
            <summary>
            Stop reading/writing buffer.
            <para>need to do nothing.</para>
            </summary>
            <param name="unbind"></param>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.Render(CSharpGL.RenderEventArgs)">
             <summary>
            
             </summary>
             <param name="arg"></param>
        </member>
        <member name="M:CSharpGL.ZeroIndexBuffer.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.ZeroIndexBuffer.Target">
            <summary>
            Invalid for <see cref="T:CSharpGL.ZeroIndexBuffer"/>.
            </summary>
        </member>
        <member name="P:CSharpGL.ZeroIndexBuffer.FirstVertex">
            <summary>
            要渲染的第一个顶点的位置。<para>Index of first vertex to be rendered.</para>
            </summary>
        </member>
        <member name="P:CSharpGL.ZeroIndexBuffer.RenderingVertexCount">
            <summary>
            要渲染多少个元素？<para>How many vertexes to be rendered?</para>
            </summary>
        </member>
        <member name="T:CSharpGL.BlendingDestinationFactor">
            <summary>
            BlendingDestinationFactor
            </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.Zero">
            <summary>
            The initial value is GL_ZERO
            </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.One">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.SourceColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.OneMinusSourceColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.DestinationColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.OneMinusDestinationColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.SourceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.OneMinusSourceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.DestinationAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.OneMinusDestinationAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.ConstantColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.OneMinusConstantColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.ConstantAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingDestinationFactor.OneMinusConstantAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.BlendingSourceFactor">
            <summary>
            The blending source factor.
            </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.One">
            <summary>
            The initial value is GL_ONE
            </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.Zero">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.SourceColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.OneMinusSourceColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.DestinationColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.OneMinusDestinationColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.SourceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.OneMinusSourceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.DestinationAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.OneMinusDestinationAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.ConstantColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.OneMinusConstantColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.ConstantAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.OneMinusConstantAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BlendingSourceFactor.SourceAlphaSaturate">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.BufferTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.ArrayBuffer">
            <summary>
            vertex attribute buffer object.
            </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.ElementArrayBuffer">
            <summary>
            glDrawElements().
            </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.InvalidTarget">
            <summary>
            This means that this buffer doesn't have (or need) a valid binding target.
            </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.UniformBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.TransformFeedbackBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.PixelUnpackBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.PixelPackBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.AtomicCounterBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.TextureBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferTarget.ShaderStorageBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.BufferUsage">
            <summary>
            <para>Static-只需要一次指定缓冲区对象中的数据,但使用次数很多.</para>
            <para>Dynamic-数据不仅需要时常更新,使用次数也很多.</para>
            <para>Stream-缓冲区的对象需要时常更新,但使用次数很少.</para>
            <para>Draw-数据作为顶点数据,用于渲染.</para>
            <para>Read-数据从一个OpenGL缓冲区(桢缓冲区之类的)读取,并在程序中与渲染并不直接相关的各种计算过程中使用.</para>
            <para>Copy-数据从一个OpenGL缓冲区读取,然后作为顶点数据,用于渲染.</para>
            </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.StreamDraw">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.StreamRead">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.StreamCopy">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.StaticDraw">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.StaticRead">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.StaticCopy">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.DynamicDraw">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.DynamicRead">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BufferUsage.DynamicCopy">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DebugMessageControlSource">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.DONT_CARE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.API">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.WINDOW_SYSTEM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.SHADER_COMPILER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.THIRD_PARTY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.APPLICATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSource.OTHER">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DebugMessageControlType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DONT_CARE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DEBUG_TYPE_ERROR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DEBUG_TYPE_DEPRECATED_BEHAVIOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DEBUG_TYPE_UNDEFINED_BEHAVIOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DEBUG_TYPE_PORTABILITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DEBUG_TYPE_PERFORMANCE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlType.DEBUG_TYPE_OTHER">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DebugMessageControlSeverity">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSeverity.DONT_CARE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSeverity.DEBUG_SEVERITY_HIGH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSeverity.DEBUG_SEVERITY_MEDIUM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugMessageControlSeverity.DEBUG_SEVERITY_LOW">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DebugSource">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSource.DEBUG_SOURCE_API">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSource.DEBUG_SOURCE_WINDOW_SYSTEM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSource.DEBUG_SOURCE_SHADER_COMPILER">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSource.DEBUG_SOURCE_THIRD_PARTY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSource.DEBUG_SOURCE_APPLICATION">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSource.DEBUG_SOURCE_OTHER">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DebugType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugType.DEBUG_TYPE_ERROR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugType.DEBUG_TYPE_DEPRECATED_BEHAVIOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugType.DEBUG_TYPE_UNDEFINED_BEHAVIOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugType.DEBUG_TYPE_PORTABILITY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugType.DEBUG_TYPE_PERFORMANCE">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugType.DEBUG_TYPE_OTHER">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DebugSeverity">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSeverity.DEBUG_SEVERITY_HIGH">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSeverity.DEBUG_SEVERITY_MEDIUM">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DebugSeverity.DEBUG_SEVERITY_LOW">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.DrawMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.Points">
            <summary>
            GL_POINTS = 0x0000;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.Lines">
            <summary>
            GL_LINES = 0x0001;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.LineLoop">
            <summary>
            GL_LINE_LOOP = 0x0002;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.LineStrip">
            <summary>
            GL_LINE_STRIP = 0x0003;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.Triangles">
            <summary>
            GL_TRIANGLES = 0x0004;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.TriangleStrip">
            <summary>
            GL_TRIANGLE_STRIP = 0x0005;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.TriangleFan">
            <summary>
            GL_TRIANGLE_FAN = 0x0006;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.Quads">
            <summary>
            GL_QUADS = 0x0007;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.QuadStrip">
            <summary>
            GL_QUAD_STRIP = 0x0008;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.Polygon">
            <summary>
            GL_POLYGON = 0x0009;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.LinesAdjacency">
            <summary>
            GL_LINES_ADJACENCY = 0x000A;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.LineStripAdjacency">
            <summary>
            GL_LINE_STRIP_ADJACENCY = 0x000B;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.TrianglesAdjacency">
            <summary>
            GL_TRIANGLES_ADJACENCY = 0x000C;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.TriangleStripAdjacency">
            <summary>
            GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
            </summary>
        </member>
        <member name="F:CSharpGL.DrawMode.Patches">
            <summary>
            GL_PATCHES = 0xE;
            </summary>
        </member>
        <member name="T:CSharpGL.GetTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentIndex">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentNormal">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentTextureCoords">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentRasterColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentRasterIndex">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentRasterTextureCoords">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentRasterPosition">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentRasterPositionValid">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CurrentRasterDistance">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PointSmooth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PointSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PointSizeRange">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PointSizeGranularity">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineSmooth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineWidth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineWidthRange">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineWidthGranularity">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineStipple">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineStipplePattern">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineStippleRepeat">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ListMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxListNesting">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ListBase">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ListIndex">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PolygonMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PolygonSmooth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PolygonStipple">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.EdgeFlag">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CullFace">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.CullFaceMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FrontFace">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Lighting">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LightModelLocalViewer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LightModelTwoSide">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LightModelAmbient">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ShadeModel">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ColorMaterialFace">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ColorMaterialParameter">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ColorMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Fog">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogIndex">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogDensity">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogStart">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogEnd">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthRange">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthTest">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthWritemask">
            <summary>
            Gets result of glDepthMask(bool writable);
            </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthClearValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthFunc">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AccumClearValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilTest">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilClearValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilFunc">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilValueMask">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilFail">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilPassDepthFail">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilPassDepthPass">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilRef">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilWritemask">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilBackWritemask">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MatrixMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Normalize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Viewport">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ModelviewStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ProjectionStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.TextureStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ModelviewMatix">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ProjectionMatrix">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.TextureMatrix">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AttribStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ClientAttribStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AlphaTest">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AlphaTestFunc">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AlphaTestRef">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Dither">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.BlendDst">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.BlendSrc">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Blend">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LogicOpMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexLogicOp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ColorLogicOp">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AuxBuffers">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DrawBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ReadBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ScissorBox">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ScissorTest">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexClearValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexWritemask">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ColorClearValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ColorWritemask">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.RgbaMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DoubleBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Stereo">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.RenderMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PerspectiveCorrectionHint">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PointSmoothHint">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LineSmoothHint">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PolygonSmoothHint">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FogHint">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.TextureGenS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.TextureGenT">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.TextureGenR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.TextureGenQ">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoI">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapStoS">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoG">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapRtoR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapGtoG">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapBtoB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapAtoA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoISize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapStoSSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoRSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoGSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoBSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapItoASize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapRtoRSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapGtoGSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapBtoBSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PixelMapAtoASize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.UnpackSwapBytes">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.LsbFirst">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.UnpackRowLength">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.UnpackSkipRows">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.UnpackSkipPixels">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.UnpackAlignment">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PackSwapBytes">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PackLsbFirst">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PackRowLength">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PackSkipRows">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PackSkipPixels">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.PackAlignment">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MapColor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MapStencil">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexShift">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexOffset">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.RedScale">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.RedBias">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ZoomX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.ZoomY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.GreenScale">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.GreenBias">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.BlueScale">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.BlueBias">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AlphaScale">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AlphaBias">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthScale">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthBias">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MapEvalOrder">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxLights">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxClipPlanes">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxTextureSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MapPixelMapTable">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxAttribStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxModelviewStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxNameStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxProjectionStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxTextureStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxViewportDims">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.MaxClientAttribStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.SubpixelBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.IndexBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.RedBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.GreenBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.BlueBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AlphaBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.DepthBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.StencilBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AccumRedBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AccumGreenBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AccumBlueBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AccumAlphaBits">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.NameStackDepth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.AutoNormal">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1Color4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1Index">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1Normal">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1TextureCoord1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1TextureCoord2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1TextureCoord3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1TextureCoord4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1Vertex3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1Vertex4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2Color4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2Index">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2Normal">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2TextureCoord1">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2TextureCoord2">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2TextureCoord3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2TextureCoord4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2Vertex3">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2Vertex4">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1GridDomain">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map1GridSegments">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2GridDomain">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Map2GridSegments">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Texture1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FeedbackBufferPointer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FeedbackBufferSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.FeedbackBufferType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.SelectionBufferPointer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.SelectionBufferSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTarget.UniformBufferOffsetAlignment">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.GetTexImageTargets">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.Texture1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.Texture3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.TextureCubeMapPositiveX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.TextureCubeMapNegativeX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.TextureCubeMapPositiveY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.TextureCubeMapNegativeY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.TextureCubeMapPositiveZ">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTargets.TextureCubeMapNegativeZ">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.GetTexImageFormats">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.Red">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.Green">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.Blue">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.Alpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.RGB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.BGR">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.RGBA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.BGRA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.Luminance">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageFormats.LuminanceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.GetTexImageTypes">
            <summary>
            在你需要使用加入这些选项：
            GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV
            check: https://www.opengl.org/sdk/docs/man2/xhtml/glGetTexImage.xml
            </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTypes.UnsignedByte">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTypes.UnsignedShort565">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTypes.UnsignedShort4444">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.GetTexImageTypes.UnsignedShort5551">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.HintMode">
            <summary>
            The hint mode.
            </summary>
        </member>
        <member name="F:CSharpGL.HintMode.DontCare">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HintMode.Fastest">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HintMode.Nicest">
            <summary>
            The
            </summary>
        </member>
        <member name="T:CSharpGL.HintTarget">
            <summary>
            The hint target.
            </summary>
        </member>
        <member name="F:CSharpGL.HintTarget.PerspectiveCorrection">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HintTarget.PointSmooth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HintTarget.LineSmooth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HintTarget.PolygonSmooth">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.HintTarget.Fog">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.MapBufferAccess">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferAccess.ReadOnly">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferAccess.WriteOnly">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MapBufferAccess.ReadWrite">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.MemoryBarrierFlags">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.VertexAttribArrayBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.ElementArrayBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.UniformBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.TextureFetchBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.ShaderImageAccessBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.CommandBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.PixelBufferBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.TextureUpdateBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.BufferUpdateBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.FramebufferBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.TransformFeedbackBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.QueryBufferBarrier">
            <summary>
            only gl 4.4 or higher.
            </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.AtomicCounterBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.ClientMappedBufferBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.MemoryBarrierFlags.ShaderStorageBarrier">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PatchParameterName">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PatchParameterName.PatchVertices">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PatchParameterName.PatchDefaultOuterLevel">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PatchParameterName.PatchDefaultInnerLevel">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.PolygonModeFaces">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.PolygonModeFaces.Front">
            <summary>
            表示显示模式将适用于物体的前向面（也就是物体能看到的面）
            </summary>
        </member>
        <member name="F:CSharpGL.PolygonModeFaces.Back">
            <summary>
            表示显示模式将适用于物体的后向面（也就是物体上不能看到的面）
            </summary>
        </member>
        <member name="F:CSharpGL.PolygonModeFaces.FrontAndBack">
            <summary>
            表示显示模式将适用于物体的所有面
            </summary>
        </member>
        <member name="T:CSharpGL.PolygonMode">
            <summary>
            The Polygon mode.
            </summary>
        </member>
        <member name="F:CSharpGL.PolygonMode.Point">
            <summary>
            Render as points.
            </summary>
        </member>
        <member name="F:CSharpGL.PolygonMode.Line">
            <summary>
            Render as lines.
            </summary>
        </member>
        <member name="F:CSharpGL.PolygonMode.Fill">
            <summary>
            Render as filled(surface).
            </summary>
        </member>
        <member name="T:CSharpGL.ShadeModel">
            <summary>
            ShadingModel
            </summary>
        </member>
        <member name="F:CSharpGL.ShadeModel.Flat">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ShadeModel.Smooth">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.ShaderType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ShaderType.VertexShader">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ShaderType.GeometryShader">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ShaderType.FragmentShader">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.ShaderType.ComputeShader">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexImage2DTargets">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DTargets.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DTargets.ProxyTexture2D">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexImage2DFormats">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DFormats.Alpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DFormats.RGB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DFormats.RGBA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DFormats.Luminance">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DFormats.LuminanceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexImage2DTypes">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DTypes.UnsignedByte">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DTypes.UnsignedShort565">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DTypes.UnsignedShort4444">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexImage2DTypes.UnsignedShort5551">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexStorage1DTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage1DTarget.Texture1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage1DTarget.ProxyTexture1D">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexStorage2DTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.ProxyTexture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.Texture1DArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.ProxyTexture1DArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.TextureRectangle">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.ProxyTextureRectangle">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.TextureCubeMap">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage2DTarget.ProxyTextureCubeMap">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexStorage3DTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage3DTarget.Texture3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage3DTarget.ProxyTexture3D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage3DTarget.Texture2DArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage3DTarget.ProxyTexture2DArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage3DTarget.TextureCubeMapArray">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexStorage3DTarget.ProxyTextureCubeMapArray">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexSubImage2DTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.Texture2D">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.TextureCubeMapPositiveX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.TextureCubeMapNegativeX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.TextureCubeMapPositiveY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.TextureCubeMapNegativeY">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.TextureCubeMapPositiveZ">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DTarget.TextureCubeMapNegativeZ">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexSubImage2DFormats">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DFormats.Alpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DFormats.RGB">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DFormats.RGBA">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DFormats.Luminance">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DFormats.LuminanceAlpha">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DFormats.RedInteger">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TexSubImage2DType">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DType.UnsignedByte">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DType.UnsignedShort565">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DType.UnsignedShort4444">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DType.UnsignedShort5551">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TexSubImage2DType.UnsignedInt">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.BindBufferBaseTarget">
            <summary>
            Used for BindBufferBase() or BindBufferRange()
            </summary>
        </member>
        <member name="F:CSharpGL.BindBufferBaseTarget.AtomicCounterBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BindBufferBaseTarget.TransformFeedbackBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BindBufferBaseTarget.UniformBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.BindBufferBaseTarget.ShaderStorageBuffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.TransformFeedbackTarget">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.TransformFeedbackTarget.TransformFeedback">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.WndProc">
            <summary>
            Windows process.
            </summary>
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.WindowStyles">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_MAXIMIZE">
            <summary>The window is initially maximized.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_POPUPWINDOW">
            <summary>The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_SIZEFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.</summary>
        </member>
        <member name="F:CSharpGL.WindowStyles.WS_VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="T:CSharpGL.WindowStylesEx">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:CSharpGL.WindowStylesEx.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="T:CSharpGL.WNDCLASSEX">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.cbSize">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.style">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.lpfnWndProc">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.cbClsExtra">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.cbWndExtra">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.hInstance">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.hIcon">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.hCursor">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.hbrBackground">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.lpszMenuName">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.lpszClassName">
             <summary>
            
             </summary>
        </member>
        <member name="F:CSharpGL.WNDCLASSEX.hIconSm">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.WNDCLASSEX.Init">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.FullDictionary`2">
            <summary>
            对于没有key的情况，统一返回一个固定值.
            <para>Returns a special value for keys not in the dictionary.</para>
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:CSharpGL.FullDictionary`2.defaultValue">
            <summary>
            对于没有key的情况，统一返回那个固定值.
            </summary>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.#ctor(`1)">
            <summary>
            对于没有key的情况，统一返回一个固定值.
            <para>Returns a special value for keys not in the dictionary.</para>
            </summary>
            <param name="defaultValue"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Add(`0,`1)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.ContainsKey(`0)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Remove(`0)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.TryGetValue(`0,`1@)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
             <summary>
            
             </summary>
             <param name="item"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Clear">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
             <summary>
            
             </summary>
             <param name="array"></param>
             <param name="arrayIndex"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Add(System.Object,System.Object)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Contains(System.Object)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.Remove(System.Object)">
             <summary>
            
             </summary>
             <param name="key"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.CopyTo(System.Array,System.Int32)">
             <summary>
            
             </summary>
             <param name="array"></param>
             <param name="index"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
            
             </summary>
             <param name="info"></param>
             <param name="context"></param>
        </member>
        <member name="M:CSharpGL.FullDictionary`2.OnDeserialization(System.Object)">
             <summary>
            
             </summary>
             <param name="sender"></param>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.Keys">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.Values">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.Item(`0)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.Count">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.IsReadOnly">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.IsFixedSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.Item(System.Object)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.IsSynchronized">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.FullDictionary`2.SyncRoot">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.RectangleHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.RectangleHelper.ToViewport(System.Drawing.Rectangle)">
             <summary>
            
             </summary>
             <param name="rect"></param>
             <returns></returns>
        </member>
        <member name="T:CSharpGL.Save2PictureHelper">
            <summary>
            Helper class for screen shot of OpenGL canvas.
            </summary>
        </member>
        <member name="M:CSharpGL.Save2PictureHelper.ScreenShot(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Screen shot of OpenGL canvas.
            </summary>
            <param name="x">mouse position(Left Down is (0, 0)).</param>
            <param name="y">mouse position(Left Down is (0, 0)).</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="T:CSharpGL.ArrayHelper">
            <summary>
            Helper class for array.
            </summary>
        </member>
        <member name="M:CSharpGL.ArrayHelper.PrintArray(System.Collections.IEnumerable,System.String)">
            <summary>
            Print elements in format 'element, element, element, ...'
            </summary>
            <param name="array"></param>
            <param name="seperator"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ArrayHelper.PrintVectors(System.Single[],System.Int32,System.String,System.String)">
            <summary>
            Print elements in format 'x,y,z; x,y,z; ...'
            </summary>
            <param name="array"></param>
            <param name="components">2, 3, or 4.</param>
            <param name="componentSeparator"></param>
            <param name="vectorSeparator"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.CurrentOS">
            <summary>
            Detects the current OS (Windows, Linux, MacOS)
            <para>CurrentOS Class by blez</para>
            <para>https://blez.wordpress.com/2012/09/17/determine-os-with-netmono/</para>
            </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.IsWindows">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.IsUnix">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.IsMac">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.IsLinux">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.IsUnknown">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.Is32bit">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.Is64bit">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.Is64BitProcess">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.Is32BitProcess">
             <summary>
            
             </summary>
        </member>
        <member name="P:CSharpGL.CurrentOS.Name">
             <summary>
            
             </summary>
        </member>
        <member name="T:CSharpGL.FloatHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.FloatHelper.ToShortString(System.Single)">
            <summary>
            获取float类型的简短描述。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.ManifestResourceLoader">
            <summary>
            A small helper class to load manifest resource files.
            </summary>
        </member>
        <member name="M:CSharpGL.ManifestResourceLoader.GetStream(System.String,System.Int32)">
            <summary>
            Loads the named manifest resource and returns each line in order.
            </summary>
            <param name="textFileName"></param>
            <param name="stackIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ManifestResourceLoader.GetLines(System.String,System.Int32)">
            <summary>
            Loads the named manifest resource and returns each line in order.
            </summary>
            <param name="textFileName"></param>
            <param name="stackIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.ManifestResourceLoader.LoadTextFile(System.String,System.Int32)">
            <summary>
            Loads the named manifest resource as a text string.
            </summary>
            <param name="textFileName">Name of the text file.</param>
            <param name="stackIndex"></param>
            <returns>The contents of the manifest resource.</returns>
        </member>
        <member name="M:CSharpGL.ManifestResourceLoader.LoadBitmap(System.String,System.Int32)">
            <summary>
            Loads bitmap in the manifest resource.
            </summary>
            <param name="filename"></param>
            <param name="stackIndex"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.PositionHelper">
             <summary>
            
             </summary>
        </member>
        <member name="M:CSharpGL.PositionHelper.Move2Center(CSharpGL.vec2[])">
            <summary>
            Move positions where around (0, 0)
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.PositionHelper.Move2Center(System.Collections.Generic.IList{CSharpGL.vec2})">
            <summary>
            Move positions where around (0, 0)
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.PositionHelper.Move2Center(CSharpGL.vec3[])">
            <summary>
            Move positions where around (0, 0, 0)
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:CSharpGL.PositionHelper.Move2Center(System.Collections.Generic.IList{CSharpGL.vec3})">
            <summary>
            Move positions where around (0, 0, 0)
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="T:CSharpGL.ChildList`1">
            <summary>
            children in <see cref="T:CSharpGL.ITreeNode`1"/>.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:CSharpGL.ChildList`1.parent">
            <summary>
            parent of this list's items.
            </summary>
        </member>
        <member name="M:CSharpGL.ChildList`1.#ctor(CSharpGL.ITreeNode{`0})">
            <summary>
            children in <see cref="T:CSharpGL.ITreeNode`1"/>.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:CSharpGL.ChildList`1.IndexOf(CSharpGL.ITreeNode{`0})">
            <summary>
            搜索指定的对象，并返回整个 System.Collections.Generic.List&lt;T&gt; 中第一个匹配项的从零开始的索引。
            </summary>
            <param name="item">要在 System.Collections.Generic.List&lt;T&gt; 中定位的对象。对于引用类型，该值可以为 null。</param>
            <returns>如果在整个 System.Collections.Generic.List&lt;T&gt; 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:CSharpGL.ChildList`1.Insert(System.Int32,CSharpGL.ITreeNode{`0})">
            <summary>
            将元素插入 System.Collections.Generic.List&lt;T&gt; 的指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入的对象。对于引用类型，该值可以为 null。</param>
        </member>
        <member name="M:CSharpGL.ChildList`1.RemoveAt(System.Int32)">
            <summary>
            移除 System.Collections.Generic.List&lt;T&gt; 的指定索引处的元素。
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:CSharpGL.ChildList`1.Add(CSharpGL.ITreeNode{`0})">
            <summary>
            将对象添加到 System.Collections.Generic.List&lt;T&gt; 的结尾处。
            </summary>
            <param name="item">要添加到 System.Collections.Generic.List&lt;T&gt; 的末尾处的对象。对于引用类型，该值可以为 null。</param>
        </member>
        <member name="M:CSharpGL.ChildList`1.AddRange(System.Collections.Generic.IEnumerable{CSharpGL.ITreeNode{`0}})">
            <summary>
            将指定集合的元素添加到 System.Collections.Generic.List&lt;T&gt; 的末尾。
            </summary>
            <param name="items">一个集合，其元素应被添加到 System.Collections.Generic.List&lt;T&gt; 的末尾。集合自身不能为 null，但它可以包含为null 的元素（如果类型 T 为引用类型）。</param>
        </member>
        <member name="M:CSharpGL.ChildList`1.Clear">
            <summary>
            从 System.Collections.Generic.List&lt;T&gt;中移除所有元素。
            </summary>
        </member>
        <member name="M:CSharpGL.ChildList`1.Contains(CSharpGL.ITreeNode{`0})">
            <summary>
            确定某元素是否在 System.Collections.Generic.List&lt;T&gt;中。
            </summary>
            <param name="item">要在 System.Collections.Generic.List&lt;T&gt; 中定位的对象。对于引用类型，该值可以为 null。</param>
            <returns>如果在 System.Collections.Generic.List&lt;T&gt; 中找到 item，则为 true，否则为 false。</returns>
        </member>
        <member name="M:CSharpGL.ChildList`1.CopyTo(CSharpGL.ITreeNode{`0}[],System.Int32)">
            <summary>
            将整个 System.Collections.Generic.List&lt;T&gt; 复制到兼容的一维数组中，从目标数组的指定索引位置开始放置。
            </summary>
            <param name="array">作为从 System.Collections.Generic.List&lt;T&gt; 复制的元素的目标位置的一维 System.Array。System.Array必须具有从零开始的索引。</param>
            <param name="arrayIndex">array 中从零开始的索引，从此处开始复制。</param>
        </member>
        <member name="M:CSharpGL.ChildList`1.Remove(CSharpGL.ITreeNode{`0})">
            <summary>
            从 System.Collections.Generic.List&lt;T&gt; 中移除特定对象的第一个匹配项。
            </summary>
            <param name="item">要从 System.Collections.Generic.List&lt;T&gt; 中移除的对象。对于引用类型，该值可以为 null。</param>
            <returns>如果成功移除 item，则为 true；否则为 false。如果在 System.Collections.Generic.List&lt;T&gt; 中没有找到item，该方法也会返回 false。</returns>
        </member>
        <member name="M:CSharpGL.ChildList`1.GetEnumerator">
            <summary>
            返回循环访问 System.Collections.Generic.List&lt;T&gt; 的枚举数。
            </summary>
            <returns>用于 System.Collections.Generic.List&lt;T&gt; 的 System.Collections.Generic.List&lt;T&gt;.Enumerator。</returns>
        </member>
        <member name="M:CSharpGL.ChildList`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="E:CSharpGL.ChildList`1.ItemAdded">
            <summary>
            invoked when an item is added into this list.
            </summary>
        </member>
        <member name="E:CSharpGL.ChildList`1.ItemRemoved">
            <summary>
            invoked when an item is removed from this list.
            </summary>
        </member>
        <member name="P:CSharpGL.ChildList`1.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:CSharpGL.ChildList`1.Count">
            <summary>
            获取 System.Collections.Generic.List&lt;T&gt; 中实际包含的元素数。
            </summary>
        </member>
        <member name="P:CSharpGL.ChildList`1.IsReadOnly">
            <summary>
            获取一个值，该值指示 System.Collections.Generic.ICollection&lt;T&gt; 是否为只读。
            </summary>
        </member>
        <member name="T:CSharpGL.AddTreeNodeEventArgs`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:CSharpGL.AddTreeNodeEventArgs`1.#ctor(CSharpGL.ITreeNode{`0})">
             <summary>
            
             </summary>
             <param name="newItem"></param>
        </member>
        <member name="M:CSharpGL.AddTreeNodeEventArgs`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.AddTreeNodeEventArgs`1.NewItem">
            <summary>
            newly added item.
            </summary>
        </member>
        <member name="T:CSharpGL.RemoveTreeNodeEventArgs`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:CSharpGL.RemoveTreeNodeEventArgs`1.#ctor(CSharpGL.ITreeNode{`0})">
             <summary>
            
             </summary>
             <param name="removedItem"></param>
        </member>
        <member name="M:CSharpGL.RemoveTreeNodeEventArgs`1.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:CSharpGL.RemoveTreeNodeEventArgs`1.RemovedItem">
            <summary>
            removed item.
            </summary>
        </member>
    </members>
</doc>
